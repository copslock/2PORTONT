#ifndef __ASSEMBLER__
    #define OTTO_SRAM_START 0x9f000000
    #define OTTO_SRAM_SIZE 0x8000
    #define OTTO_SRAM_MASK 0x7fff
    #define OTTO_KSEG2_BASE 0xC0000000
    #define CACHELINE_SIZE 0x20
    #define TLB_PAGE_SHIFT 12
    #define TLB_PAGE_SIZE (1 << 12)
    #define TLB_PAGE_MASK ((1 << 12) - 1)
    #define TLB_NUM_TLB_ENTRY 64
    #define TLB_NUM_TLB_MASK 0x3f
    #define OTTO_LPLR_ENTRY 0x9fc00000
    #define OTTO_LPLR_SIZE 0x20000
    #define OTTO_LPLR_CHECKSUM_OFFSET 0x1c
    #define OTTO_SPI_NAND_PLR_ENTRY 0x9f000000
    #define OTTO_ONFI_PLR_ENTRY 0x9f000000
    #define OTTO_SPI_NOR_PLR_ENTRY 0x9fc00000
    #define OTTO_HEADER_OFFSET 0x20
    #define UART_BASE_ADDR 0xb8002000
    #define MAX_PAGE_BUF_SIZE 4096
    #define MAX_OOB_BUF_SIZE 256
    #define MAX_ECC_BUF_SIZE 32
    #define MAX_BIG_BUFFER_SIZE 4096+256+32
    #define MAX_BYTE_PER_DMA 0x10000
    #define MAX_PLR_FIRST_LOAD_PAGE 32
    #define MAX_PLR_FIRST_LOAD_PAGE_NUM 65536
    #define MIN_STACK_SIZE 0xC00
    #define CC_PLAT_FLAGS -march=5281 -mtune=5281 -Wno-unused-result
    #define AS_PLAT_FLAGS -march=5281 -mtune=5281
    
    
    #define NAND_SPI_USE_SIO 
    
    #define SRAM_CTRL_INIT li t0, 0xB8001300; lui t1, %hi(OTTO_SRAM_START); lui t3, 0x1FFF; and t1, t1, t3; ori t1, t1, 0x1; li t3, 0xB8004000; lw t2, 4(t3); sw t1, 0(t0); sw t2, 4(t0); sw t1, 0(t3);
    #define _lplr_soc_t (*(soc_t*)(OTTO_LPLR_ENTRY+OTTO_HEADER_OFFSET))
    #define _lplr_bios (_lplr_soc_t.bios)
    #define _lplr_header (_lplr_bios.header)
#else //__ASSEMBLER__
    #define OTTO_SRAM_START 0x9f000000
    #define OTTO_SRAM_SIZE 0x8000
    #define OTTO_SRAM_MASK 0x7fff
    #define OTTO_KSEG2_BASE 0xC0000000
    #define CACHELINE_SIZE 0x20
    #define TLB_PAGE_SHIFT 12
    #define TLB_PAGE_SIZE (1 << 12)
    #define TLB_PAGE_MASK ((1 << 12) - 1)
    #define TLB_NUM_TLB_ENTRY 64
    #define TLB_NUM_TLB_MASK 0x3f
    #define OTTO_LPLR_ENTRY 0x9fc00000
    #define OTTO_LPLR_SIZE 0x20000
    #define OTTO_LPLR_CHECKSUM_OFFSET 0x1c
    #define OTTO_SPI_NAND_PLR_ENTRY 0x9f000000
    #define OTTO_ONFI_PLR_ENTRY 0x9f000000
    #define OTTO_SPI_NOR_PLR_ENTRY 0x9fc00000
    #define OTTO_HEADER_OFFSET 0x20
    #define UART_BASE_ADDR 0xb8002000
    #define MAX_PAGE_BUF_SIZE 4096
    #define MAX_OOB_BUF_SIZE 256
    #define MAX_ECC_BUF_SIZE 32
    #define MAX_BIG_BUFFER_SIZE 4096+256+32
    #define MAX_BYTE_PER_DMA 0x10000
    #define MAX_PLR_FIRST_LOAD_PAGE 32
    #define MAX_PLR_FIRST_LOAD_PAGE_NUM 65536
    #define MIN_STACK_SIZE 0xC00
    #define CC_PLAT_FLAGS -march=5281 -mtune=5281 -Wno-unused-result
    #define AS_PLAT_FLAGS -march=5281 -mtune=5281
    
    
    #define NAND_SPI_USE_SIO 
    
    #define SRAM_CTRL_INIT li t0, 0xB8001300; lui t1, %hi(OTTO_SRAM_START); lui t3, 0x1FFF; and t1, t1, t3; ori t1, t1, 0x1; li t3, 0xB8004000; lw t2, 4(t3); sw t1, 0(t0); sw t2, 4(t0); sw t1, 0(t3);
    #define _lplr_soc_t (*(soc_t*)(OTTO_LPLR_ENTRY+OTTO_HEADER_OFFSET))
    #define _lplr_bios (_lplr_soc_t.bios)
    #define _lplr_header (_lplr_bios.header)
#endif //__ASSEMBLER__

