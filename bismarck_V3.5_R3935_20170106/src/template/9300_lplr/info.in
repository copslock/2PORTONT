platform_name 		:= 9300
OTTO_ENTRY 		:= $(OTTO_LPLR_ENTRY)
TARGET_OUT 		:= release/lplr.out
OTTO_ENTRY_SYMB 	:= lplr_S_entry
OTTO_FLASH_NAND_SPI 	:= 1
MAX_LPLR_CHUNK 		:= 128

# SPI NAND driver relative policy decision
NSU_DRIVER_IN_ROM	:=
spi_nand_path		:= src/platform/$(platform_name)/spi_nand
spi_nand_path_prefix	:= $(spi_nand_path)/spi_nand_
SPI_NAND_VENDOR 	+= winbond.c gd_zentel.c
EXTRA_C_SRC 		= $(addprefix $(spi_nand_path_prefix), $(SPI_NAND_VENDOR))
MIPS16_OBJS 		+= $(patsubst $(spi_nand_path)/%.c, %.o, $(shell ls -U $(EXTRA_C_SRC) 2> /dev/null))

#OTTO_LDS 		:= "./src/lds/lplr_nand_spi.lds"
#OTTO_STARTUP 		:= "./src/lib/startup/lplr_startup.S"

EXPORT_SYMB_PROTO_PRINTF := 1
EXPORT_SYMB_CACHE_OP 	 := 1

__MIPS16_C_SRC_FILE = $(addprefix $(template_dir)/, ab_proto_printf.c ab_spi_nand_*.c ab_ecc_ctrl.c ab_LzmaDec.c)
MIPS16_OBJS += $(patsubst $(template_dir)/%.c, %.o, $(shell ls -U $(__MIPS16_C_SRC_FILE) 2> /dev/null))

# initial memory layout; which used before running preloader
# because preloader will change the address of those buffers (include stack)
OTTO_LPLR_IPSEC_DESC_SIZE       := 0x70
OTTO_LPLR_IPSEC_ENCRYPT_SIZE    := 0xE000
OTTO_LPLR_IPSEC_DESC_ADDR       := ( $(OTTO_SRAM_START) + $(OTTO_LPLR_IPSEC_ENCRYPT_SIZE) - $(OTTO_LPLR_IPSEC_DESC_SIZE) )

OTTO_LPLR_SPI_NAND_BUFFER_END	:= ( $(OTTO_SRAM_START) + $(OTTO_SRAM_SIZE) )
OTTO_LPLR_SPI_NAND_ECC_BUFFER	:= ( $(OTTO_LPLR_SPI_NAND_BUFFER_END) - $(MAX_ECC_BUF_SIZE) )
OTTO_LPLR_SPI_NAND_OOB_BUFFER	:= ( $(OTTO_LPLR_SPI_NAND_ECC_BUFFER) - $(MAX_OOB_BUF_SIZE) )
OTTO_LPLR_SPI_NAND_PAGE_BUFFER	:= ( $(OTTO_LPLR_SPI_NAND_OOB_BUFFER) - $(MAX_PAGE_BUF_SIZE) )
OTTO_LPLR_SPI_NAND_STACK_DEF	:= ( $(OTTO_LPLR_SPI_NAND_PAGE_BUFFER) - 4 )

OTTO_ISR_ENTRY_OFFSET := 0x380

