/*----------------------------------------------------------------------
 * This file is generated by mk_parser.py.
 *----------------------------------------------------------------------*/
#ifndef __CPARSER_TREE_H__
#define __CPARSER_TREE_H__

extern cparser_node_t cparser_root;

cparser_result_t cparser_cmd_exit(cparser_context_t *context);
cparser_result_t cparser_cmd_sdk_test_group_item(cparser_context_t *context,
    char **item_ptr);
cparser_result_t cparser_cmd_sdk_test_case_id_start_end(cparser_context_t *context,
    uint32_t *start_ptr,
    uint32_t *end_ptr);
cparser_result_t cparser_cmd_classf_show(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_clear(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_init(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_add_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_classf_del_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_classf_del_entry_all(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_get_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_classf_get_entry_valid(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_get_upstream_unmatch_act(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_get_downstream_unmatch_act(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_get_remarking_dscp(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_get_cf_sel_port(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_get_range_ip_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_classf_get_range_l4port_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_classf_get_permit_sel_range(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_get_us_1p_remark_prior(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_get_template_pattern0_us_ds_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_classf_get_num_pattern1(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_get_default_wan_if(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_rule_direction_upstream_downstream(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_rule_tos_sid_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_tag_vid_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_tag_priority_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_internal_priority_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_svlan_bit_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_cvlan_bit_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_uni_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_ether_type_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_hit_acl_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_inner_vlan_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_range_l4port_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_range_ip_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_wan_if_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_ipmc_bit_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_ip6mc_bit_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_ipmc_ip6mc_bit_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_igmp_bit_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_mld_bit_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_igmp_mld_bit_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_dei_cfi_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_pppoe_bit_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_ipv4_bit_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_ipv6_bit_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_intVidTagIf_bit_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_hit_cf_acl_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_stpid_sel_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_template_entry_entry(cparser_context_t *context,
    uint32_t *entry_ptr);
cparser_result_t cparser_cmd_classf_set_operation_entry_index_upstream_downstream_hit_not(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_classf_set_upstream_action_svlan_act_nop_vs_tpid_c_tpid_del_transparent_stag_tpid_act_disable_vs_tpid2(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_upstream_action_cvlan_act_nop_c_tag_c2s_del_transparent_act_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_upstream_action_svlan_id_act_assign_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_classf_set_upstream_action_svlan_id_act_copy_outer_copy_inner_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_classf_set_upstream_action_svlan_id_act_nop(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_upstream_action_svlan_priority_act_assign_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_classf_set_upstream_action_svlan_priority_act_copy_outer_copy_inner_internal_priority_dscp_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_classf_set_upstream_action_svlan_priority_act_nop(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_upstream_action_cvlan_id_act_assign_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_classf_set_upstream_action_cvlan_id_act_copy_outer_copy_inner_internal_vid_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_classf_set_upstream_action_cvlan_id_act_nop(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_upstream_action_cvlan_priority_act_assign_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_classf_set_upstream_action_cvlan_priority_act_copy_outer_copy_inner_internal_priority_dscp_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_classf_set_upstream_action_cvlan_priority_act_nop(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_upstream_action_sid_act_sid_qid_id(cparser_context_t *context,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_classf_set_upstream_action_sid_act_nop_act_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_upstream_action_priority_act_follow_swcore_act_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_upstream_action_priority_act_assign_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_classf_set_upstream_action_remark_dscp_enable_disable_act_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_upstream_action_remark_dscp_dscp(cparser_context_t *context,
    uint32_t *dscp_ptr);
cparser_result_t cparser_cmd_classf_set_upstream_action_drop_enable_disable_act_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_upstream_action_trap_drop_pon(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_upstream_action_statistic_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_classf_set_downstream_action_svlan_act_nop_vs_tpid_c_tpid_del_transparent_sp2c_stag_tpid_act_disable_vs_tpid2(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_downstream_action_svlan_id_act_assign_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_classf_set_downstream_action_svlan_id_act_copy_outer_copy_inner_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_classf_set_downstream_action_svlan_id_act_sp2c_nop(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_downstream_action_svlan_priority_act_assign_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_classf_set_downstream_action_svlan_priority_act_copy_outer_copy_inner_internal_priority_dscp_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_classf_set_downstream_action_svlan_priority_act_sp2c_nop(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_downstream_action_cvlan_act_nop_c_tag_sp2c_del_transparent_act_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_downstream_action_cvlan_id_act_copy_outer_copy_inner_lookup_table_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_classf_set_downstream_action_cvlan_id_act_nop_sp2c(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_downstream_action_cvlan_id_act_assign_cvid(cparser_context_t *context,
    uint32_t *cvid_ptr);
cparser_result_t cparser_cmd_classf_set_downstream_action_cvlan_priority_act_copy_outer_copy_inner_internal_priority_dscp_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_classf_set_downstream_action_cvlan_priority_act_nop_sp2c(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_downstream_action_cvlan_priority_act_assign_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_classf_set_downstream_action_priority_act_follow_swcore_act_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_downstream_action_priority_act_assign_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_classf_set_downstream_action_uni_forward_act_flood_forced_port_ports_all_none(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_classf_set_downstream_action_uni_forward_act_nop_trap_act_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_downstream_action_remark_dscp_enable_disable_act_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_downstream_action_remark_dscp_dscp(cparser_context_t *context,
    uint32_t *dscp_ptr);
cparser_result_t cparser_cmd_classf_set_upstream_unmatch_act_drop_permit_permit_without_pon(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_downstream_unmatch_act_drop_permit(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_remarking_dscp_priority_priority_dscp_dscp(cparser_context_t *context,
    uint32_t *priority_ptr,
    uint32_t *dscp_ptr);
cparser_result_t cparser_cmd_classf_set_cf_sel_port_pon_rg_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_range_ip_entry_index_type_sip_dip(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_classf_set_range_ip_entry_index_low_bound_low_bound_ip_up_bound_up_bound_ip(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *low_bound_ip_ptr,
    uint32_t *up_bound_ip_ptr);
cparser_result_t cparser_cmd_classf_set_range_l4port_entry_index_type_src_port_dst_port(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_classf_set_range_l4port_entry_index_low_bound_l4lport_up_bound_l4uport(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *l4lport_ptr,
    uint32_t *l4uport_ptr);
cparser_result_t cparser_cmd_classf_set_permit_sel_range_0to511_64to511(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_us_1p_remark_prior_cf_acl(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_template_pattern0_us_ds_index_vid_cfg_ingress_cvid_ingress_outer_vid_internal_cvid_pri_cfg_ingress_cpri_internal_pri_remark_cpri(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_classf_set_num_pattern1_num(cparser_context_t *context,
    uint32_t *num_ptr);
cparser_result_t cparser_cmd_classf_set_default_wan_if_l2_l2wan(cparser_context_t *context,
    uint32_t *l2wan_ptr);
cparser_result_t cparser_cmd_classf_set_default_wan_if_mcast_mcastwan(cparser_context_t *context,
    uint32_t *mcastwan_ptr);
cparser_result_t cparser_cmd_acl_init(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_show(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_show_rule(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_show_action(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_show_template(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_clear(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_clear_action(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_clear_template(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_add_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_add_template_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_del_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_del_entry_all(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_del_template_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_get_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_get_entry_index_action(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_get_entry_valid(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_get_range_vid_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_get_range_ip_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_get_range_l4port_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_get_range_length_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_get_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_acl_get_port_ports_all_permit(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_acl_get_template_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_get_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_get_reason(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_get_reason_all_cvlan_svlan_priority_policing_forward_extend_route(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_get_meter_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_rule_dmac_smac_data_mac_mask_mac_mask(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr,
    cparser_macaddr_t *mac_mask_ptr);
cparser_result_t cparser_cmd_acl_set_rule_dmac_smac_data_mac(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_acl_set_rule_sip_dip_data_ip_mask_ip_mask(cparser_context_t *context,
    uint32_t *ip_ptr,
    uint32_t *ip_mask_ptr);
cparser_result_t cparser_cmd_acl_set_rule_sip_dip_data_ip(cparser_context_t *context,
    uint32_t *ip_ptr);
cparser_result_t cparser_cmd_acl_set_rule_sip6_dip6_data_ip6(cparser_context_t *context,
    char **ip6_ptr);
cparser_result_t cparser_cmd_acl_set_rule_sip6_dip6_data_ip6_mask_ip6_mask(cparser_context_t *context,
    char **ip6_ptr,
    char **ip6_mask_ptr);
cparser_result_t cparser_cmd_acl_set_rule_ethertype_gemport_llid_next_header_ip_proto_data_data(cparser_context_t *context,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_acl_set_rule_ethertype_gemport_llid_next_header_ip_proto_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_acl_set_rule_sip_inner_dip_inner_data_ip_mask_ip_mask(cparser_context_t *context,
    uint32_t *ip_ptr,
    uint32_t *ip_mask_ptr);
cparser_result_t cparser_cmd_acl_set_rule_sip_inner_dip_inner_data_ip(cparser_context_t *context,
    uint32_t *ip_ptr);
cparser_result_t cparser_cmd_acl_set_rule_ip_proto_inner_frame_type_tags_data_data(cparser_context_t *context,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_acl_set_rule_ip_proto_inner_frame_type_tags_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_acl_set_rule_range_l4port_0_range_l4port_1_range_ip_0_range_ip_1_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_acl_set_rule_range_l4port_care_range_list(cparser_context_t *context,
    char **list_ptr);
cparser_result_t cparser_cmd_acl_set_rule_range_l4port_care_range_list_none_mask_range_mask(cparser_context_t *context,
    char **list_ptr,
    char **mask_ptr);
cparser_result_t cparser_cmd_acl_set_rule_range_vid_range_ip_range_length_care_range_list(cparser_context_t *context,
    char **list_ptr);
cparser_result_t cparser_cmd_acl_set_rule_range_vid_range_ip_range_length_care_range_list_none_mask_range_mask(cparser_context_t *context,
    char **list_ptr,
    char **mask_ptr);
cparser_result_t cparser_cmd_acl_set_rule_ctag_data_vid_vid_priority_priority_cfi_cfi(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *priority_ptr,
    uint32_t *cfi_ptr);
cparser_result_t cparser_cmd_acl_set_rule_ctag_data_vid_vid_priority_priority_cfi_cfi_mask_vid_vid_mask_priority_priority_mask_cfi_cfi_mask(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *priority_ptr,
    uint32_t *cfi_ptr,
    uint32_t *vid_mask_ptr,
    uint32_t *priority_mask_ptr,
    uint32_t *cfi_mask_ptr);
cparser_result_t cparser_cmd_acl_set_rule_stag_data_vid_vid_priority_priority_dei_dei(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *priority_ptr,
    uint32_t *dei_ptr);
cparser_result_t cparser_cmd_acl_set_rule_stag_data_vid_vid_priority_priority_dei_dei_mask_vid_vid_mask_priority_priority_mask_dei_dei_mask(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *priority_ptr,
    uint32_t *dei_ptr,
    uint32_t *vid_mask_ptr,
    uint32_t *priority_mask_ptr,
    uint32_t *dei_mask_ptr);
cparser_result_t cparser_cmd_acl_set_rule_user_field_index_data_data(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_acl_set_rule_user_field_index_data_data_mask_mask(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_acl_set_rule_pattern_field_index_index_data_data(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_acl_set_rule_pattern_field_index_index_data_data_mask_mask(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_acl_set_rule_field_valid_care_field_list(cparser_context_t *context,
    char **list_ptr);
cparser_result_t cparser_cmd_acl_set_rule_field_valid_care_field_list_mask_field_mask(cparser_context_t *context,
    char **list_ptr,
    char **mask_ptr);
cparser_result_t cparser_cmd_acl_set_rule_ext_data_data(cparser_context_t *context,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_acl_set_rule_ext_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_acl_set_rule_care_tags_ctag_ip_ipv6_pppoe_stag_tcp_udp(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_rule_port_ports_all_none(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_acl_set_rule_template_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_rule_operation_reverse_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_rule_state_valid_invalid(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_range_vid_entry_index_state_invalid_valid(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_range_vid_entry_index_type_svid_cvid(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_range_vid_entry_index_low_bound_vid(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_acl_set_range_vid_entry_index_up_bound_vid(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_acl_set_range_ip_entry_index_state_invalid_valid(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_range_ip_entry_index_type_sip_dip_sip6_dip6_sip_inner_dip_inner(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_range_ip_entry_index_low_bound_low_bound_ip_up_bound_up_bound_ip(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *low_bound_ip_ptr,
    uint32_t *up_bound_ip_ptr);
cparser_result_t cparser_cmd_acl_set_range_ip_entry_index_low_bound_ip6_low_ip_up_bound_ip6_up_ip(cparser_context_t *context,
    uint32_t *index_ptr,
    char **low_ip_ptr,
    char **up_ip_ptr);
cparser_result_t cparser_cmd_acl_set_range_l4port_entry_index_state_invalid_valid(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_range_l4port_entry_index_type_src_port_dst_port(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_range_l4port_entry_index_low_bound_l4port(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *l4port_ptr);
cparser_result_t cparser_cmd_acl_set_range_l4port_entry_index_up_bound_l4port(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *l4port_ptr);
cparser_result_t cparser_cmd_acl_set_range_length_entry_index_low_bound_length(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *length_ptr);
cparser_result_t cparser_cmd_acl_set_range_length_entry_index_up_bound_length(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *length_ptr);
cparser_result_t cparser_cmd_acl_set_range_length_entry_index_reverse_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_port_ports_all_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_acl_set_port_ports_all_permit_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_acl_set_action_cvlan_ingress_vid_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_acl_set_action_cvlan_egress_vid_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_acl_set_action_cvlan_using_svid(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_action_cvlan_meter_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_action_cvlan_statistic_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_action_cvlan_remarking_dot1p_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_acl_set_action_cvlan_bandwidth_metering_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_action_svlan_ingress_svid_svid(cparser_context_t *context,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_acl_set_action_svlan_egress_svid_svid(cparser_context_t *context,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_acl_set_action_svlan_using_cvid(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_action_svlan_meter_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_action_svlan_statistic_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_action_svlan_remarking_dscp_dscp(cparser_context_t *context,
    uint32_t *dscp_ptr);
cparser_result_t cparser_cmd_acl_set_action_svlan_remarking_dot1p_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_acl_set_action_svlan_route_nexthop_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_action_svlan_bandwidth_metering_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_action_priority_assign_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_acl_set_action_priority_remarking_dscp_dscp(cparser_context_t *context,
    uint32_t *dscp_ptr);
cparser_result_t cparser_cmd_acl_set_action_priority_remarking_dot1p_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_acl_set_action_priority_meter_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_action_priority_statistic_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_action_priority_route_nexthop_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_action_priority_bandwidth_metering_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_action_remarking_dscp_dscp(cparser_context_t *context,
    uint32_t *dscp_ptr);
cparser_result_t cparser_cmd_acl_set_action_remarking_dot1p_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_acl_set_action_meter_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_action_statistic_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_action_bandwidth_metering_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_action_police_remarking_dot1p_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_acl_set_action_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_action_drop(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_action_copy_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_action_forward_nop(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_action_copy_port_ports_all_none(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_acl_set_action_redirect_port_ports_all_none(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_acl_set_action_mirror_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_acl_set_action_egressmember_port_ports_all_none(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_acl_set_action_interrupt(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_action_latch_index(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_action_classf_none(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_action_classf_sid_sid(cparser_context_t *context,
    uint32_t *sid_ptr);
cparser_result_t cparser_cmd_acl_set_action_classf_llid_llid(cparser_context_t *context,
    uint32_t *llid_ptr);
cparser_result_t cparser_cmd_acl_set_action_classf_ext_member_ext_all(cparser_context_t *context,
    char **ext_ptr);
cparser_result_t cparser_cmd_acl_set_action_classf_remarking_dot1p_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_acl_set_action_route_nexthop_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_action_route_remarking_dot1p_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_acl_set_action_none(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_template_stag_ctag_ethertype_gem_llid_ipv6_next_header_unknown_range_ip(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_template_dip_sip_range_length(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_template_smac_dmac_range_l4port(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_template_sip6_dip6_range_vid(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_template_sip_15_0_sip_31_16_dip_15_0_dip_31_16_ipv4_protocol(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_template_sip6_15_0_sip6_31_16_dip6_15_0_dip6_31_16(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_template_sip6_47_32_sip6_63_48_dip6_47_32_dip6_63_48(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_template_sip6_79_64_sip6_95_80_sip6_111_96_sip6_127_112(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_template_dip6_79_64_dip6_95_80_dip6_111_96_dip6_127_112(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_template_smac_15_0_smac_31_16_smac_47_32_dmac_15_0_dmac_31_16_dmac_47_32(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_template_user_field_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_template_field_valid_ext_pmask(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_mode_64_entries_128_entries(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_meter_mode_policing_only_bandwidth_occupy(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_dump_debug_counter(cparser_context_t *context);
cparser_result_t cparser_cmd_field_selector_set_index_index_format_default_raw_llc_pppoe_arp_ipv4_header_ipv6_header_ip_payload_l4_payload_offset_offset(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *offset_ptr);
cparser_result_t cparser_cmd_field_selector_get_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_svlan_init(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_create_svlan_table_svid_svid(cparser_context_t *context,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_svlan_destroy_svlan_table_all(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_destroy_svlan_table_svid_svid(cparser_context_t *context,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_svlan_get_priority_source(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_service_port(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_port_ports_all_svid(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_svlan_get_port_ports_all_svlan_index(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_svlan_get_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_svlan_get_entry_all(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_vlan_conversion_c2s_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_svlan_get_vlan_conversion_c2s_entry_all(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_vlan_conversion_c2s_vid_vid_port_ports_all(cparser_context_t *context,
    uint32_t *vid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_svlan_get_vlan_conversion_mc2s_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_svlan_get_vlan_conversion_mc2s_entry_all(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_vlan_conversion_mc2s_ip_ip_ip_mask_ip_mask(cparser_context_t *context,
    uint32_t *ip_ptr,
    uint32_t *ip_mask_ptr);
cparser_result_t cparser_cmd_svlan_get_vlan_conversion_mc2s_mac_address_mac_mac_mask_mac_mask(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr,
    cparser_macaddr_t *mac_mask_ptr);
cparser_result_t cparser_cmd_svlan_get_vlan_conversion_sp2c_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_svlan_get_vlan_conversion_sp2c_entry_all(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_vlan_conversion_sp2c_svid_svid_port_port(cparser_context_t *context,
    uint32_t *svid_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_svlan_get_vlan_conversion_sp2c_unmatch_action(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_svlan_table_svid_svid(cparser_context_t *context,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_svlan_get_tpid(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_tpid_entry_index_tpid(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_svlan_get_tpid_entry_index_state(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_svlan_get_trap_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_state(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_dei_keep_state(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_untag(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_unmatch(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_vlan_aggregation_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_svlan_get_vlan_aggregation_forced_state(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_vlan_aggregation_vlan_type(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_lookup_type(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_ds_unctag_cvid(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_set_priority_source_internal_priority_dot1q_priority_svlan_member_config_port_based_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_set_service_port_ports_all_none(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_svlan_set_port_ports_all_svid_svid(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_svlan_set_port_ports_all_svlan_index_svidx(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *svidx_ptr);
cparser_result_t cparser_cmd_svlan_set_entry_index_svid_svid(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_svlan_set_entry_index_member_ports_all_none(cparser_context_t *context,
    uint32_t *index_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_svlan_set_entry_index_tag_member_untag_member_ports_all_none(cparser_context_t *context,
    uint32_t *index_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_svlan_set_entry_index_priority_priority(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_svlan_set_entry_index_fid_msti_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_svlan_set_entry_index_fid_msti_fid_msti(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *fid_msti_ptr);
cparser_result_t cparser_cmd_svlan_set_entry_index_enhanced_fid_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_svlan_set_entry_index_enhanced_fid_efid(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *efid_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_c2s_entry_index_enhanced_vid_evid(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *evid_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_c2s_entry_index_member_ports_all_none(cparser_context_t *context,
    uint32_t *index_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_c2s_entry_index_svlan_index_svidx(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *svidx_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_mc2s_entry_index_state_invalid_valid(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_mc2s_entry_index_format_dip_dmac(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_mc2s_entry_index_ip_ip_ip_mask_ip_mask(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *ip_ptr,
    uint32_t *ip_mask_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_mc2s_entry_index_mac_address_mac_mac_mask_mac_mask(cparser_context_t *context,
    uint32_t *index_ptr,
    cparser_macaddr_t *mac_ptr,
    cparser_macaddr_t *mac_mask_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_mc2s_entry_index_svlan_index_svidx(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *svidx_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_sp2c_entry_index_state_invalid_valid(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_sp2c_entry_index_svlan_index_svidx(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *svidx_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_sp2c_entry_index_port_port(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_sp2c_entry_index_vid_vid(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_sp2c_unmatch_action_untag_ctag(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_set_svlan_table_svid_svid_member_ports_all_none(cparser_context_t *context,
    uint32_t *svid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_svlan_set_svlan_table_svid_svid_tag_member_ports_all_none(cparser_context_t *context,
    uint32_t *svid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_svlan_set_svlan_table_svid_svid_untag_member_ports_all_none(cparser_context_t *context,
    uint32_t *svid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_svlan_set_svlan_table_svid_svid_priority_priority(cparser_context_t *context,
    uint32_t *svid_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_svlan_set_svlan_table_svid_svid_fid_msti_state_disable_enable(cparser_context_t *context,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_svlan_set_svlan_table_svid_svid_fid_msti_fid_msti(cparser_context_t *context,
    uint32_t *svid_ptr,
    uint32_t *fid_msti_ptr);
cparser_result_t cparser_cmd_svlan_set_svlan_table_svid_svid_enhanced_fid_state_disable_enable(cparser_context_t *context,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_svlan_set_svlan_table_svid_svid_enhanced_fid_efid(cparser_context_t *context,
    uint32_t *svid_ptr,
    uint32_t *efid_ptr);
cparser_result_t cparser_cmd_svlan_set_tpid_tpid(cparser_context_t *context,
    uint32_t *tpid_ptr);
cparser_result_t cparser_cmd_svlan_set_tpid_entry_index_tpid_tpid(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *tpid_ptr);
cparser_result_t cparser_cmd_svlan_set_tpid_entry_index_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_svlan_set_trap_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_svlan_set_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_set_dei_keep_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_set_untag_drop_trap_to_cpu_port_based_svid(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_set_untag_assign_svlan_svid_svid(cparser_context_t *context,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_svlan_set_unmatch_drop_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_set_unmatch_assign_svlan_svid_svid(cparser_context_t *context,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_aggregation_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_aggregation_forced_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_set_vlan_aggregation_vlan_type_svl_only_ivl_and_svl(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_set_lookup_type_svlan_table_vlan_4k_table(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_set_ds_unctag_cvid_no_cvlan_ingress_cvid(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_del_vlan_conversion_c2s_vid_vid_port_ports_all_svid_svid(cparser_context_t *context,
    uint32_t *vid_ptr,
    char **ports_ptr,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_svlan_del_vlan_conversion_mc2s_ip_ip_ip_mask_ip_mask(cparser_context_t *context,
    uint32_t *ip_ptr,
    uint32_t *ip_mask_ptr);
cparser_result_t cparser_cmd_svlan_del_vlan_conversion_mc2s_mac_address_mac_mac_mask_mac_mask(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr,
    cparser_macaddr_t *mac_mask_ptr);
cparser_result_t cparser_cmd_svlan_del_vlan_conversion_sp2c_svid_svid_port_port(cparser_context_t *context,
    uint32_t *svid_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_svlan_add_vlan_conversion_c2s_vid_vid_port_ports_all_svid_svid(cparser_context_t *context,
    uint32_t *vid_ptr,
    char **ports_ptr,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_svlan_add_vlan_conversion_mc2s_ip_ip_ip_mask_ip_mask_svid_svid(cparser_context_t *context,
    uint32_t *ip_ptr,
    uint32_t *ip_mask_ptr,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_svlan_add_vlan_conversion_mc2s_mac_address_mac_mac_mask_mac_mask_svid_svid(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr,
    cparser_macaddr_t *mac_mask_ptr,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_svlan_add_vlan_conversion_sp2c_svid_svid_port_port_vid_vid(cparser_context_t *context,
    uint32_t *svid_ptr,
    uint32_t *port_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_svlan_add_vlan_conversion_sp2c_svid_svid_port_port_priority_priority(cparser_context_t *context,
    uint32_t *svid_ptr,
    uint32_t *port_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_vlan_init(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_create_vlan_table_vid_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_destroy_vlan_table_all_restore_default_vlan(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_destroy_vlan_table_all_untag(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_destroy_vlan_table_vid_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_destroy_entry_all(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_destroy_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_get_state(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_get_vlan_treat_vid_0_4095_type(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_get_accept_frame_type_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_ingress_filter_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_egress_port_egr_ports_all_keep_tag_ingress_port_igr_ports_all_state(cparser_context_t *context,
    char **egr_ports_ptr,
    char **igr_ports_ptr);
cparser_result_t cparser_cmd_vlan_get_transparent_state(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_get_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_get_entry_all(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_get_protocol_vlan_group_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_get_protocol_vlan_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_protocol_vlan_ext_ext(cparser_context_t *context,
    char **ext_ptr);
cparser_result_t cparser_cmd_vlan_get_pvid_port_ports_all_vlan_index(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_pvid_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_ext_pvid_port_ports_vlan_index(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_ext_pvid_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_tag_mode_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_tag_mode_ip4mc_ip6mc_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_vlan_table_vid_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_get_ext_member_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_get_cfi_keep(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_get_keep_format_cdp_csstp_state(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_get_keep_format_rma_rma_tail_state(cparser_context_t *context,
    uint32_t *rma_tail_ptr);
cparser_result_t cparser_cmd_vlan_get_port_based_fid_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_port_based_pri_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_leaky_ip_mcast_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_leaky_cdp_csstp_igmp_mld_state(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_get_leaky_rma_rma_tail_state(cparser_context_t *context,
    uint32_t *rma_tail_ptr);
cparser_result_t cparser_cmd_vlan_set_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_set_vlan_treat_vid_0_4095_type_tagging_un_tagging(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_set_accept_frame_type_port_ports_all_all_tag_only_untag_only_priority_tag_and_tag(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_ingress_filter_port_ports_all_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_egress_port_egr_ports_all_keep_tag_ingress_port_igr_ports_all_state_enable_disable(cparser_context_t *context,
    char **egr_ports_ptr,
    char **igr_ports_ptr);
cparser_result_t cparser_cmd_vlan_set_transparent_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_set_entry_index_enhanced_vid_evid(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *evid_ptr);
cparser_result_t cparser_cmd_vlan_set_entry_index_fid_msti_fid_msti(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *fid_msti_ptr);
cparser_result_t cparser_cmd_vlan_set_entry_index_member_ports_all_none(cparser_context_t *context,
    uint32_t *index_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_entry_index_ext_member_ext_all_none(cparser_context_t *context,
    uint32_t *index_ptr,
    char **ext_ptr);
cparser_result_t cparser_cmd_vlan_set_entry_index_vlan_based_policing_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_entry_index_meter_meter(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *meter_ptr);
cparser_result_t cparser_cmd_vlan_set_entry_index_vlan_based_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_entry_index_vlan_based_priority_priority_priority(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_vlan_set_protocol_vlan_group_index_frame_type_ethernet_snap_llc_other_frame_type(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *frame_type_ptr);
cparser_result_t cparser_cmd_vlan_set_protocol_vlan_port_ports_all_group_index_state_enable_disable(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_protocol_vlan_port_ports_all_group_index_vid_vid_priority_priority(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *index_ptr,
    uint32_t *vid_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_vlan_set_protocol_vlan_ext_ext_group_index_vid_vid(cparser_context_t *context,
    char **ext_ptr,
    uint32_t *index_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_set_protocol_vlan_ext_ext_group_index_state_enable_disable(cparser_context_t *context,
    char **ext_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_pvid_port_ports_all_vlan_index_index(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_pvid_port_ports_all_vid(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_set_ext_pvid_port_ports_vlan_index_index(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_ext_pvid_port_ports_all_vid(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_set_tag_mode_port_ports_all_original_keep_format_priority_tag(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_tag_mode_ip4mc_ip6mc_port_ports_all_original_keep_format_priority_tag_default(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_hash_mode_ivl_svl(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_member_ports_all_none(cparser_context_t *context,
    uint32_t *vid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_tag_member_ports_all_none(cparser_context_t *context,
    uint32_t *vid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_untag_member_ports_all_none(cparser_context_t *context,
    uint32_t *vid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_svlan_hash_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_fid_msti_fid_msti(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *fid_msti_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_ext_member_ext_all_none(cparser_context_t *context,
    uint32_t *vid_ptr,
    char **ext_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_vlan_based_policing_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_meter_meter(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *meter_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_vlan_based_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_vlan_based_priority_priority_priority(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_ext_member_index_index(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_ext_member_entry_index_member_ext_all_none(cparser_context_t *context,
    uint32_t *index_ptr,
    char **ext_ptr);
cparser_result_t cparser_cmd_vlan_set_cfi_keep_cfi_to_0_keep_cfi(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_set_keep_format_cdp_csstp_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_set_keep_format_rma_rma_tail_state_disable_enable(cparser_context_t *context,
    uint32_t *rma_tail_ptr);
cparser_result_t cparser_cmd_vlan_set_port_based_fid_port_ports_all_filter_id_fid(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *fid_ptr);
cparser_result_t cparser_cmd_vlan_set_port_based_fid_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_port_based_pri_port_ports_all_priority_priority(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_vlan_set_leaky_ip_mcast_port_ports_all_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_leaky_cdp_csstp_igmp_mld_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_set_leaky_rma_rma_tail_state_disable_enable(cparser_context_t *context,
    uint32_t *rma_tail_ptr);
cparser_result_t cparser_cmd_l2_table_init(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_del_all_include_static(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_del_ip_mcast_dip_dip(cparser_context_t *context,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_del_ip_mcast_sip_sip_dip_dip(cparser_context_t *context,
    uint32_t *sip_ptr,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_del_ip_mcast_filter_id_fid_dip_dip_sip_filter_sip_index_index(cparser_context_t *context,
    uint32_t *fid_ptr,
    uint32_t *dip_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l2_table_del_ip_mcast_filter_id_fid_dip_dip(cparser_context_t *context,
    uint32_t *fid_ptr,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_del_ip_mcast_vid_vid_dip_dip_sip_filter_sip_index_index(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *dip_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l2_table_del_ip_mcast_vid_vid_dip_dip(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_del_ip_mcast_dip6_dip(cparser_context_t *context,
    char **dip_ptr);
cparser_result_t cparser_cmd_l2_table_del_mac_mcast_filter_id_fid_mac_address_mac(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_del_mac_mcast_vid_vid_mac_address_mac(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_del_mac_ucast_vid_vid_mac_address_mac(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_del_mac_ucast_filter_id_fid_mac_address_mac(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_get_ip_mcast_dip_dip(cparser_context_t *context,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_get_ip_mcast_sip_sip_dip_dip(cparser_context_t *context,
    uint32_t *sip_ptr,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_get_ip_mcast_filter_id_fid_dip_dip_sip_filter_sip_index_index(cparser_context_t *context,
    uint32_t *fid_ptr,
    uint32_t *dip_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l2_table_get_ip_mcast_filter_id_fid_dip_dip(cparser_context_t *context,
    uint32_t *fid_ptr,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_get_ip_mcast_vid_vid_dip_dip_sip_filter_sip_index_index(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *dip_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l2_table_get_ip_mcast_vid_vid_dip_dip(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_get_ip_mcast_dip6_dip(cparser_context_t *context,
    char **dip_ptr);
cparser_result_t cparser_cmd_l2_table_get_mac_mcast_filter_id_fid_mac_address_mac(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_get_mac_mcast_vid_vid_mac_address_mac(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_get_mac_ucast_filter_id_fid_mac_address_mac_enhanced_filter_id_efid(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *efid_ptr);
cparser_result_t cparser_cmd_l2_table_get_mac_ucast_filter_id_fid_mac_address_mac(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_get_mac_ucast_vid_vid_mac_address_mac_enhanced_filter_id_efid(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *efid_ptr);
cparser_result_t cparser_cmd_l2_table_get_mac_ucast_vid_vid_mac_address_mac(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_get_aging_out_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_get_aging_time(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_cam_state(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_cam_full_act(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_limit_learning_action(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_limit_learning_count(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_limit_learning_entry_action(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_limit_learning_include(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_limit_learning_port_ports_all_action(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_get_limit_learning_port_ports_all_count(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_get_learning_count(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_learning_count_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_get_link_down_flush_state(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_lookup_miss_multicast_trap_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_lookup_miss_multicast_reserved_flooding(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_lookup_miss_multicast_reserved_action_ipv4_ipv6_action(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_lookup_miss_multicast_reserved_addr_ipv6(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_lookup_miss_multicast_trap_icmpv6_dhcpv6_state(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_lookup_miss_broadcast_unicast_multicast_flood_ports(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_lookup_miss_port_ports_all_multicast_ip_mcast_ip6_mcast_unicast_broadcast_action(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_get_lookup_hit_unicast_forwarding(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_lookup_hit_wan_ports(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_ip_mcast_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_ipv6_mcast_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_ext_mbr_cfg_cfg_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l2_table_get_vid_unmatch_port_ports_all_action(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_get_port_move_unknown_sa_port_ports_all_action(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_get_ip_mcast_data_port_ports_all_action(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_get_entry_address_address(cparser_context_t *context,
    uint32_t *address_ptr);
cparser_result_t cparser_cmd_l2_table_get_entry_address_valid(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_next_entry_address_address(cparser_context_t *context,
    uint32_t *address_ptr);
cparser_result_t cparser_cmd_l2_table_get_next_entry_mac_ucast_address_address(cparser_context_t *context,
    uint32_t *address_ptr);
cparser_result_t cparser_cmd_l2_table_get_next_entry_mac_ucast_address_address_spn_port(cparser_context_t *context,
    uint32_t *address_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_l2_table_get_next_entry_l2_mcast_address_address(cparser_context_t *context,
    uint32_t *address_ptr);
cparser_result_t cparser_cmd_l2_table_get_next_entry_ip_mcast_address_address(cparser_context_t *context,
    uint32_t *address_ptr);
cparser_result_t cparser_cmd_l2_table_get_next_entry_l2_ip_mcast_address_address(cparser_context_t *context,
    uint32_t *address_ptr);
cparser_result_t cparser_cmd_l2_table_get_src_port_egress_filter_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_get_src_port_egress_filter_ext_exts_state(cparser_context_t *context,
    char **exts_ptr);
cparser_result_t cparser_cmd_l2_table_get_learning_exceed(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_learning_exceed_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_get_nolearn_aging_state(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_svl_untag_vid_learn(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_arp_usage_as_known(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_dip_dip_port_ports_all_none(cparser_context_t *context,
    uint32_t *dip_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_dip_dip_port_ports_all_none_l3_interface_index(cparser_context_t *context,
    uint32_t *dip_ptr,
    char **ports_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_dip_dip_priority_priority(cparser_context_t *context,
    uint32_t *dip_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_dip_dip_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_dip_dip_ext_ext_all_none(cparser_context_t *context,
    uint32_t *dip_ptr,
    char **ext_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_dip_dip_l3routing_state_disable_enable(cparser_context_t *context,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_dip_dip_forcedl3routing_state_disable_enable(cparser_context_t *context,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_sip_sip_dip_dip_port_ports_all_none(cparser_context_t *context,
    uint32_t *sip_ptr,
    uint32_t *dip_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_sip_sip_dip_dip_priority_priority(cparser_context_t *context,
    uint32_t *sip_ptr,
    uint32_t *dip_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_sip_sip_dip_dip_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *sip_ptr,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_sip_sip_dip_dip_ext_ext_all_none(cparser_context_t *context,
    uint32_t *sip_ptr,
    uint32_t *dip_ptr,
    char **ext_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_filter_id_fid_dip_dip_sip_filter_sip_index_index_port_ports_all_none(cparser_context_t *context,
    uint32_t *fid_ptr,
    uint32_t *dip_ptr,
    uint32_t *index_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_filter_id_fid_dip_dip_sip_filter_sip_index_index_port_ports_all_none_l3_interface_l3index(cparser_context_t *context,
    uint32_t *fid_ptr,
    uint32_t *dip_ptr,
    uint32_t *index_ptr,
    char **ports_ptr,
    uint32_t *l3index_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_filter_id_fid_dip_dip_sip_filter_sip_index_index_ext_ext_all_none(cparser_context_t *context,
    uint32_t *fid_ptr,
    uint32_t *dip_ptr,
    uint32_t *index_ptr,
    char **ext_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_filter_id_fid_dip_dip_sip_filter_sip_index_index_l3routing_state_disable_enable(cparser_context_t *context,
    uint32_t *fid_ptr,
    uint32_t *dip_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_filter_id_fid_dip_dip_port_ports_all_none(cparser_context_t *context,
    uint32_t *fid_ptr,
    uint32_t *dip_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_filter_id_fid_dip_dip_port_ports_all_none_l3_interface_l3index(cparser_context_t *context,
    uint32_t *fid_ptr,
    uint32_t *dip_ptr,
    char **ports_ptr,
    uint32_t *l3index_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_filter_id_fid_dip_dip_ext_ext_all_none(cparser_context_t *context,
    uint32_t *fid_ptr,
    uint32_t *dip_ptr,
    char **ext_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_filter_id_fid_dip_dip_l3routing_state_disable_enable(cparser_context_t *context,
    uint32_t *fid_ptr,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_vid_vid_dip_dip_sip_filter_sip_index_index_ext_ext_all_none(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *dip_ptr,
    uint32_t *index_ptr,
    char **ext_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_vid_vid_dip_dip_sip_filter_sip_index_index_port_ports_all_none(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *dip_ptr,
    uint32_t *index_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_vid_vid_dip_dip_sip_filter_sip_index_index_port_ports_all_none_l3_interface_l3index(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *dip_ptr,
    uint32_t *index_ptr,
    char **ports_ptr,
    uint32_t *l3index_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_vid_vid_dip_dip_sip_filter_sip_index_index_l3routing_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *dip_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_vid_vid_dip_dip_l3routing_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_vid_vid_dip_dip_port_ports_all_none_l3_interface_l3index(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *dip_ptr,
    char **ports_ptr,
    uint32_t *l3index_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_vid_vid_dip_dip_port_ports_all_none(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *dip_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_vid_vid_dip_dip_priority_priority(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *dip_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_vid_vid_dip_dip_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_vid_vid_dip_dip_ext_ext_all_none(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *dip_ptr,
    char **ext_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_dip6_dip_port_ports_all_none(cparser_context_t *context,
    char **dip_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_dip6_dip_ext_ext_all_none(cparser_context_t *context,
    char **dip_ptr,
    char **ext_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_dip6_dip_l3routing_state_disable_enable(cparser_context_t *context,
    char **dip_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_dip6_dip_l3table_index(cparser_context_t *context,
    char **dip_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_mcast_filter_id_fid_mac_address_mac_port_ports_all_none(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_mcast_filter_id_fid_mac_address_mac_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_mcast_filter_id_fid_mac_address_mac_priority_priority(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_mcast_filter_id_fid_mac_address_mac_ext_ext_all_none(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr,
    char **ext_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_mcast_vid_vid_mac_address_mac_port_ports_all_none(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_mcast_vid_vid_mac_address_mac_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_mcast_vid_vid_mac_address_mac_priority_priority(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_mcast_vid_vid_mac_address_mac_ext_ext_all_none(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr,
    char **ext_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_spn_port(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_age_age(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *age_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_static_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_filter_id_fid(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *fid_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_priority_priority(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_sa_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_arp_usage_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_auth_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_da_block_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_sa_block_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_ext_spn_port(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_ctag_if_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_ctag_if_vid_cvid(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *cvid_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_spn_port(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_vid_vid(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_age_age(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *age_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_static_state_disable_enable(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_priority_priority(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_sa_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_arp_usage_state_disable_enable(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_auth_state_disable_enable(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_da_block_state_disable_enable(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_sa_block_state_disable_enable(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_ext_spn_port(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_ctag_if_state_disable_enable(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_ctag_if_vid_cvid(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *cvid_ptr);
cparser_result_t cparser_cmd_l2_table_set_mac_ucast_enhanced_filter_id_efid(cparser_context_t *context,
    uint32_t *efid_ptr);
cparser_result_t cparser_cmd_l2_table_set_aging_out_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_aging_time_time(cparser_context_t *context,
    uint32_t *time_ptr);
cparser_result_t cparser_cmd_l2_table_set_cam_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_cam_full_act_forward_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_limit_learning_action_copy_to_cpu_drop_forward_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_limit_learning_count_count(cparser_context_t *context,
    uint32_t *count_ptr);
cparser_result_t cparser_cmd_l2_table_set_limit_learning_count_unlimited(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_limit_learning_entry_action_forward_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_limit_learning_include_ports_all_none(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_limit_learning_port_ports_all_action_copy_to_cpu_drop_forward_trap_to_cpu(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_limit_learning_port_ports_all_count_count(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *count_ptr);
cparser_result_t cparser_cmd_l2_table_set_limit_learning_port_ports_all_count_unlimited(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_link_down_flush_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_lookup_miss_multicast_trap_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l2_table_set_lookup_miss_multicast_reserved_flooding_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_lookup_miss_multicast_reserved_action_ipv4_ipv6_action_normal_uknown_mc_flood_in_vlan_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_lookup_miss_multicast_reserved_addr_ipv6_1_2_5_8_e_solicited_node_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_lookup_miss_multicast_trap_icmpv6_dhcpv6_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_lookup_miss_broadcast_unicast_multicast_flood_ports_ports_all_none(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_lookup_miss_port_ports_all_ip_mcast_ip6_mcast_action_drop_flood_in_vlan_trap_to_cpu(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_lookup_miss_port_ports_all_multicast_action_drop_drop_exclude_rma_flood_in_vlan_trap_to_cpu(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_lookup_miss_port_ports_all_unicast_action_drop_flood_in_vlan_trap_to_cpu(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_lookup_miss_port_ports_all_broadcast_action_flood_in_vlan_trap_to_cpu_follow_fb(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_lookup_hit_unicast_forwarding_lut_fb_fb_lut(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_lookup_hit_wan_port_ports_all_none(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_ip_mcast_mode_dip_dip_and_sip_dip_and_vid_vid_and_mac_dip_and_cvid_dip_and_fid_vid(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_ipv6_mcast_mode_mac_and_fid_vid_dip(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_ext_mbr_cfg_cfg_index_index_ext_exts(cparser_context_t *context,
    uint32_t *index_ptr,
    char **exts_ptr);
cparser_result_t cparser_cmd_l2_table_set_vid_unmatch_port_ports_all_action_forward_trap_to_cpu(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_port_move_unknown_sa_port_ports_all_action_copy_to_cpu_drop_forward_trap_to_cpu(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_mac_ucast(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_flush_mac_ucast_include_static(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_flush_mac_ucast_static_only(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_flush_mac_ucast_port_ports_all_filter_id_fid(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *fid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_mac_ucast_port_ports_all_filter_id_fid_include_static(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *fid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_mac_ucast_port_ports_all_filter_id_fid_static_only(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *fid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_mac_ucast_port_ports_all_vid_vid(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_mac_ucast_port_ports_all_vid_vid_include_static(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_mac_ucast_port_ports_all_vid_vid_static_only(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_mac_ucast_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_mac_ucast_port_ports_all_include_static(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_mac_ucast_port_ports_all_static_only(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_ip_mcast_data_port_ports_all_action_forward_drop(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_src_port_egress_filter_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_src_port_egress_filter_ext_exts_state_disable_enable(cparser_context_t *context,
    char **exts_ptr);
cparser_result_t cparser_cmd_l2_table_set_nolearn_aging_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_svl_untag_vid_learn_ingress_vid_vid0(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_arp_usage_as_known_follow_age_always_known(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_clear_learning_exceed(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_clear_learning_exceed_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_clear_l2_table(cparser_context_t *context);
cparser_result_t cparser_cmd_igmp_get_ip_mcast_lookup_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_igmp_get_igmpv1_igmpv2_igmpv3_mldv1_mldv2_port_ports_all_action(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_igmp_get_ip_mcast_table_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_igmp_get_ip_mcast_sip_table_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_igmp_get_igmp_mld_vlan_leaky_isolation_leaky_state(cparser_context_t *context);
cparser_result_t cparser_cmd_igmp_get_igmp_mld_checksum_error_action(cparser_context_t *context);
cparser_result_t cparser_cmd_igmp_get_igmp_mld_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_igmp_set_ip_mcast_lookup_mode_dip_and_sip_dip_only(cparser_context_t *context);
cparser_result_t cparser_cmd_igmp_set_igmpv1_igmpv2_igmpv3_mldv1_mldv2_port_ports_all_action_drop_forward_trap_to_cpu(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_igmp_set_ip_mcast_table_index_index_group_ip_dip_port_ports_all_none(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *dip_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_igmp_set_ip_mcast_sip_table_index_index_sip_dip(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_igmp_set_igmp_mld_vlan_leaky_isolation_leaky_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_igmp_set_igmp_mld_checksum_error_action_drop_trap_to_cpu_forward(cparser_context_t *context);
cparser_result_t cparser_cmd_igmp_set_igmp_mld_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_port_init(cparser_context_t *context);
cparser_result_t cparser_cmd_port_dump_isolation(cparser_context_t *context);
cparser_result_t cparser_cmd_port_get_auto_nego_port_ports_all_ability(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_auto_nego_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_status_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_enhanced_fid_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_force_dmp_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_force_dmp(cparser_context_t *context);
cparser_result_t cparser_cmd_port_get_isolation_ext_ext(cparser_context_t *context,
    char **ext_ptr);
cparser_result_t cparser_cmd_port_get_isolation_ext_ext_mode0_mode1(cparser_context_t *context,
    char **ext_ptr);
cparser_result_t cparser_cmd_port_get_isolation_ext_l34_ext(cparser_context_t *context,
    char **ext_ptr);
cparser_result_t cparser_cmd_port_get_isolation_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_isolation_port_ports_all_mode0_mode1(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_isolation_port_l34_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_isolation_ctag(cparser_context_t *context);
cparser_result_t cparser_cmd_port_get_isolation_l34(cparser_context_t *context);
cparser_result_t cparser_cmd_port_get_isolation_leaky_ip_mcast_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_isolation_leaky_rma_rma_tail_state(cparser_context_t *context,
    uint32_t *rma_tail_ptr);
cparser_result_t cparser_cmd_port_get_isolation_leaky_igmp_cdp_csstp_state(cparser_context_t *context);
cparser_result_t cparser_cmd_port_get_master_slave_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phy_reg_port_ports_all_page_page_register_register(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *page_ptr,
    uint32_t *register_ptr);
cparser_result_t cparser_cmd_port_get_mac_force_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_rtct_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_special_congest_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_special_congest_ports_all_indicator(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phy_testmode_port_ports_all_test_mode(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_giga_lite_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phy_force_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_mac_loopback_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phy_force_power_down_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_enhanced_fid_port_ports_all_enhanced_fid_efid(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *efid_ptr);
cparser_result_t cparser_cmd_port_set_force_dmp_port_ports_all_port_mask_port_mask_all(cparser_context_t *context,
    char **ports_ptr,
    char **port_mask_ptr);
cparser_result_t cparser_cmd_port_set_force_dmp_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_port_set_isolation_ext_ext_vlan_index_vidx(cparser_context_t *context,
    char **ext_ptr,
    uint32_t *vidx_ptr);
cparser_result_t cparser_cmd_port_set_isolation_ext_ext_mode0_mode1_egress_port_egressports_none(cparser_context_t *context,
    char **ext_ptr,
    char **egressports_ptr);
cparser_result_t cparser_cmd_port_set_isolation_ext_ext_mode0_mode1_egress_ext_egress_ext_none(cparser_context_t *context,
    char **ext_ptr,
    char **egress_ext_ptr);
cparser_result_t cparser_cmd_port_set_isolation_ext_l34_ext_vlan_index_vidx(cparser_context_t *context,
    char **ext_ptr,
    uint32_t *vidx_ptr);
cparser_result_t cparser_cmd_port_set_isolation_port_ports_all_vlan_index_vidx(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *vidx_ptr);
cparser_result_t cparser_cmd_port_set_isolation_port_ports_all_mode0_mode1_egress_port_egressports_none(cparser_context_t *context,
    char **ports_ptr,
    char **egressports_ptr);
cparser_result_t cparser_cmd_port_set_isolation_port_ports_all_mode0_mode1_egress_ext_egress_ext_none(cparser_context_t *context,
    char **ports_ptr,
    char **egress_ext_ptr);
cparser_result_t cparser_cmd_port_set_isolation_port_l34_ports_all_vlan_index_vidx(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *vidx_ptr);
cparser_result_t cparser_cmd_port_set_isolation_ctag_mode0_mode1(cparser_context_t *context);
cparser_result_t cparser_cmd_port_set_isolation_l34_mode0_mode1(cparser_context_t *context);
cparser_result_t cparser_cmd_port_set_isolation_leaky_ip_mcast_port_ports_all_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_isolation_leaky_rma_rma_tail_state_enable_disable(cparser_context_t *context,
    uint32_t *rma_tail_ptr);
cparser_result_t cparser_cmd_port_set_isolation_leaky_igmp_cdp_csstp_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_port_set_master_slave_port_ports_all_auto_master_slave(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phy_reg_port_ports_all_page_page_register_register_data_data(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *page_ptr,
    uint32_t *register_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_port_set_auto_nego_port_ports_all_ability_10h_10f_100h_100f_1000f_flow_control_asy_flow_control(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_auto_nego_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_mac_force_port_ports_all_ability_10h_10f_100h_100f_1000f_flow_control_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_mac_force_port_ports_all_ability_speed_duplex_tx_pause_rx_pause_nway_link_state_lpi_100M_lpi_giga_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_mac_force_port_ports_all_lpi_100M_lpi_giga_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_mac_force_port_ports_all_link_state_link_down_link_up(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_mac_force_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_rtct_ports_all_start(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_special_congest_ports_all_sustain_timer_second(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *second_ptr);
cparser_result_t cparser_cmd_port_set_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phy_testmode_port_ports_all_test_mode_normal_1_2_3_4(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_giga_lite_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phy_force_port_ports_all_ability_10h_10f_100h_100f_1000f_flow_control_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_mac_loopback_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phy_force_power_down_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_clear_special_congest_ports_all_indicator(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_init(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_priority_selector_group_id_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_qos_get_priority_selector_port_ports_all_group_id(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_priority_to_queue_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_priority_to_queue(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_priority_to_queue_table_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_qos_get_remarking_port_ports_all_dscp_source(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_remarking_port_ports_all_dot1p_source(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_remarking_dscp_inter_priority_original_dscp(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remarking_dot1p_dscp_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_remarking_dot1p(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remapping_dot1p(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remapping_dscp(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remapping_forward_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remapping_forward_to_cpu_internal_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_qos_get_remapping_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_avb_remapping(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_avb_remapping_internal_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_qos_get_avb_remapping_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_scheduling_algorithm_port_ports_all_queue_id_qid(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_qos_get_scheduling_queue_weight_port_ports_all_queue_id_qid(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_qos_get_scheduling_type(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_set_priority_selector_group_id_index_port_weight(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_group_id_index_dot1q_weight(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_group_id_index_dscp_weight(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_group_id_index_acl_weight(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_group_id_index_lookup_table_weight(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_group_id_index_smac_weight(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_group_id_index_svlan_weight(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_group_id_index_vlan_weight(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_group_id_index_l4_weight(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_port_ports_all_group_id_index(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_qos_set_priority_to_queue_port_ports_all_table_index(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_qos_set_priority_to_queue_table_index_priority_priority_queue_id_qid(cparser_context_t *context,
    uint32_t *index_ptr,
    char **priority_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_port_ports_all_dscp_source_internal_priority_user_priority_dscp(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_port_ports_all_dot1p_source_original_ctag_priority_user_priority(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_dscp_inter_priority_priority_remarking_dscp_dscp(cparser_context_t *context,
    uint32_t *priority_ptr,
    uint32_t *dscp_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_dscp_original_dscp_original_dscp_remarking_dscp_remarking_dscp(cparser_context_t *context,
    char **original_dscp_ptr,
    uint32_t *remarking_dscp_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_dot1p_dscp_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_dot1p_user_priority_priority_dot1p_priority_dot1p_priority(cparser_context_t *context,
    uint32_t *priority_ptr,
    uint32_t *dot1p_priority_ptr);
cparser_result_t cparser_cmd_qos_set_remapping_dot1p_dot1p_priority_dot1p_priority_internal_priority_internal_priority(cparser_context_t *context,
    uint32_t *dot1p_priority_ptr,
    uint32_t *internal_priority_ptr);
cparser_result_t cparser_cmd_qos_set_remapping_dscp_dscp_dscp_internal_priority_priority(cparser_context_t *context,
    char **dscp_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_qos_set_remapping_forward_to_cpu_internal_priority_priority_remapping_priority_remapping_priority(cparser_context_t *context,
    uint32_t *priority_ptr,
    uint32_t *remapping_priority_ptr);
cparser_result_t cparser_cmd_qos_set_remapping_port_ports_all_internal_priority_priority(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_qos_set_avb_remapping_internal_priority_priority_user_priority_user_priority(cparser_context_t *context,
    uint32_t *priority_ptr,
    uint32_t *user_priority_ptr);
cparser_result_t cparser_cmd_qos_set_avb_remapping_port_ports_all_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_set_scheduling_algorithm_port_ports_all_queue_id_qid_strict_wfq(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_qos_set_scheduling_queue_weight_port_ports_all_queue_id_qid_weight_weight(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *qid_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_scheduling_type_wrr_wfq(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_init(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_get_egress_ifg(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_get_egress_ifg_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_bandwidth_get_egress_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_bandwidth_get_egress_port_ports_all_queue_id_qid_all(cparser_context_t *context,
    char **ports_ptr,
    char **qid_ptr);
cparser_result_t cparser_cmd_bandwidth_get_ingress_bypass_packet_state(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_get_ingress_flow_control_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_bandwidth_get_ingress_ifg_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_bandwidth_get_ingress_port_ports_all_rate(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_bandwidth_get_host_entry_index_ingress_egress_state(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_bandwidth_get_host_entry_index_mac_address(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_bandwidth_get_host_entry_index_meter_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_bandwidth_set_egress_ifg_exclude_include(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_set_egress_ifg_port_ports_all_exclude_include(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_bandwidth_set_egress_port_ports_all_queue_id_qid_apr_index_index(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *qid_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_bandwidth_set_egress_port_ports_all_queue_id_qid_share_bandwidth_state_disable_enable(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_bandwidth_set_egress_port_ports_all_rate_rate(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_bandwidth_set_ingress_bypass_packet_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_set_ingress_flow_control_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_bandwidth_set_ingress_ifg_port_ports_all_exclude_include(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_bandwidth_set_ingress_port_ports_all_rate_rate(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_bandwidth_set_host_entry_index_ingress_egress_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_bandwidth_set_host_entry_index_mac_address_mac(cparser_context_t *context,
    uint32_t *index_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_bandwidth_set_host_entry_index_meter_index_meter_index(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *meter_index_ptr);
cparser_result_t cparser_cmd_meter_init(cparser_context_t *context);
cparser_result_t cparser_cmd_meter_get_entry_index(cparser_context_t *context,
    char **index_ptr);
cparser_result_t cparser_cmd_meter_get_entry_index_burst_size(cparser_context_t *context,
    char **index_ptr);
cparser_result_t cparser_cmd_meter_get_entry_index_ifg(cparser_context_t *context,
    char **index_ptr);
cparser_result_t cparser_cmd_meter_get_entry_index_meter_exceed(cparser_context_t *context,
    char **index_ptr);
cparser_result_t cparser_cmd_meter_get_entry_index_rate(cparser_context_t *context,
    char **index_ptr);
cparser_result_t cparser_cmd_meter_get_entry_index_meter_mode(cparser_context_t *context,
    char **index_ptr);
cparser_result_t cparser_cmd_meter_get_tick_token(cparser_context_t *context);
cparser_result_t cparser_cmd_meter_get_pon_tick_token(cparser_context_t *context);
cparser_result_t cparser_cmd_meter_set_entry_index_burst_size_size(cparser_context_t *context,
    char **index_ptr,
    uint32_t *size_ptr);
cparser_result_t cparser_cmd_meter_set_entry_index_ifg_exclude_include(cparser_context_t *context,
    char **index_ptr);
cparser_result_t cparser_cmd_meter_set_entry_index_rate_rate(cparser_context_t *context,
    char **index_ptr,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_meter_set_entry_index_meter_mode_bit_rate_packet_rate(cparser_context_t *context,
    char **index_ptr);
cparser_result_t cparser_cmd_meter_set_tick_token_tick_period_period_token_token(cparser_context_t *context,
    uint32_t *period_ptr,
    uint32_t *token_ptr);
cparser_result_t cparser_cmd_meter_set_pon_tick_token_tick_period_period_token_token(cparser_context_t *context,
    uint32_t *period_ptr,
    uint32_t *token_ptr);
cparser_result_t cparser_cmd_meter_reset_entry_index_meter_exceed(cparser_context_t *context,
    char **index_ptr);
cparser_result_t cparser_cmd_storm_control_get_broadcast_multicast_unknown_multicast_unknown_unicast_alternated(cparser_context_t *context);
cparser_result_t cparser_cmd_storm_control_get_broadcast_multicast_unknown_multicast_unknown_unicast_arp_storm_dhcp_storm_igmp_mld_storm(cparser_context_t *context);
cparser_result_t cparser_cmd_storm_control_get_broadcast_multicast_unknown_multicast_unknown_unicast_arp_storm_dhcp_storm_igmp_mld_storm_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_storm_control_get_bypass_packet_igmp_cdp_csstp_state(cparser_context_t *context);
cparser_result_t cparser_cmd_storm_control_get_bypass_packet_rma_rma_tail_state(cparser_context_t *context,
    uint32_t *rma_tail_ptr);
cparser_result_t cparser_cmd_storm_control_set_broadcast_multicast_unknown_multicast_unknown_unicast_alternated_disabled_arp_storm_dhcp_storm_igmp_mld_storm(cparser_context_t *context);
cparser_result_t cparser_cmd_storm_control_set_broadcast_multicast_unknown_multicast_unknown_unicast_arp_storm_dhcp_storm_igmp_mld_storm_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_storm_control_set_broadcast_multicast_unknown_multicast_unknown_unicast_arp_storm_dhcp_storm_igmp_mld_storm_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_storm_control_set_broadcast_multicast_unknown_multicast_unknown_unicast_arp_storm_dhcp_storm_igmp_mld_storm_port_ports_all_meter_index(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_storm_control_set_bypass_packet_igmp_cdp_csstp_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_storm_control_set_bypass_packet_rma_rma_tail_state_disable_enable(cparser_context_t *context,
    uint32_t *rma_tail_ptr);
cparser_result_t cparser_cmd_switch_init(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_48_pass_1_state(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_ipg_compensation_state(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_ipg_compensation(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_bypass_tx_crc_state(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_tx_crc(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_rx_check_crc_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_get_mac_address(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_max_pkt_len_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_get_max_pkt_len_rx_inc_tag_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_get_max_pkt_len_fe_ge_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_get_max_pkt_len_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_switch_get_limit_pause_state(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_small_ipg_tag_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_get_back_pressure(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_small_pkt_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_get_output_drop_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_get_output_drop_broadcast_unknown_unicast_multicast_state(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_set_48_pass_1_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_set_ipg_compensation_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_set_ipg_compensation_65ppm_90ppm(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_set_bypass_tx_crc_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_set_tx_crc_pkt_changed_disable_always(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_set_rx_check_crc_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_set_mac_address_mac(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_switch_set_max_pkt_len_fe_ge_port_ports_all_rx_tx_length_len(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *len_ptr);
cparser_result_t cparser_cmd_switch_set_max_pkt_len_fe_ge_port_ports_all_index_index(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_switch_set_max_pkt_len_port_ports_all_length_len(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *len_ptr);
cparser_result_t cparser_cmd_switch_set_max_pkt_len_rx_inc_tag_port_ports_all_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_set_max_pkt_len_index_index_length_len(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *len_ptr);
cparser_result_t cparser_cmd_switch_set_limit_pause_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_set_small_ipg_tag_port_ports_all_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_set_back_pressure_jam_defer(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_set_small_pkt_port_ports_all_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_set_output_drop_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_set_output_drop_broadcast_unknown_unicast_multicast_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_reset_global_chip_config_queue_pon_mac_serdes_switch_core_gphy(cparser_context_t *context);
cparser_result_t cparser_cmd_stp_init(cparser_context_t *context);
cparser_result_t cparser_cmd_stp_get_stp_table_instance_instance_port_ports_all_state(cparser_context_t *context,
    uint32_t *instance_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_stp_set_stp_table_instance_instance_port_ports_all_state_blocking_disable_forwarding_learning(cparser_context_t *context,
    uint32_t *instance_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_mib_init(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_dump_counter_dot1dTpLearnedEntryDiscards(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_dump_counter_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_mib_dump_counter_port_ports_all_dot1dTpPortInDiscards_dot3ControlInUnknownOpcodes_dot3InPauseFrames_dot3OutPauseFrames_dot3StatsDeferredTransmissions_dot3StatsExcessiveCollisions_dot3StatsLateCollisions_dot3StatsMultipleCollisionFrames_dot3StatsSingleCollisionFrames_dot3StatsSymbolErrors(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_mib_dump_counter_port_ports_all_etherStatsCRCAlignErrors_etherStatsCollisions_etherStatsDropEvents_etherStatsFragments_etherStatsJabbers_etherStatsUndersizeDropPkts(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_mib_dump_counter_port_ports_all_etherStatsPkts64Octets_etherStatsPkts65to127Octets_etherStatsPkts128to255Octets_etherStatsPkts256to511Octets_etherStatsPkts512to1023Octets_etherStatsPkts1024to1518Octets_etherStatsPkts1519toMaxOctets_etherStatsOversizePkts_etherStatsUndersizePkts_rx_tx(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_mib_dump_counter_port_ports_all_etherStatsTxBroadcastPkts_etherStatsTxMulticastPkts_inOamPduPkts_outOamPduPkts(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_mib_dump_counter_port_ports_all_ifInOctets_ifInUcastPkts_ifInMulticastPkts_ifInBroadcastPkts_ifOutOctets_ifOutUcastPkts_ifOutMulticastPkts_ifOutBroadcastPkts_ifOutDiscards(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_mib_dump_counter_port_ports_all_nonZero(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_mib_dump_statistic_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_mib_dump_host_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_mib_get_count_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_get_ctag_length_rx_counter_tx_counter(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_get_reset_value(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_get_sync_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_get_packet_debug_reason_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_mib_get_statistic_mode_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_mib_get_statistic_type_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_mib_get_host_entry_index_state(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_mib_get_host_entry_index_mac_address(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_mib_set_count_mode_by_timer_latch_time_timer(cparser_context_t *context,
    uint32_t *timer_ptr);
cparser_result_t cparser_cmd_mib_set_count_mode_freerun(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_set_ctag_length_rx_counter_tx_counter_exclude_include(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_set_reset_value_0_1(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_set_sync_mode_freerun_stop(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_set_statistic_mode_index_index_bits_32_bits_64(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_mib_set_statistic_type_index_index_byte_count_packet_count(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_mib_set_host_entry_index_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_mib_set_host_entry_index_mac_address_mac(cparser_context_t *context,
    uint32_t *index_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_mib_reset_counter_global(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_reset_counter_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_mib_reset_statistic_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_mib_reset_host_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_rma_dump(cparser_context_t *context);
cparser_result_t cparser_cmd_rma_set_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_rma_set_address_rma_tail_action_drop_forward_forward_exclude_cpu_trap_to_cpu(cparser_context_t *context,
    uint32_t *rma_tail_ptr);
cparser_result_t cparser_cmd_rma_get_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_rma_get_address_rma_tail_action(cparser_context_t *context,
    uint32_t *rma_tail_ptr);
cparser_result_t cparser_cmd_trap_init(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_set_cdp_csstp_action_drop_forward_forward_exclude_cpu_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_set_uni_trap_priority_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_set_uni_trap_priority_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_trap_set_hash_select_spa_smac_dmac_sip_dip_sport_dport_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_set_hash_result_value_port_port(cparser_context_t *context,
    uint32_t *value_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_trap_get_cdp_csstp_action(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_get_uni_trap_priority_state(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_get_uni_trap_priority_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_get_hash_select_spa_smac_dmac_sip_dip_sport_dport_state(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_get_hash_result_value_port(cparser_context_t *context,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_trap_dump_hash_select(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_dump_hash_result(cparser_context_t *context);
cparser_result_t cparser_cmd_oam_init(cparser_context_t *context);
cparser_result_t cparser_cmd_oam_dump(cparser_context_t *context);
cparser_result_t cparser_cmd_oam_get_state(cparser_context_t *context);
cparser_result_t cparser_cmd_oam_get_multiplexer_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_oam_get_parser_port_port_all(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_oam_get_trap_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_oam_set_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_oam_set_multiplexer_port_ports_all_action_forward_discard_from_cpu_only(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_oam_set_parser_port_port_all_action_forward_loopback_discard(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_oam_set_trap_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_cpu_init(cparser_context_t *context);
cparser_result_t cparser_cmd_cpu_set_aware_port_ports_all_none(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_cpu_set_tag_format_apollo_normal(cparser_context_t *context);
cparser_result_t cparser_cmd_cpu_set_trap_insert_tag_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_cpu_set_trap_insert_tag_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_cpu_set_tag_aware_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_cpu_set_tag_aware_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_cpu_get_aware_port(cparser_context_t *context);
cparser_result_t cparser_cmd_cpu_get_tag_format(cparser_context_t *context);
cparser_result_t cparser_cmd_cpu_get_trap_insert_tag_state(cparser_context_t *context);
cparser_result_t cparser_cmd_cpu_get_trap_insert_tag_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_cpu_get_tag_aware_state(cparser_context_t *context);
cparser_result_t cparser_cmd_cpu_get_tag_aware_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_iol_set_max_length_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_iol_set_error_length_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_iol_set_16_collision_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_iol_get_max_length(cparser_context_t *context);
cparser_result_t cparser_cmd_iol_get_error_length(cparser_context_t *context);
cparser_result_t cparser_cmd_iol_get_16_collision(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_batch_a_loop(cparser_context_t *context,
    uint32_t *loop_ptr);
cparser_result_t cparser_cmd_debug_batch_A_loop(cparser_context_t *context,
    uint32_t *loop_ptr);
cparser_result_t cparser_cmd_debug_batch_w_reg_msb_lsb_data(cparser_context_t *context,
    uint32_t *reg_ptr,
    uint32_t *msb_ptr,
    uint32_t *lsb_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_debug_batch_W_reg_msb_lsb_data(cparser_context_t *context,
    uint32_t *reg_ptr,
    uint32_t *msb_ptr,
    uint32_t *lsb_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_debug_batch_r_reg_msb_lsb(cparser_context_t *context,
    uint32_t *reg_ptr,
    uint32_t *msb_ptr,
    uint32_t *lsb_ptr);
cparser_result_t cparser_cmd_debug_batch_R_reg_msb_lsb(cparser_context_t *context,
    uint32_t *reg_ptr,
    uint32_t *msb_ptr,
    uint32_t *lsb_ptr);
cparser_result_t cparser_cmd_debug_batch_phy_phyid(cparser_context_t *context,
    uint32_t *phyid_ptr);
cparser_result_t cparser_cmd_debug_batch_list(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_batch_execute_debug(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_dump_hsa_hsb_hsd(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_dump_hsd_port_port(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_debug_dump_hsd_latest(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_get_log(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_get_memory_address_words(cparser_context_t *context,
    uint32_t *address_ptr,
    uint32_t *words_ptr);
cparser_result_t cparser_cmd_debug_get_soc_memory_address_words(cparser_context_t *context,
    uint32_t *address_ptr,
    uint32_t *words_ptr);
cparser_result_t cparser_cmd_debug_get_pon_nic_address_words(cparser_context_t *context,
    uint32_t *address_ptr,
    uint32_t *words_ptr);
cparser_result_t cparser_cmd_debug_get_table_table_idx_address(cparser_context_t *context,
    uint32_t *table_idx_ptr,
    uint32_t *address_ptr);
cparser_result_t cparser_cmd_debug_get_phy_phy_id_reg_address(cparser_context_t *context,
    uint32_t *phy_id_ptr,
    uint32_t *reg_address_ptr);
cparser_result_t cparser_cmd_debug_get_version_detail(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_get_hsb_valid(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_get_hsd_valid(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_get_ind_phy_phy_id_reg_address(cparser_context_t *context,
    uint32_t *phy_id_ptr,
    uint32_t *reg_address_ptr);
cparser_result_t cparser_cmd_debug_get_ind_serdes_idx_page_reg_addr(cparser_context_t *context,
    uint32_t *idx_ptr,
    uint32_t *page_ptr,
    uint32_t *reg_addr_ptr);
cparser_result_t cparser_cmd_debug_get_smart_card_address(cparser_context_t *context,
    uint32_t *address_ptr);
cparser_result_t cparser_cmd_debug_set_log_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_log_level_value(cparser_context_t *context,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_debug_set_log_level_mask_bitmask(cparser_context_t *context,
    uint32_t *bitmask_ptr);
cparser_result_t cparser_cmd_debug_set_log_level_type_level_level_mask(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_log_format_normal_detail(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_log_module_bitmask(cparser_context_t *context,
    uint64_t *bitmask_ptr);
cparser_result_t cparser_cmd_debug_set_memory_address_value(cparser_context_t *context,
    uint32_t *address_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_debug_set_soc_memory_address_value(cparser_context_t *context,
    uint32_t *address_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_debug_set_pon_nic_address_value(cparser_context_t *context,
    uint32_t *address_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_debug_set_phy_phy_id_reg_address_value(cparser_context_t *context,
    uint32_t *phy_id_ptr,
    uint32_t *reg_address_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_debug_set_register_dump_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_dbgo_wrap_gphy_dbgo_sys_gen_dbgo_ctrlckt_dbgo_misc_dbg_rrcp_o_dbg_rldp_o(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_dbg_led_o_dbg_rtct_o_dbg_mib_o_dbg_phy_sts_o_dbg_intrpt_o_dbg_afbk_o_dbg_diag_o_dbgo_hwpkt_dbgo_efuse(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_dbgo_wrap_sds_dbgo_chip_clk_gen_0_dbgo_chip_clk_gen_1_dbgo_chip_clk_gen_2_dbgo_chip_rst_gen(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_dbgo_chip_misc_dbgo_cfgif_dbgo_soc_dbgo_ssc_dbgo_pll_root_dbgo_ponctrl_dbgo_clkctrl(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_dbgo_rstgen_dbgo_clkgen_dbgo_sw_lxslv_PLLTOUT(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_dbgo_regctrl(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_dbgo_regctrl_dbgo_swarb_dbgo_gphyarb_dbgo_smimst_dbgo_iicmst_dbgo_iicmst_1_bits_3_0_bits_3_0(cparser_context_t *context,
    uint32_t *bits_3_0_ptr);
cparser_result_t cparser_cmd_debug_set_dbgo_fctrl(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_dbgo_fctrl_dbgo_ingress_dbgo_egress_bits_3_0_bits_3_0(cparser_context_t *context,
    uint32_t *bits_3_0_ptr);
cparser_result_t cparser_cmd_debug_set_dbgo_swcore_cen(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_dbgo_swcore_cen_dbgo_sel_sch_dbgo_sel_outq_dbgo_sel_mtr_dbgo_sel_hsactrl_dbgo_sel_inq_dbgo_sel_out_drp_bits_7_0_bits_7_0(cparser_context_t *context,
    uint32_t *bits_7_0_ptr);
cparser_result_t cparser_cmd_debug_set_dbgo_swcore_cen_dbgo_sel_sch_pon_dbg_dpm_o_dbg_l2_o_dbg_acl_o_dbg_misc_o_bits_7_0_bits_7_0(cparser_context_t *context,
    uint32_t *bits_7_0_ptr);
cparser_result_t cparser_cmd_debug_set_dbgo_mac(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_dbgo_mac_p0_dbgo_tx_p0_dbgo_rx_p0_dbgo_eee_bits_7_0_bits_7_0(cparser_context_t *context,
    uint32_t *bits_7_0_ptr);
cparser_result_t cparser_cmd_debug_set_dbgo_mac_p1_dbgo_tx_p1_dbgo_rx_p1_dbgo_eee_bits_7_0_bits_7_0(cparser_context_t *context,
    uint32_t *bits_7_0_ptr);
cparser_result_t cparser_cmd_debug_set_dbgo_mac_p2_dbgo_tx_p2_dbgo_rx_p2_dbgo_eee_bits_7_0_bits_7_0(cparser_context_t *context,
    uint32_t *bits_7_0_ptr);
cparser_result_t cparser_cmd_debug_set_dbgo_mac_p3_dbgo_tx_p3_dbgo_rx_p3_dbgo_eee_bits_7_0_bits_7_0(cparser_context_t *context,
    uint32_t *bits_7_0_ptr);
cparser_result_t cparser_cmd_debug_set_dbgo_mac_p4_dbgo_tx_p4_dbgo_rx_p4_dbgo_eee_bits_7_0_bits_7_0(cparser_context_t *context,
    uint32_t *bits_7_0_ptr);
cparser_result_t cparser_cmd_debug_set_dbgo_mac_p5_dbgo_tx_p5_dbgo_rx_p5_dbgo_eee_bits_7_0_bits_7_0(cparser_context_t *context,
    uint32_t *bits_7_0_ptr);
cparser_result_t cparser_cmd_debug_set_dbgo_mac_p6_dbgo_tx_p6_dbgo_rx_p6_dbgo_eee_bits_7_0_bits_7_0(cparser_context_t *context,
    uint32_t *bits_7_0_ptr);
cparser_result_t cparser_cmd_debug_set_dbgo_m1_0_dbgo_m1_1_dbgo_m1_2_dbgo_m1_3_dbgo_m1_4(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_hsb_latch_mode_all_none_first_drop_first_pass_first_trap_drop_trap_acl_reason(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_hsb_source_user_data_mac_parser(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_hsb_user_data_send_to_ale(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_hsb_user_data_spa_user_valid_tos_ip_type_ether_type_pkt_len_l4_type_data(cparser_context_t *context,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_debug_set_hsb_user_data_stag_ctag_pon_idx_len_of_nhs_ip_pro_nh_tc_data(cparser_context_t *context,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_debug_set_hsb_user_data_stag_if_ctag_if_igmp_udp_tcp_llc_pppoe(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_hsb_user_data_snap_oam_ip_rsv_mc_addr_cpu_tag_nh_rg_l3_chk_ok_ttl_gt5_rlpp_ip6(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_hsb_user_data_l4_chk_ok_ttl_gt1_rldp_ptp_ip4(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_hsb_user_data_user_field_index_data(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_debug_set_hsb_user_data_dmac_smac_mac(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_debug_set_hsb_user_data_sip_dip_ip(cparser_context_t *context,
    uint32_t *ip_ptr);
cparser_result_t cparser_cmd_debug_set_hsb_user_data_pppoe_session_tpid_data(cparser_context_t *context,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_debug_set_hsb_user_data_sip6_dip6_ip6(cparser_context_t *context,
    char **ip6_ptr);
cparser_result_t cparser_cmd_debug_set_hsb_cpu_tag_txportmask_priority_sb_extspa_pppoeact_pppoeidx_pon_sid_efid_data(cparser_context_t *context,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_debug_set_hsb_cpu_tag_psel_dislrn_prisel_keep_l3c_l4c_l2br_l34keep_vsel_efiden(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_hsb_egress_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_debug_set_hsb_ingress_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_debug_set_hsb_reason_reason(cparser_context_t *context,
    uint32_t *reason_ptr);
cparser_result_t cparser_cmd_debug_set_hsd_latch_mode_all_none_first_pass_reason(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_hsd_egress_port_port(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_debug_set_hsd_ingress_port_port(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_debug_set_hsd_reason_reason(cparser_context_t *context,
    uint32_t *reason_ptr);
cparser_result_t cparser_cmd_debug_set_ind_phy_phy_id_reg_address_value(cparser_context_t *context,
    uint32_t *phy_id_ptr,
    uint32_t *reg_address_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_debug_set_ind_serdes_idx_page_reg_addr_value(cparser_context_t *context,
    uint32_t *idx_ptr,
    uint32_t *page_ptr,
    uint32_t *reg_addr_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_debug_set_smart_card_address_value(cparser_context_t *context,
    uint32_t *address_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_debug_rtk_init(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_fpga_init(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_register_rw_test_register_address_data_value_count_count(cparser_context_t *context,
    uint32_t *address_ptr,
    uint32_t *value_ptr,
    uint32_t *count_ptr);
cparser_result_t cparser_cmd_debug_show_hsb_user_data(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_clear_hsb_user_data(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_test_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_debug_packet_rx_dump_byte(cparser_context_t *context,
    uint32_t *byte_ptr);
cparser_result_t cparser_cmd_debug_packet_rx_dump_length_start_length(cparser_context_t *context,
    uint32_t *start_ptr,
    uint32_t *length_ptr);
cparser_result_t cparser_cmd_debug_packet_rx_dump_fifo_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_debug_packet_rx_mode_chip_fpga(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_rx_clear(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_rx_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_set_pkt_pos_data(cparser_context_t *context,
    uint32_t *pos_ptr,
    char **data_ptr);
cparser_result_t cparser_cmd_debug_packet_tx_set_addr_da_sa(cparser_context_t *context,
    cparser_macaddr_t *da_ptr,
    cparser_macaddr_t *sa_ptr);
cparser_result_t cparser_cmd_debug_packet_tx_set_l2payload_pos_payload(cparser_context_t *context,
    uint32_t *pos_ptr,
    char **payload_ptr);
cparser_result_t cparser_cmd_debug_packet_tx_set_padding_start_end_pkt_len(cparser_context_t *context,
    uint32_t *start_ptr,
    uint32_t *end_ptr,
    uint32_t *pkt_len_ptr);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_l3cs_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_l4cs_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_keep_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_learning_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_l2br_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_sendback_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_l34keep_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_efid_enable_disable_efid(cparser_context_t *context,
    uint32_t *efid_ptr);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_prisel_enable_disable_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_vsel_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_txmask_vidx_value(cparser_context_t *context,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_psel_enable_disable_streamid(cparser_context_t *context,
    uint32_t *streamid_ptr);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_pppoeact_intact_addhdr_removehdr_remarking_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_extspa_port(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_clear(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_set_tx_cmd_ipcs_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_set_tx_cmd_l4cs_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_set_tx_cmd_vlan_vid_priority_cfi(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *priority_ptr,
    uint32_t *cfi_ptr);
cparser_result_t cparser_cmd_debug_packet_tx_set_tx_cmd_clear(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_get_preview_length(cparser_context_t *context,
    uint32_t *length_ptr);
cparser_result_t cparser_cmd_debug_packet_tx_get_cputag(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_get_tx_cmd(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_clear(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_send_count(cparser_context_t *context,
    uint32_t *count_ptr);
cparser_result_t cparser_cmd_debug_packet_tx_send_continuously_enable_disable_count(cparser_context_t *context,
    uint32_t *count_ptr);
cparser_result_t cparser_cmd_debug_classf_get_hit_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_gpio_init(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_gpio_set_pin_gpioId_state_enable_disable(cparser_context_t *context,
    uint32_t *gpioId_ptr);
cparser_result_t cparser_cmd_debug_gpio_set_pin_gpioId_mode_input_output(cparser_context_t *context,
    uint32_t *gpioId_ptr);
cparser_result_t cparser_cmd_debug_gpio_set_pin_gpioId_databit_value(cparser_context_t *context,
    uint32_t *gpioId_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_debug_gpio_set_intr_gpioId_mode_falling_edge_rising_edge_both_edge_disable(cparser_context_t *context,
    uint32_t *gpioId_ptr);
cparser_result_t cparser_cmd_debug_gpio_get_pin_gpioId_state(cparser_context_t *context,
    uint32_t *gpioId_ptr);
cparser_result_t cparser_cmd_debug_gpio_get_pin_gpioId_mode(cparser_context_t *context,
    uint32_t *gpioId_ptr);
cparser_result_t cparser_cmd_debug_gpio_get_pin_gpioId_databit(cparser_context_t *context,
    uint32_t *gpioId_ptr);
cparser_result_t cparser_cmd_debug_gpio_get_intr_gpioId_mode(cparser_context_t *context,
    uint32_t *gpioId_ptr);
cparser_result_t cparser_cmd_debug_gpio_get_intr_gpioId_state(cparser_context_t *context,
    uint32_t *gpioId_ptr);
cparser_result_t cparser_cmd_debug_gpio_clear_intr_gpioId_state(cparser_context_t *context,
    uint32_t *gpioId_ptr);
cparser_result_t cparser_cmd_debug_reboot_soc(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_io_dump(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_io_gpio_check_gpioId(cparser_context_t *context,
    uint32_t *gpioId_ptr);
cparser_result_t cparser_cmd_debug_io_uart_check(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_io_mii_check(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_io_led_check_serial(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_io_led_check_parallel_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_debug_io_voip_check(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_pon_mode_set_gpon_epon_fiber_1g_fiber_100m_fiber_auto_fiber_force_1g_fiber_force_100m(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_pon_mode_get(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_pkt_parser_dump_count_latch_mode_all_none_first_drop_first_pass_first_trap_drop_trap_acl_reason_filename(cparser_context_t *context,
    uint32_t *count_ptr,
    char **filename_ptr);
cparser_result_t cparser_cmd_debug_pkt_parser_dump_clear(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_pkt_parser_dump_show(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_pkt_parser_dump_set_time_time(cparser_context_t *context,
    uint32_t *time_ptr);
cparser_result_t cparser_cmd_debug_pkt_parser_dump_set_source_port_ports(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_debug_pkt_parser_dump_set_da_da(cparser_context_t *context,
    cparser_macaddr_t *da_ptr);
cparser_result_t cparser_cmd_debug_pkt_parser_dump_set_sa_sa(cparser_context_t *context,
    cparser_macaddr_t *sa_ptr);
cparser_result_t cparser_cmd_debug_pkt_parser_dump_set_ethertype_ethertype(cparser_context_t *context,
    uint32_t *ethertype_ptr);
cparser_result_t cparser_cmd_debug_pkt_parser_dump_set_length_start_end(cparser_context_t *context,
    uint32_t *start_ptr,
    uint32_t *end_ptr);
cparser_result_t cparser_cmd_debug_pkt_parser_dump_set_vid_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_debug_pkt_parser_dump_set_svid_svid(cparser_context_t *context,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_debug_pkt_parser_dump_set_protocol_all_igmp_udp_tcp_oam_llc_snap_pppoe(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_pkt_parser_dump_set_ip_sip_dip_ip(cparser_context_t *context,
    uint32_t *ip_ptr);
cparser_result_t cparser_cmd_debug_reset_wsds_analog_gpon_epon_warp_all_sds(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_l34_set_hsb_l2_bridge_l2bridge(cparser_context_t *context,
    uint32_t *l2bridge_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_ip_fragments_is_fragments(cparser_context_t *context,
    uint32_t *is_fragments_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_ip_more_fragments_is_more(cparser_context_t *context,
    uint32_t *is_more_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_l4_checksum_ok_is_ok(cparser_context_t *context,
    uint32_t *is_ok_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_l3_checksum_ok_is_ok(cparser_context_t *context,
    uint32_t *is_ok_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_direct_tx_is_direct_tx(cparser_context_t *context,
    uint32_t *is_direct_tx_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_udp_no_chksum_udp_no_chk(cparser_context_t *context,
    uint32_t *udp_no_chk_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_parse_fail_parse_fail(cparser_context_t *context,
    uint32_t *parse_fail_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_pppoe_if_pppoe_if(cparser_context_t *context,
    uint32_t *pppoe_if_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_svlan_if_svlan_if(cparser_context_t *context,
    uint32_t *svlan_if_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_ttls_ttls(cparser_context_t *context,
    uint32_t *ttls_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_pkt_type_pkt_type(cparser_context_t *context,
    uint32_t *pkt_type_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_tcp_flag_tcp_flag(cparser_context_t *context,
    uint32_t *tcp_flag_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_cvlan_if_cvlan_if(cparser_context_t *context,
    uint32_t *cvlan_if_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_source_port_spa(cparser_context_t *context,
    uint32_t *spa_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_cvid_cvid(cparser_context_t *context,
    uint32_t *cvid_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_packet_length_length(cparser_context_t *context,
    uint32_t *length_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_dport_dport(cparser_context_t *context,
    uint32_t *dport_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_pppoe_id_pppoe(cparser_context_t *context,
    uint32_t *pppoe_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_dip_ip(cparser_context_t *context,
    uint32_t *ip_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_sip_ip(cparser_context_t *context,
    uint32_t *ip_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_sport_sport(cparser_context_t *context,
    uint32_t *sport_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_dmac_mac(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsba_log_mode_mode(cparser_context_t *context,
    uint32_t *mode_ptr);
cparser_result_t cparser_cmd_debug_l34_get_hsb(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_l34_get_hsa(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_l34_get_hsba_log_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_register_set_address_value(cparser_context_t *context,
    uint32_t *address_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_register_get_address_words(cparser_context_t *context,
    uint32_t *address_ptr,
    uint32_t *words_ptr);
cparser_result_t cparser_cmd_register_get_address_times_words(cparser_context_t *context,
    uint32_t *address_ptr,
    uint32_t *words_ptr);
cparser_result_t cparser_cmd_register_get_all(cparser_context_t *context);
cparser_result_t cparser_cmd_interrupt_init(cparser_context_t *context);
cparser_result_t cparser_cmd_interrupt_set_mask_all_link_change_meter_exceed_learn_over_speed_change_special_congestion_loop_detection_cable_diag_acl_gphy_serdes_gpon_epon_ptp_dying_gasp_thermal_adc_eeprom110to118_eeprom128to247_pktbuffer_error_debug_smart_card_switch_error_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_interrupt_set_polarity_high_low(cparser_context_t *context);
cparser_result_t cparser_cmd_interrupt_get_mask_all_link_change_meter_exceed_learn_over_speed_change_special_congestion_loop_detection_cable_diag_acl_gphy_serdes_gpon_epon_ptp_dying_gasp_thermal_adc_eeprom110to118_eeprom128to247_pktbuffer_error_debug_smart_card_switch_error_state(cparser_context_t *context);
cparser_result_t cparser_cmd_interrupt_get_status_all_link_change_meter_exceed_learn_over_speed_change_special_congestion_loop_detection_cable_diag_acl_gphy_serdes_gpon_epon_ptp_dying_gasp_thermal_adc_eeprom110to118_eeprom128to247_pktbuffer_error_debug_smart_card_switch_error(cparser_context_t *context);
cparser_result_t cparser_cmd_interrupt_get_status_speed_change_link_up_link_down_gphy_detail(cparser_context_t *context);
cparser_result_t cparser_cmd_interrupt_get_polarity(cparser_context_t *context);
cparser_result_t cparser_cmd_interrupt_clear_status_all_link_change_meter_exceed_learn_over_speed_change_special_congestion_loop_detection_cable_diag_acl_gphy_serdes_gpon_epon_ptp_dying_gasp_thermal_adc_eeprom110to118_eeprom128to247_pktbuffer_error_debug_smart_card_switch_error(cparser_context_t *context);
cparser_result_t cparser_cmd_interrupt_clear_status_speed_change_link_up_link_down_gphy_detail(cparser_context_t *context);
cparser_result_t cparser_cmd_pon_init(cparser_context_t *context);
cparser_result_t cparser_cmd_pon_clear(cparser_context_t *context);
cparser_result_t cparser_cmd_pon_set_drain_out_t_cont_tcont_queue_id_qid(cparser_context_t *context,
    uint32_t *tcont_ptr,
    char **qid_ptr);
cparser_result_t cparser_cmd_pon_set_drain_out_t_cont_tcont(cparser_context_t *context,
    uint32_t *tcont_ptr);
cparser_result_t cparser_cmd_pon_set_stream_sid_t_cont_tcont_queue_id_qid(cparser_context_t *context,
    char **sid_ptr,
    uint32_t *tcont_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_pon_set_stream_sid_llid_llid_queue_id_qid(cparser_context_t *context,
    char **sid_ptr,
    uint32_t *llid_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_pon_set_stream_sid_state_enable_disable(cparser_context_t *context,
    char **sid_ptr);
cparser_result_t cparser_cmd_pon_set_t_cont_tcont_queue_id_qid_pir_rate_rate(cparser_context_t *context,
    uint32_t *tcont_ptr,
    uint32_t *qid_ptr,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_pon_set_t_cont_tcont_queue_id_qid_cir_rate_rate(cparser_context_t *context,
    uint32_t *tcont_ptr,
    uint32_t *qid_ptr,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_pon_set_t_cont_tcont_queue_id_qid_scheduling_type_strict_wfq(cparser_context_t *context,
    uint32_t *tcont_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_pon_set_t_cont_tcont_queue_id_qid_scheduling_weight_weight(cparser_context_t *context,
    uint32_t *tcont_ptr,
    uint32_t *qid_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_pon_set_t_cont_tcont_queue_id_qid_egress_drop_state_enable_disable(cparser_context_t *context,
    uint32_t *tcont_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_pon_set_llid_llid_queue_id_qid_pir_rate_rate(cparser_context_t *context,
    uint32_t *llid_ptr,
    uint32_t *qid_ptr,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_pon_set_llid_llid_queue_id_qid_cir_rate_rate(cparser_context_t *context,
    uint32_t *llid_ptr,
    uint32_t *qid_ptr,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_pon_set_llid_llid_queue_id_qid_scheduling_type_strict_wfq(cparser_context_t *context,
    uint32_t *llid_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_pon_set_llid_llid_queue_id_qid_scheduling_weight_weight(cparser_context_t *context,
    uint32_t *llid_ptr,
    uint32_t *qid_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_pon_set_llid_llid_queue_id_qid_egress_drop_state_enable_disable(cparser_context_t *context,
    uint32_t *llid_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_pon_set_scheduling_type_wfq_wrr(cparser_context_t *context);
cparser_result_t cparser_cmd_pon_set_schedule_id_id_rate_rate(cparser_context_t *context,
    uint32_t *id_ptr,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_pon_set_egress_rate_rate(cparser_context_t *context,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_pon_get_drain_out_status(cparser_context_t *context);
cparser_result_t cparser_cmd_pon_get_stream_sid(cparser_context_t *context,
    char **sid_ptr);
cparser_result_t cparser_cmd_pon_get_t_cont_tcont(cparser_context_t *context,
    uint32_t *tcont_ptr);
cparser_result_t cparser_cmd_pon_get_t_cont_tcont_queue_id_qid(cparser_context_t *context,
    uint32_t *tcont_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_pon_get_t_cont_tcont_queue_list(cparser_context_t *context,
    uint32_t *tcont_ptr);
cparser_result_t cparser_cmd_pon_get_llid_llid_queue_id_qid(cparser_context_t *context,
    uint32_t *llid_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_pon_get_llid_llid_queue_list(cparser_context_t *context,
    uint32_t *llid_ptr);
cparser_result_t cparser_cmd_pon_get_transceiver_vendor_name_part_number_temperature_voltage_bias_current_tx_power_rx_power(cparser_context_t *context);
cparser_result_t cparser_cmd_pon_get_scheduling_type(cparser_context_t *context);
cparser_result_t cparser_cmd_pon_get_schedule_id_id_rate(cparser_context_t *context,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_pon_get_egress_rate(cparser_context_t *context);
cparser_result_t cparser_cmd_pon_add_t_cont_tcont_queue_id_qid(cparser_context_t *context,
    uint32_t *tcont_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_pon_add_llid_llid_queue_id_qid(cparser_context_t *context,
    uint32_t *llid_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_pon_del_t_cont_tcont_queue_id_qid(cparser_context_t *context,
    uint32_t *tcont_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_pon_del_llid_llid_queue_id_qid(cparser_context_t *context,
    uint32_t *llid_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_pon_reset(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_dump_threshold_switch_pon(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_dump_used_page_switch_pon(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_dump_egress_drop(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_set_type_ingress_egress(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_set_drop_all_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_pause_all_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_system_flowctrl_threshold_drop_threshold_high_off_high_on_low_off_low_on_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_port_flowctrl_threshold_drop_threshold_high_off_high_on_low_off_low_on_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_egress_drop_port_ports_all_threshold_threshold(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_egress_drop_port_ports_all_queue_id_qid_all_drop_enable_disable(cparser_context_t *context,
    char **ports_ptr,
    char **qid_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_egress_drop_queue_id_qid_all_threshold_threshold(cparser_context_t *context,
    char **qid_ptr,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_egress_drop_port_gap_queue_gap_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_pon_system_high_off_high_on_low_off_low_on_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_pon_port_high_off_high_on_low_off_low_on_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_pon_sid_sid_state_enable_disable(cparser_context_t *context,
    uint32_t *sid_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_pon_egress_drop_queue_id_qid_all_threshold_index_index(cparser_context_t *context,
    char **qid_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_pon_egress_drop_queue_threshold_index_index_all_threshold_threshold(cparser_context_t *context,
    char **index_ptr,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_pon_egress_drop_queue_gap_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_pon_egress_drop_port_ports_all_queue_id_qid_all_drop_enable_disable(cparser_context_t *context,
    char **ports_ptr,
    char **qid_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_jumbo_global_high_off_high_on_low_off_low_on_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_jumbo_port_high_off_high_on_low_off_low_on_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_max_page_clear_switch(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_set_max_page_clear_egress_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_flowctrl_set_max_page_clear_used_page(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_set_max_page_clear_egress_queue_port_ports_all_queue_id_qid_all(cparser_context_t *context,
    char **ports_ptr,
    char **qid_ptr);
cparser_result_t cparser_cmd_flowctrl_set_max_page_clear_pon_queue_id_qid(cparser_context_t *context,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_flowctrl_set_total_pktcnt_clear(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_set_prefetch_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_jumbo_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_set_jumbo_size_3k_4k_6k_max(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_set_low_queue_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_egress_system_flowctrl_threshold_drop_threshold_high_off_high_on_low_off_low_on_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_egress_queue_id_qid_all_threshold_threshold(cparser_context_t *context,
    char **qid_ptr,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_egress_port_ports_all_threshold_threshold(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_egress_port_ports_all_queue_id_qid_all_queue_drop_state_enable_disable(cparser_context_t *context,
    char **ports_ptr,
    char **qid_ptr);
cparser_result_t cparser_cmd_flowctrl_set_egress_port_gap_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_egress_queue_gap_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_high_queue_port_port_all_queue_mask_queue_all(cparser_context_t *context,
    char **port_ptr,
    char **queue_ptr);
cparser_result_t cparser_cmd_flowctrl_set_patch_gpon_35m_fiber_35m_20m(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_set_pon_max_page_cnt_latch_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_set_egress_drop_port_port_all_state_enable_disable(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_flowctrl_set_egress_drop_broadcast_multicast_unknown_unicast_select_not(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_type(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_drop_all_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_pause_all_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_ingress_system_flowctrl_threshold_drop_threshold_high_off_high_on_low_off_low_on_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_ingress_port_flowctrl_threshold_drop_threshold_high_off_high_on_low_off_low_on_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_ingress_egress_drop_port_ports_all_threshold(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_flowctrl_get_ingress_egress_drop_port_ports_all_queue_id_qid_all_drop(cparser_context_t *context,
    char **ports_ptr,
    char **qid_ptr);
cparser_result_t cparser_cmd_flowctrl_get_ingress_egress_drop_queue_id_qid_all_threshold(cparser_context_t *context,
    char **qid_ptr);
cparser_result_t cparser_cmd_flowctrl_get_ingress_egress_drop_port_gap_queue_gap_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_ingress_pon_system_high_off_high_on_low_off_low_on_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_ingress_pon_port_high_off_high_on_low_off_low_on_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_ingress_pon_sid_sid_state(cparser_context_t *context,
    uint32_t *sid_ptr);
cparser_result_t cparser_cmd_flowctrl_get_ingress_pon_egress_drop_queue_id_qid_all_threshold_index(cparser_context_t *context,
    char **qid_ptr);
cparser_result_t cparser_cmd_flowctrl_get_ingress_pon_egress_drop_queue_threshold_index_idx_all_threshold(cparser_context_t *context,
    char **idx_ptr);
cparser_result_t cparser_cmd_flowctrl_get_ingress_pon_egress_drop_queue_gap_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_ingress_pon_egress_drop_port_ports_all_queue_id_qid_all_drop(cparser_context_t *context,
    char **ports_ptr,
    char **qid_ptr);
cparser_result_t cparser_cmd_flowctrl_get_ingress_jumbo_global_high_off_high_on_low_off_low_on_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_ingress_jumbo_port_high_off_high_on_low_off_low_on_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_used_page_cnt_ingress_egress_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_flowctrl_get_used_page_cnt_egress_queue_port_ports_all_queue_id_qid_all(cparser_context_t *context,
    char **ports_ptr,
    char **qid_ptr);
cparser_result_t cparser_cmd_flowctrl_get_used_page_cnt_total_public_public_off_public_jumbo(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_used_page_cnt_packet_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_flowctrl_get_used_page_cnt_pon_queue_id_qid_all(cparser_context_t *context,
    char **qid_ptr);
cparser_result_t cparser_cmd_flowctrl_get_total_page_cnt(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_prefetch_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_jumbo_state(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_jumbo_size(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_low_queue_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_egress_system_flowctrl_threshold_drop_threshold_high_off_high_on_low_off_low_on_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_egress_queue_id_qid_all_threshold(cparser_context_t *context,
    char **qid_ptr);
cparser_result_t cparser_cmd_flowctrl_get_egress_port_ports_all_threshold(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_flowctrl_get_egress_port_ports_all_queue_id_qid_all_queue_drop_state(cparser_context_t *context,
    char **ports_ptr,
    char **qid_ptr);
cparser_result_t cparser_cmd_flowctrl_get_egress_port_gap_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_egress_queue_gap_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_high_queue_port_port_all(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_flowctrl_get_pon_max_page_cnt_latch(cparser_context_t *context);
cparser_result_t cparser_cmd_i2c_init_port_port(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_i2c_set_state_port_port_enable_disable(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_i2c_set_width_port_port_8_bit_16_bit_24_bit_32_bit(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_i2c_set_port_port_dev_dev_id_reg_register_data_data(cparser_context_t *context,
    uint32_t *port_ptr,
    uint32_t *dev_id_ptr,
    uint32_t *register_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_i2c_set_clock_port_port_khz(cparser_context_t *context,
    uint32_t *port_ptr,
    uint32_t *khz_ptr);
cparser_result_t cparser_cmd_i2c_set_eeprom_mirror_dev_dev_id_addr_width_8_bit_16_bit_24_bit_32_bit_addr_ext_mode_mode0_mode1_mode2_mode3(cparser_context_t *context,
    uint32_t *dev_id_ptr);
cparser_result_t cparser_cmd_i2c_set_eeprom_mirror_reg_register_data_data(cparser_context_t *context,
    uint32_t *register_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_i2c_set_data_width_port_port_8_bit_16_bit_24_bit_32_bit(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_i2c_set_addr_width_port_port_8_bit_16_bit_24_bit_32_bit(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_i2c_get_state_port_port(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_i2c_get_width_port_port(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_i2c_get_port_port_dev_dev_id_reg_register(cparser_context_t *context,
    uint32_t *port_ptr,
    uint32_t *dev_id_ptr,
    uint32_t *register_ptr);
cparser_result_t cparser_cmd_i2c_get_clock_port_port(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_i2c_get_eeprom_mirror(cparser_context_t *context);
cparser_result_t cparser_cmd_i2c_get_eeprom_mirror_reg_register(cparser_context_t *context,
    uint32_t *register_ptr);
cparser_result_t cparser_cmd_i2c_get_data_width_port_port(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_i2c_get_addr_width_port_port(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_led_init(cparser_context_t *context);
cparser_result_t cparser_cmd_led_set_mode_serial_parallel(cparser_context_t *context);
cparser_result_t cparser_cmd_led_set_group_index_type_utp_port_port(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_led_set_group_index_type_fiber_pon_usb0_usb1_sata_fiber_0_fiber_1_none(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_led_set_group_index_source_collision_duplex_tx_act_rx_act_force_pon_link_soc_link_act_pon_alarm_pon_warning_state_enable_disable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_led_set_group_index_source_speed_10M_100M_500M_1000M_mode_link_act_state_enable_disable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_led_set_group_index_force_on_off_blinking_blinking_g2(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_led_set_group_index_parallel_state_enable_disable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_led_set_blinking_port_force_usb_sata_force_g2_rate_blink_32_blink_48_blink_64_blink_96_blink_128_blink_256_blink_512_blink_1024(cparser_context_t *context);
cparser_result_t cparser_cmd_led_set_serial_active_high_active_low(cparser_context_t *context);
cparser_result_t cparser_cmd_led_set_pon_alarm_warning_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_led_get_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_led_get_group_index_config(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_led_get_group_index_force(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_led_get_group_index_parallel_state(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_led_get_blinking(cparser_context_t *context);
cparser_result_t cparser_cmd_led_get_serial(cparser_context_t *context);
cparser_result_t cparser_cmd_led_get_pon_alarm_warning_state(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_init(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_bypass_fec_state(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_llid_table_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_epon_get_llid_table(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_mpcp_gate_action(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_mpcp_invalid_len_action(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_register_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_register_llid_idx(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_register_state(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_register_mac_address(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_register_pendding_grant(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_force_laser_on_state(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_local_time(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_grant_shift(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_discovery_shift(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_discovery_random_delay_state(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_mpcp_gate_trap_type(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_reg_ack_flag(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_reg_ack_llid_idx(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_laser_on_time(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_laser_on_shift_time(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_laser_off_time(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_laser_off_shift_time(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_sync_time(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_report_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_us_fec_state(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_ds_fec_state(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_fec_global_state(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_laser_polarity_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_laser_state_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_threshold_report_llid_idx_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_epon_get_priority_to_sid_llid_idx_llid_idx(cparser_context_t *context,
    uint32_t *llid_idx_ptr);
cparser_result_t cparser_cmd_epon_get_rtt_adj(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_stop_local_time_state(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_stop_sync_olt_localtime_state(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_test_reg_PRG_EPON_GN0_PRG_EPON_GN1_PRG_EPON_GN2(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_multi_llid_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_bypass_fec_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_llid_table_index_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_epon_set_llid_table_index_llid_llid(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *llid_ptr);
cparser_result_t cparser_cmd_epon_set_llid_table_index_report_timer_timer(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *timer_ptr);
cparser_result_t cparser_cmd_epon_set_mpcp_gate_action_asic_only_trap_and_asic(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_mpcp_invalid_len_action_drop_pass(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_register_mode_asic_sw(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_register_llid_idx_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_epon_set_register_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_register_mac_address_mac(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_epon_set_register_pendding_grant_number(cparser_context_t *context,
    uint32_t *number_ptr);
cparser_result_t cparser_cmd_epon_set_force_laser_on_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_grant_shift_number(cparser_context_t *context,
    uint32_t *number_ptr);
cparser_result_t cparser_cmd_epon_set_grant_shift_add_del_value(cparser_context_t *context,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_epon_set_discovery_shift_number(cparser_context_t *context,
    uint32_t *number_ptr);
cparser_result_t cparser_cmd_epon_set_discovery_random_delay_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_mpcp_gate_trap_type_all_discovery_normal(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_reg_ack_flag_value(cparser_context_t *context,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_epon_set_reg_ack_llid_idx_value(cparser_context_t *context,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_epon_set_reg_ack_trigger(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_laser_on_time_value(cparser_context_t *context,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_epon_set_laser_on_shift_time_value(cparser_context_t *context,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_epon_set_laser_off_time_value(cparser_context_t *context,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_epon_set_laser_off_shift_time_value(cparser_context_t *context,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_epon_set_sync_time_value(cparser_context_t *context,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_epon_set_report_mode_normal_report_0_f_force_0_force_f(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_us_fec_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_ds_fec_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_fec_global_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_laser_polarity_mode_low_high(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_laser_state_mode_normal_force_on_force_off(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_threshold_report_llid_idx_index_queue_set_qnum_th1_th1_th2_th2_th3_th3(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *qnum_ptr,
    uint32_t *th1_ptr,
    uint32_t *th2_ptr,
    uint32_t *th3_ptr);
cparser_result_t cparser_cmd_epon_set_priority_to_sid_llid_idx_llid_idx_table_index(cparser_context_t *context,
    uint32_t *llid_idx_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_epon_set_gate_analysis_start_all_gate_discovery_gate(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_gate_analysis_start_selected_llid_llididx(cparser_context_t *context,
    uint32_t *llididx_ptr);
cparser_result_t cparser_cmd_epon_set_interrupt_los_register_ok_mpcp_timeout_time_drift_1pps_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_debug_timer_adj_bc_dy_adjbc_rpt_tmg_reg_tmg_qu_tmg_sch_lantency_value(cparser_context_t *context,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_epon_set_rtt_adj_increase_decrease_value(cparser_context_t *context,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_epon_set_program_grant_llid_idx_index_length(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *length_ptr);
cparser_result_t cparser_cmd_epon_set_stop_local_time_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_stop_sync_olt_localtime_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_test_reg_PRG_EPON_GN0_PRG_EPON_GN1_PRG_EPON_GN2_value(cparser_context_t *context,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_epon_set_force_prbs_off_prbs31_prbs23_prbs15_prbs07_prbs03(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_multi_llid_mode_8_LLID_4_queue_4_LLID_8_queue(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_active_llid_idx_value(cparser_context_t *context,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_epon_de_active_llid_idx_value(cparser_context_t *context,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_epon_dump_mib_counter_llididx(cparser_context_t *context,
    uint32_t *llididx_ptr);
cparser_result_t cparser_cmd_epon_dump_gate_analysis_from_index1_to_index2(cparser_context_t *context,
    uint32_t *index1_ptr,
    uint32_t *index2_ptr);
cparser_result_t cparser_cmd_epon_dump_debug_timer(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_dump_debug_counter(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_reset_mib_counter_llididx(cparser_context_t *context,
    uint32_t *llididx_ptr);
cparser_result_t cparser_cmd_gpon_set_serialnumber_sn(cparser_context_t *context,
    char **sn_ptr);
cparser_result_t cparser_cmd_gpon_set_serial_number_vendor_id_serial_number(cparser_context_t *context,
    char **vendor_id_ptr,
    uint32_t *serial_number_ptr);
cparser_result_t cparser_cmd_gpon_set_serial_number_hex_vendor_id_serial_number(cparser_context_t *context,
    char **vendor_id_ptr,
    char **serial_number_ptr);
cparser_result_t cparser_cmd_gpon_set_password_password(cparser_context_t *context,
    char **password_ptr);
cparser_result_t cparser_cmd_gpon_set_password_hex_password(cparser_context_t *context,
    char **password_ptr);
cparser_result_t cparser_cmd_gpon_set_active_timer_to1_to1_timer_to2_to2_timer(cparser_context_t *context,
    uint32_t *to1_timer_ptr,
    uint32_t *to2_timer_ptr);
cparser_result_t cparser_cmd_gpon_set_ds_laser_opt_los_cdr_los_state_enable_disable_polarity_high_low(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_ds_laser_los_holdover_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_ds_phy_descramble_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_ds_phy_fec_state_enable_disable_fec_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_gpon_set_ds_ploam_drop_crc_error_filter_onuid_accept_broadcast_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_ds_bwmap_drop_crc_error_filter_onuid_strict_plen_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_ds_gem_assembly_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_gpon_set_ds_eth_drop_crc_error_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_ds_eth_pti_pettern_pettern_pti_mask_mask(cparser_context_t *context,
    uint32_t *pettern_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_gpon_set_ds_omci_pti_pettern_pettern_pti_mask_mask(cparser_context_t *context,
    uint32_t *pettern_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_gpon_set_us_laser_on_offset_on_offset_off_offset_off_offset(cparser_context_t *context,
    uint32_t *on_offset_ptr,
    uint32_t *off_offset_ptr);
cparser_result_t cparser_cmd_gpon_set_us_phy_scramble_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_us_phy_burst_polarity_high_low(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_us_phy_auto_sstart_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_us_phy_suppress_laser_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_us_ploam_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_us_dbr_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_multicast_filter_broadcast_pass_non_multicast_pass_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_multicast_filter_prefix_ip_prefix_ip6_prefix(cparser_context_t *context,
    uint32_t *prefix_ptr);
cparser_result_t cparser_cmd_gpon_set_multicast_filter_force_ip_force_ip6_pass_drop_normal(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_multicast_filter_filter_mode_include_exclude(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_rdi_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_tx_laser_force_on_force_off_normal(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_tx_force_idle_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_force_prbs_off_prbs31_prbs23_prbs15_prbs7(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_debug_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_auto_tcont_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_auto_boh_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_eqd_offset_plus_minus_offset(cparser_context_t *context,
    uint32_t *offset_ptr);
cparser_result_t cparser_cmd_gpon_set_aes_framecnt_framecnt(cparser_context_t *context,
    uint32_t *framecnt_ptr);
cparser_result_t cparser_cmd_gpon_set_aes_key_byte0_byte1_byte2_byte3_byte4_byte5_byte6_byte7_byte8_byte9_byte10_byte11_byte12_byte13_byte14_byte15(cparser_context_t *context,
    uint32_t *byte0_ptr,
    uint32_t *byte1_ptr,
    uint32_t *byte2_ptr,
    uint32_t *byte3_ptr,
    uint32_t *byte4_ptr,
    uint32_t *byte5_ptr,
    uint32_t *byte6_ptr,
    uint32_t *byte7_ptr,
    uint32_t *byte8_ptr,
    uint32_t *byte9_ptr,
    uint32_t *byte10_ptr,
    uint32_t *byte11_ptr,
    uint32_t *byte12_ptr,
    uint32_t *byte13_ptr,
    uint32_t *byte14_ptr,
    uint32_t *byte15_ptr);
cparser_result_t cparser_cmd_gpon_set_dbru_block_size_size(cparser_context_t *context,
    uint32_t *size_ptr);
cparser_result_t cparser_cmd_gpon_set_rogue_ont_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_ber_timer_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_serialnumber(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_serial_number(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_serial_number_hex(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_password(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_password_hex(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_active_timer(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_ds_laser_ds_phy_ds_ploam_ds_bwmap_ds_gem_ds_eth_ds_omci(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_us_laser_us_phy_us_ploam_us_dbr(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_onu_state(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_tcont_alloc_id_id(cparser_context_t *context,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_gpon_get_ds_flow_flow_id_id(cparser_context_t *context,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_gpon_get_us_flow_flow_id_id(cparser_context_t *context,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_gpon_get_multicast_filter(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_multicast_filter_entry_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_gpon_get_rdi(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_alarm_status(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_tx(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_auto_tcont(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_auto_boh(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_eqd_offset(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_aes_framecnt(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_bwmap_count_time(cparser_context_t *context,
    uint32_t *count_ptr,
    uint32_t *time_ptr);
cparser_result_t cparser_cmd_gpon_get_dbru_block_size(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_rogue_sd_cnt(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_pps_cnt(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_activate_init_state_o1_o7(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_deactivate(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_add_tcont_alloc_id_id(cparser_context_t *context,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_gpon_add_ds_flow_flow_id_id_gem_port_gem_ether_multicast_aes(cparser_context_t *context,
    uint32_t *id_ptr,
    uint32_t *gem_ptr);
cparser_result_t cparser_cmd_gpon_add_ds_flow_flow_id_id_gem_port_gem_omci_aes(cparser_context_t *context,
    uint32_t *id_ptr,
    uint32_t *gem_ptr);
cparser_result_t cparser_cmd_gpon_add_us_flow_flow_id_id_gem_port_gem_ether_omci(cparser_context_t *context,
    uint32_t *id_ptr,
    uint32_t *gem_ptr);
cparser_result_t cparser_cmd_gpon_add_multicast_filter_entry_mac_address_mac(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_gpon_del_tcont_alloc_id_id(cparser_context_t *context,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_gpon_del_ds_flow_flow_id_id(cparser_context_t *context,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_gpon_del_us_flow_flow_id_id(cparser_context_t *context,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_gpon_del_multicast_filter_entry_mac_address_mac(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_gpon_show_gtc_tcont_ds_flow_us_flow_multicast_filter_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_show_counter_global_active_ds_phy_ds_plm_ds_bw_ds_gem_ds_eth_ds_omci_us_phy_us_dbr_us_plm_us_gem_us_eth_us_omci(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_show_counter_tcont_tcont_id(cparser_context_t *context,
    uint32_t *tcont_id_ptr);
cparser_result_t cparser_cmd_gpon_show_counter_flow_flow_id(cparser_context_t *context,
    uint32_t *flow_id_ptr);
cparser_result_t cparser_cmd_gpon_init(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_deinit(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_reg_get_page_page_offset_offset(cparser_context_t *context,
    uint32_t *page_ptr,
    uint32_t *offset_ptr);
cparser_result_t cparser_cmd_gpon_reg_set_page_page_offset_offset_value_value(cparser_context_t *context,
    uint32_t *page_ptr,
    uint32_t *offset_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_gpon_unit_test_id(cparser_context_t *context,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_gpon_pkt_gen_buf_item_item_da_dmac_sa_smac_vid_vid_pattern_pattern_length_length(cparser_context_t *context,
    uint32_t *item_ptr,
    cparser_macaddr_t *dmac_ptr,
    cparser_macaddr_t *smac_ptr,
    uint32_t *vid_ptr,
    uint32_t *pattern_ptr,
    uint32_t *length_ptr);
cparser_result_t cparser_cmd_gpon_pkt_gen_cfg_item_item_tcont_tcont_gem_gem_tx_length_length_omci(cparser_context_t *context,
    uint32_t *item_ptr,
    uint32_t *tcont_ptr,
    uint32_t *gem_ptr,
    uint32_t *length_ptr);
cparser_result_t cparser_cmd_gpon_omci_tx_data1_data2_data3_data4_data5_data6_data7_data8_data9_data10_data11_data12(cparser_context_t *context,
    uint32_t *data1_ptr,
    uint32_t *data2_ptr,
    uint32_t *data3_ptr,
    uint32_t *data4_ptr,
    uint32_t *data5_ptr,
    uint32_t *data6_ptr,
    uint32_t *data7_ptr,
    uint32_t *data8_ptr,
    uint32_t *data9_ptr,
    uint32_t *data10_ptr,
    uint32_t *data11_ptr,
    uint32_t *data12_ptr);
cparser_result_t cparser_cmd_time_init(cparser_context_t *context);
cparser_result_t cparser_cmd_time_get_ptp_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_get_ptp_ports_all_transparent_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_get_ptp_ports_all_tx_indicator(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_get_cur_time(cparser_context_t *context);
cparser_result_t cparser_cmd_time_get_ref_time(cparser_context_t *context);
cparser_result_t cparser_cmd_time_get_frequency(cparser_context_t *context);
cparser_result_t cparser_cmd_time_get_ingress_type_sync_delay_req_pdelay_req_pdelay_resp_follow_up_delay_resp_pdelay_resp_follow_up_announce_signaling_sync_one_step_pdelay_req_one_step_action(cparser_context_t *context);
cparser_result_t cparser_cmd_time_get_egress_type_sync_delay_req_pdelay_req_pdelay_resp_follow_up_delay_resp_pdelay_resp_follow_up_announce_signaling_sync_one_step_pdelay_req_one_step_action(cparser_context_t *context);
cparser_result_t cparser_cmd_time_get_mean_path_delay(cparser_context_t *context);
cparser_result_t cparser_cmd_time_get_rxtime(cparser_context_t *context);
cparser_result_t cparser_cmd_time_get_tod_state(cparser_context_t *context);
cparser_result_t cparser_cmd_time_get_pps_state(cparser_context_t *context);
cparser_result_t cparser_cmd_time_get_pps_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_time_set_ptp_ports_all_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_set_ptp_ports_all_transparent_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_time_set_ref_time_increase_decrease_second_nanosecond(cparser_context_t *context,
    uint64_t *second_ptr,
    uint32_t *nanosecond_ptr);
cparser_result_t cparser_cmd_time_set_frequency_frequency(cparser_context_t *context,
    uint32_t *frequency_ptr);
cparser_result_t cparser_cmd_time_set_ingress_type_sync_delay_req_pdelay_req_pdelay_resp_follow_up_delay_resp_pdelay_resp_follow_up_announce_signaling_sync_one_step_pdelay_req_one_step_action_nop_trap_to_cpu_forward_to_trans_forward_to_trans_and_mirror_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_time_set_egress_type_sync_delay_req_pdelay_req_pdelay_resp_follow_up_delay_resp_pdelay_resp_follow_up_announce_signaling_sync_one_step_pdelay_req_one_step_action_nop_latch_time_latch_time_and_mirror_to_cpu_modify_correction(cparser_context_t *context);
cparser_result_t cparser_cmd_time_set_mean_path_delay_nanosecond(cparser_context_t *context,
    uint32_t *nanosecond_ptr);
cparser_result_t cparser_cmd_time_set_rxtime_second_nanosecond(cparser_context_t *context,
    uint64_t *second_ptr,
    uint32_t *nanosecond_ptr);
cparser_result_t cparser_cmd_time_set_pps_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_time_set_pps_mode_pon_ptp(cparser_context_t *context);
cparser_result_t cparser_cmd_time_set_ponmode_gpon_epon_startpoint_cnt_pon_tod_time_second_nanosecond_state_disable_enable(cparser_context_t *context,
    uint32_t *cnt_ptr,
    uint64_t *second_ptr,
    uint32_t *nanosecond_ptr);
cparser_result_t cparser_cmd_time_latch_cur_time(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_lite_init(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_ip_link_list(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_ip_link_list_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_ip_link_add_netif_index_address_macaddr_type_wan_lan(cparser_context_t *context,
    uint32_t *index_ptr,
    cparser_macaddr_t *macaddr_ptr);
cparser_result_t cparser_cmd_l34_ip_link_set_netif_index_vid_vid_default_pri_pri(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *vid_ptr,
    uint32_t *pri_ptr);
cparser_result_t cparser_cmd_l34_ip_link_set_netif_index_pppoe_state_disable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_ip_link_set_netif_index_pppoe_state_enable_sessionId_id_pass_through_enable_disable(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_l34_ip_link_set_netif_index_routing_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_ip_link_set_netif_index_mtu_mtu(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *mtu_ptr);
cparser_result_t cparser_cmd_l34_ip_link_set_netif_index_nat_type_nat_internal_ip_ipaddr(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *ipaddr_ptr);
cparser_result_t cparser_cmd_l34_ip_link_set_netif_index_nat_type_local_public_full_cone_napt_restricted_napt_port_restricted_napt(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_ip_link_set_netif_index_down_up(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_ip_link_del_netif_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_ip_addr_set_ipaddr_prefix_len_len_dev_netifId(cparser_context_t *context,
    uint32_t *ipaddr_ptr,
    uint32_t *len_ptr,
    uint32_t *netifId_ptr);
cparser_result_t cparser_cmd_l34_ip_addr_set_ipaddr_prefix_len_len_via_macaddr_dev_netifId(cparser_context_t *context,
    uint32_t *ipaddr_ptr,
    uint32_t *len_ptr,
    cparser_macaddr_t *macaddr_ptr,
    uint32_t *netifId_ptr);
cparser_result_t cparser_cmd_l34_ip_neigh_add_ipaddr_macaddr(cparser_context_t *context,
    uint32_t *ipaddr_ptr,
    cparser_macaddr_t *macaddr_ptr);
cparser_result_t cparser_cmd_l34_ip_neigh_list_ipaddr(cparser_context_t *context,
    uint32_t *ipaddr_ptr);
cparser_result_t cparser_cmd_l34_ip_neigh_del_ipaddr(cparser_context_t *context,
    uint32_t *ipaddr_ptr);
cparser_result_t cparser_cmd_l34_ip_route_add_default_macaddr_dev_netifId(cparser_context_t *context,
    cparser_macaddr_t *macaddr_ptr,
    uint32_t *netifId_ptr);
cparser_result_t cparser_cmd_l34_ip_route_add_ipaddr_prefix_len_len_via_macaddr_dev_netifId(cparser_context_t *context,
    uint32_t *ipaddr_ptr,
    uint32_t *len_ptr,
    cparser_macaddr_t *macaddr_ptr,
    uint32_t *netifId_ptr);
cparser_result_t cparser_cmd_l34_ip_route_add_ipaddr_prefix_len_len_trap_drop_dev_netifId(cparser_context_t *context,
    uint32_t *ipaddr_ptr,
    uint32_t *len_ptr,
    uint32_t *netifId_ptr);
cparser_result_t cparser_cmd_l34_ip_route_list_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_ip_route_del_ipaddr_prefix_len_len(cparser_context_t *context,
    uint32_t *ipaddr_ptr,
    uint32_t *len_ptr);
cparser_result_t cparser_cmd_l34_ip_route_del_default(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_conntrack_add_dir_upsteram_downstream_srcip_sip_srcport_sport_dstip_dip_dstport_dport_proto_tcp_udp_natip_nip_natport_nport_priority_pri(cparser_context_t *context,
    uint32_t *sip_ptr,
    uint32_t *sport_ptr,
    uint32_t *dip_ptr,
    uint32_t *dport_ptr,
    uint32_t *nip_ptr,
    uint32_t *nport_ptr,
    uint32_t *pri_ptr);
cparser_result_t cparser_cmd_l34_conntrack_add_dir_upsteram_downstream_srcip_sip_srcport_sport_dstip_dip_dstport_dport_proto_tcp_udp_natip_nip_natport_nport(cparser_context_t *context,
    uint32_t *sip_ptr,
    uint32_t *sport_ptr,
    uint32_t *dip_ptr,
    uint32_t *dport_ptr,
    uint32_t *nip_ptr,
    uint32_t *nport_ptr);
cparser_result_t cparser_cmd_l34_conntrack_get_srcip_sip_srcport_sport_dstip_dip_dstport_dport_proto_tcp_udp(cparser_context_t *context,
    uint32_t *sip_ptr,
    uint32_t *sport_ptr,
    uint32_t *dip_ptr,
    uint32_t *dport_ptr);
cparser_result_t cparser_cmd_l34_conntrack_del_srcip_sip_srcport_sport_dstip_dip_dstport_dport_proto_tcp_udp(cparser_context_t *context,
    uint32_t *sip_ptr,
    uint32_t *sport_ptr,
    uint32_t *dip_ptr,
    uint32_t *dport_ptr);
cparser_result_t cparser_cmd_l34_sys_l34_route_l3_nat_l4_nat_l3_checksum_error_allow_l4_checksum_error_allow_nat_attack_log_ttl_minus_fragement_to_cpu_binding_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_sys_interface_decision_mode_mode_vlan_based_port_based_mac_based(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_sys_port_map_mac_port_ext_port_dslvc_port_ports_all_dev_index(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_sys_wan_route_action_drop_trap_to_cpu_forward(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_sys_list(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_ip6_route_add_default_macaddr_dev_netifId(cparser_context_t *context,
    cparser_macaddr_t *macaddr_ptr,
    uint32_t *netifId_ptr);
cparser_result_t cparser_cmd_l34_ip6_route_add_ip6addr_prefix_len_prefixlen_via_macaddr_dev_netifId(cparser_context_t *context,
    char **ip6addr_ptr,
    uint32_t *prefixlen_ptr,
    cparser_macaddr_t *macaddr_ptr,
    uint32_t *netifId_ptr);
cparser_result_t cparser_cmd_l34_ip6_route_add_ip6addr_prefix_len_prefixlen_trap_drop_dev_netifId(cparser_context_t *context,
    char **ip6addr_ptr,
    uint32_t *prefixlen_ptr,
    uint32_t *netifId_ptr);
cparser_result_t cparser_cmd_l34_ip6_route_list_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_ip6_route_del_ip6addr_prefix_len_prefixlen(cparser_context_t *context,
    char **ip6addr_ptr,
    uint32_t *prefixlen_ptr);
cparser_result_t cparser_cmd_l34_ip6_route_del_default(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_ip6_neigh_add_ip6addr_lladdr_macaddr(cparser_context_t *context,
    char **ip6addr_ptr,
    cparser_macaddr_t *macaddr_ptr);
cparser_result_t cparser_cmd_l34_ip6_neigh_del_ip6addr(cparser_context_t *context,
    char **ip6addr_ptr);
cparser_result_t cparser_cmd_l34_ip6_neigh_list_ip6addr(cparser_context_t *context,
    char **ip6addr_ptr);
cparser_result_t cparser_cmd_l34_ip6_addr_add_ip6addr_prefix_len_prefixlen_dev_netifId(cparser_context_t *context,
    char **ip6addr_ptr,
    uint32_t *prefixlen_ptr,
    uint32_t *netifId_ptr);
cparser_result_t cparser_cmd_l34_ip6_addr_del_ip6addr_prefix_len_prefixlen_dev_netifId(cparser_context_t *context,
    char **ip6addr_ptr,
    uint32_t *prefixlen_ptr,
    uint32_t *netifId_ptr);
cparser_result_t cparser_cmd_l34_init(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_reset_table_l3_pppoe_nexthop_interface_external_ip_arp_naptr_napt_wan_type_binding_neighbor_l3v6_flow(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_reset_arp_traffic_indicator_table0_table1(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_reset_l4_traffic_indicator_table0_table1(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_reset_counter_netif_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_arp(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_arp_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_external_ip(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_external_ip_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_routing(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_routing_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_netif(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_netif_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_nexthop(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_nexthop_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_pppoe(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_pppoe_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_napt(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_napt_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_naptr(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_naptr_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l34_get_ext_ext_all(cparser_context_t *context,
    char **ext_ptr);
cparser_result_t cparser_cmd_l34_get_l4_fragment(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_l3_checksum_error(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_l4_checksum_error(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_ttl_minus_state(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_interface_decision_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_nat_attack(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_wan_route(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_route_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_pppoe_traffic_indicator_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_pppoe_traffic_indicator(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_arp_traffic_indicator_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_arp_traffic_indicator(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_arp_traffic_indicator_sip(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_arp_traffic_indicator_dip(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_l4_traffic_indicator_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_l4_traffic_indicator(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_flow_traffic_indicator_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_routing6(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_routing6_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_neighbor(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_neighbor_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_binding(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_binding_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_binding_unmatch_type_l2tol3_l2tol34_l3tol2_l3tol34_l34tol2_l34tol3_l3tol3(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_binding_customized_l2_l3_l34(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_wan_type(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_wan_type_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_map_port_to_wan_ext_to_wan_wan_to_port_wan_to_ext_index_tableId(cparser_context_t *context,
    uint32_t *tableId_ptr);
cparser_result_t cparser_cmd_l34_get_flow_route_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_flow_route_valid_ipv4_ipv6(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_flow_route_state(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_ds_lite_interface(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_ds_lite_interface_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_ds_lite_mcast_table(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_ds_lite_mcast_table_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_ds_lite_state(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_ds_lite_mcast_unmatch_act(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_ds_lite_ds_unmatch_act(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_ds_lite_ipv6_next_header_act(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_ds_lite_ipv6_frag_act(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_ds_lite_ipv4_frag_act(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_counter_netif_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_lut_miss_action(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_ip_mcast_trans(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_ip_mcast_trans_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_arp_index_next_hop_table_nh_index(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *nh_index_ptr);
cparser_result_t cparser_cmd_l34_set_arp_index_ip_ip(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *ip_ptr);
cparser_result_t cparser_cmd_l34_set_external_ip_index_type_nat_napt_lp(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_external_ip_index_external_ip_ip(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *ip_ptr);
cparser_result_t cparser_cmd_l34_set_external_ip_index_internal_ip_ip(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *ip_ptr);
cparser_result_t cparser_cmd_l34_set_external_ip_index_next_hop_table_nh_index(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *nh_index_ptr);
cparser_result_t cparser_cmd_l34_set_external_ip_index_nat_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_external_ip_index_nat_priority_priority(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l34_set_external_ip_index_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_routing_index_ip_ip_ip_mask_mask(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *ip_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_l34_set_routing_index_interface_type_internal_external(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_routing_index_type_drop_trap(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_routing_index_type_local_route_destination_netif_netif_index(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *netif_index_ptr);
cparser_result_t cparser_cmd_l34_set_routing_index_type_local_route_arp_start_address_start_addr_arp_end_address_end_addr(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *start_addr_ptr,
    uint32_t *end_addr_ptr);
cparser_result_t cparser_cmd_l34_set_routing_index_type_global_route_next_hop_table_nh_index(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *nh_index_ptr);
cparser_result_t cparser_cmd_l34_set_routing_index_type_global_route_next_hop_start_address_next_hop_number_nh_number(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *address_ptr,
    uint32_t *nh_number_ptr);
cparser_result_t cparser_cmd_l34_set_routing_index_type_global_route_next_hop_algo_per_packet_per_session_per_source_ip(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_routing_index_type_global_route_ip_domain_range_range(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *range_ptr);
cparser_result_t cparser_cmd_l34_set_routing_index_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_netif_index_gateway_mac_mac_mac_mask_no_mask_1bit_mask_2bit_mask_3bit_mask(cparser_context_t *context,
    uint32_t *index_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l34_set_netif_index_vid_vid(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_l34_set_netif_index_mtu_mtu(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *mtu_ptr);
cparser_result_t cparser_cmd_l34_set_netif_index_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_netif_index_l3_route_state_enable_disable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_netif_index_dslite_state_enable_disable_dslite_idx(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *dslite_idx_ptr);
cparser_result_t cparser_cmd_l34_set_netif_index_l34_state_enable_disable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_netif_index_ip_ip(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *ip_ptr);
cparser_result_t cparser_cmd_l34_set_netif_index_ctag_if_state_enable_disable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_nexthop_index_netif_netif_index(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *netif_index_ptr);
cparser_result_t cparser_cmd_l34_set_nexthop_index_l2_l2_index(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *l2_index_ptr);
cparser_result_t cparser_cmd_l34_set_nexthop_index_type_ethernet_pppoe(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_nexthop_index_pppoe_pppoe_index(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *pppoe_index_ptr);
cparser_result_t cparser_cmd_l34_set_nexthop_index_keepPppoe_replace_by_pppIdx_original_original_tag_or_add_by_pppIdx(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_pppoe_index_session_id_session_id(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *session_id_ptr);
cparser_result_t cparser_cmd_l34_set_napt_index_hash_index_hash_index(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *hash_index_ptr);
cparser_result_t cparser_cmd_l34_set_napt_index_napt_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_napt_index_napt_priority_priority(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l34_set_napt_index_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_naptr_index_internal_ip_ip_internal_port_port(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *ip_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_l34_set_naptr_index_protocol_tcp_udp(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_naptr_index_external_ip_extip_index_external_port_lsb_export_lsb(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *extip_index_ptr,
    uint32_t *export_lsb_ptr);
cparser_result_t cparser_cmd_l34_set_naptr_index_naptr_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_naptr_index_naptr_priority_priority(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l34_set_naptr_index_remote_hash_type_none_remote_ip_remote_ip_remote_port(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_naptr_index_hash_value_value(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_l34_set_naptr_index_state_disable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_port_ports_all_netif_index(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_ext_ext_all_netif_index(cparser_context_t *context,
    char **ext_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_l4_fragment_action_trap_to_cpu_forward(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_l3_checksum_error_action_forward_drop(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_l4_checksum_error_action_forward_drop(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_ttl_minus_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_interface_decision_mode_vlan_based_port_based_mac_based(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_nat_attack_action_drop_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_wan_route_action_drop_trap_to_cpu_forward(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_route_mode_l3_l3_l4_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_neighbor_index_ifId_ifIdValue(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *ifIdValue_ptr);
cparser_result_t cparser_cmd_l34_set_binding_index_wan_type_wanTypeId(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *wanTypeId_ptr);
cparser_result_t cparser_cmd_l34_set_binding_index_protocol_all_ipv4_other_ipv6_other_other_only(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_binding_index_vid_vlanId(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *vlanId_ptr);
cparser_result_t cparser_cmd_l34_set_binding_index_port_ports_all(cparser_context_t *context,
    uint32_t *index_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_l34_set_binding_index_ext_port_ports_all(cparser_context_t *context,
    uint32_t *index_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_l34_set_binding_unmatch_type_l2tol3_l2tol34_act_drop_trap_force_l2_bridge(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_binding_unmatch_type_l3tol2_l34tol2_act_drop_trap_permit_l2_bridge(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_binding_unmatch_type_l3tol34_act_trap_force_l4_lookup(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_binding_unmatch_type_l34tol3_l3tol3_act_trap_force_l3(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_binding_customized_l2_act_trap_drop_permit_l2_bridge(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_binding_customized_l3_act_trap_drop_force_l3_force_L4_lookup(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_binding_customized_l34_act_trap_drop_force_l3_normal(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_wan_type_index_type_l2_bridge_l3_routing_l34_nat_route_l34_customize(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_wan_type_index_next_hop_nexthopId(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *nexthopId_ptr);
cparser_result_t cparser_cmd_l34_set_map_port_portId_wan_wanId_state_enable_disable(cparser_context_t *context,
    uint32_t *portId_ptr,
    uint32_t *wanId_ptr);
cparser_result_t cparser_cmd_l34_set_map_ext_extId_wan_wanId_state_enable_disable(cparser_context_t *context,
    uint32_t *extId_ptr,
    uint32_t *wanId_ptr);
cparser_result_t cparser_cmd_l34_set_map_wan_wanId_port_portId_state_enable_disable(cparser_context_t *context,
    uint32_t *wanId_ptr,
    uint32_t *portId_ptr);
cparser_result_t cparser_cmd_l34_set_map_wan_wanId_ext_extId_state_enable_disable(cparser_context_t *context,
    uint32_t *wanId_ptr,
    uint32_t *extId_ptr);
cparser_result_t cparser_cmd_l34_set_flow_route_index_state_enable_disable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_flow_route_index_ipv4_sip_sip_dip_dip(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *sip_ptr,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l34_set_flow_route_index_ipv6_sip_sip_dip_dip(cparser_context_t *context,
    uint32_t *index_ptr,
    char **sip_ptr,
    char **dip_ptr);
cparser_result_t cparser_cmd_l34_set_flow_route_index_sport_sport_dport_dport(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *sport_ptr,
    uint32_t *dport_ptr);
cparser_result_t cparser_cmd_l34_set_flow_route_index_tcp_state_enable_disable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_flow_route_index_nexthop_nhIdx(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *nhIdx_ptr);
cparser_result_t cparser_cmd_l34_set_flow_route_index_type_drop_trap_local_route_global_route(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_flow_route_index_priority_priority(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l34_set_flow_route_index_pri_valid_enable_disable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_flow_route_state_ipv4_ipv6_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_ds_lite_interface_index_aftr_ip6_aftr_ip6_b4_ip6_b4_ip6(cparser_context_t *context,
    uint32_t *index_ptr,
    char **aftr_ip6_ptr,
    char **b4_ip6_ptr);
cparser_result_t cparser_cmd_l34_set_ds_lite_interface_index_flow_label_flow_label_hop_limit_hop_limit_tc_opt_assign_copy_egress_tos_tc_value(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *flow_label_ptr,
    uint32_t *hop_limit_ptr,
    uint32_t *tc_value_ptr);
cparser_result_t cparser_cmd_l34_set_ds_lite_interface_index_state_enable_disable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_ds_lite_mcast_table_index_src_ip6_src_ip6_mask_src_mask_dst_ip6_dst_ip6_mask_dst_mask(cparser_context_t *context,
    uint32_t *index_ptr,
    char **src_ip6_ptr,
    char **src_mask_ptr,
    char **dst_ip6_ptr,
    char **dst_mask_ptr);
cparser_result_t cparser_cmd_l34_set_ds_lite_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_ds_lite_mcast_unmatch_act_drop_trap(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_ds_lite_ds_unmatch_act_drop_trap(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_ds_lite_ipv6_next_header_act_trap_extheader_over_0_trap_extheader_over_240(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_ds_lite_ipv6_frag_act_trap_drop(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_ds_lite_ipv4_frag_act_trap_drop_forward(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_lut_miss_action_drop_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_ip_mcast_trans_index_netif_netIfIdx(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *netIfIdx_ptr);
cparser_result_t cparser_cmd_l34_set_ip_mcast_trans_index_sip_trans_enable_disable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_ip_mcast_trans_index_ext_ip_extIpIdx(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *extIpIdx_ptr);
cparser_result_t cparser_cmd_l34_set_ip_mcast_trans_index_pppoe_pppIdx(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *pppIdx_ptr);
cparser_result_t cparser_cmd_l34_set_ip_mcast_trans_index_pppoe_act_no_act_keep_remove_modify(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_ip_mcast_trans_index_untag_member_ports_all_none(cparser_context_t *context,
    uint32_t *index_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_l34_set_arp_traffic_indicator_sip_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_arp_traffic_indicator_dip_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_del_arp_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_del_external_ip_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_del_routing_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_del_netif_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_del_napt_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_del_naptr_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_select_arp_traffic_indicator_table0_table1(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_select_l4_traffic_indicator_table0_table1(cparser_context_t *context);
cparser_result_t cparser_cmd_auto_fallback_get_ignore_timeout_state(cparser_context_t *context);
cparser_result_t cparser_cmd_auto_fallback_get_error_count(cparser_context_t *context);
cparser_result_t cparser_cmd_auto_fallback_get_monitor_count(cparser_context_t *context);
cparser_result_t cparser_cmd_auto_fallback_get_port_ports_error_counter(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_auto_fallback_get_port_ports_monitor_counter(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_auto_fallback_get_port_ports_restore(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_auto_fallback_get_port_ports_valid_flow(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_auto_fallback_get_port_ports_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_auto_fallback_get_port_ports_current_power_level(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_auto_fallback_get_reduce_power_level_state(cparser_context_t *context);
cparser_result_t cparser_cmd_auto_fallback_get_timer_state(cparser_context_t *context);
cparser_result_t cparser_cmd_auto_fallback_get_timer(cparser_context_t *context);
cparser_result_t cparser_cmd_auto_fallback_set_ignore_timeout_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_auto_fallback_set_error_count_1_2_4_8_16_32_64_128(cparser_context_t *context);
cparser_result_t cparser_cmd_auto_fallback_set_monitor_count_8K_16K_32K_64K_128K_256K_512K_1M(cparser_context_t *context);
cparser_result_t cparser_cmd_auto_fallback_set_port_ports_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_auto_fallback_set_reduce_power_level_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_auto_fallback_set_timer_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_auto_fallback_set_timer_timer(cparser_context_t *context,
    uint32_t *timer_ptr);
cparser_result_t cparser_cmd_rldp_init(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_set_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_set_bypass_flow_control_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_set_mode_sa_moving_periodic(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_set_magic_mac(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_rldp_set_compare_type_magic_and_identifier_magic_only(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_set_handle_hardware_software(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_set_re_generate_identifier(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_set_check_loop_period_time(cparser_context_t *context,
    uint32_t *time_ptr);
cparser_result_t cparser_cmd_rldp_set_check_loop_number_count(cparser_context_t *context,
    uint32_t *count_ptr);
cparser_result_t cparser_cmd_rldp_set_port_port_all_state_disable_enable(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_rldp_set_port_port_all_control_state_none_looping_looping(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_rldp_get_state(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_get_bypass_flow_control_state(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_get_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_get_magic(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_get_identifier(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_get_compare_type(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_get_handle(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_get_check_loop_period(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_get_check_loop_number(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_get_port_port_all_state(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_rldp_get_port_port_all_status(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_rldp_get_port_port_all_control_state(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_rldp_get_port_port_all_looped_port_id(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_rldp_clear_port_port_all_status_entering_leaving(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_rlpp_set_trap_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_rlpp_get_trap_state(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_init(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_dump(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_get_distribute_algorithm(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_get_queue_empty(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_get_flow_control_state(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_get_hash_mapping_hash_value_all(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_get_member_port(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_get_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_get_traffic_separation_flooding_state(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_set_distribute_algorithm_dst_ip_dst_l4_port_dst_mac_src_ip_src_l4_port_src_mac_src_port(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_set_flow_control_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_set_hash_mapping_hash_value_value_port_port(cparser_context_t *context,
    uint32_t *value_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_trunk_set_member_port_ports_none(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_trunk_set_mode_dumb_normal(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_set_traffic_separation_flooding_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_dot1x_init(cparser_context_t *context);
cparser_result_t cparser_cmd_dot1x_get_guest_vlan(cparser_context_t *context);
cparser_result_t cparser_cmd_dot1x_get_mac_based_direction(cparser_context_t *context);
cparser_result_t cparser_cmd_dot1x_get_mac_based_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_dot1x_get_port_based_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_dot1x_get_trap_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_dot1x_get_unauth_packet_port_ports_all_action(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_dot1x_set_guest_vlan_to_auth_da_allow_disallow(cparser_context_t *context);
cparser_result_t cparser_cmd_dot1x_set_guest_vlan_vid_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_dot1x_set_mac_based_direction_both_in(cparser_context_t *context);
cparser_result_t cparser_cmd_dot1x_set_mac_based_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_dot1x_set_port_based_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_dot1x_set_port_based_port_ports_all_auth_unauth(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_dot1x_set_port_based_port_ports_all_direction_both_in(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_dot1x_set_trap_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_dot1x_set_unauth_packet_port_ports_all_action_drop_guest_vlan_trap_to_cpu(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_mirror_init(cparser_context_t *context);
cparser_result_t cparser_cmd_mirror_dump(cparser_context_t *context);
cparser_result_t cparser_cmd_mirror_set_egress_mode_all_pkt_mirrored_only(cparser_context_t *context);
cparser_result_t cparser_cmd_mirror_set_mirroring_port_port_mirrored_port_ports_none_rx_mirror_tx_mirror(cparser_context_t *context,
    uint32_t *port_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_mirror_get_egress_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_security_init(cparser_context_t *context);
cparser_result_t cparser_cmd_security_set_attack_prevent_port_port_all_state_disable_enable(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_security_set_attack_prevent_daeqsa_deny_land_deny_blat_deny_synfin_deny_xma_deny_nullscan_deny_tcphdr_min_check_syn_sportl1024_deny_action_forward_drop_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_security_set_attack_prevent_syn_flood_fin_flood_icmp_flood_action_forward_drop_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_security_set_attack_prevent_syn_flood_fin_flood_icmp_flood_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_security_set_attack_prevent_tcp_frag_off_min_check_icmp_frag_pkts_deny_pod_deny_udp_bomb_syn_with_data_action_forward_drop_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_security_get_attack_prevent_port_port_all_state(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_security_get_attack_prevent_daeqsa_deny_land_deny_blat_deny_synfin_deny_xma_deny_nullscan_deny_tcphdr_min_check_syn_sportl1024_deny_action(cparser_context_t *context);
cparser_result_t cparser_cmd_security_get_attack_prevent_syn_flood_fin_flood_icmp_flood_action(cparser_context_t *context);
cparser_result_t cparser_cmd_security_get_attack_prevent_syn_flood_fin_flood_icmp_flood_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_security_get_attack_prevent_tcp_frag_off_min_check_icmp_frag_pkts_deny_pod_deny_udp_bomb_syn_with_data_action(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_get_version(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_get_init(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_get_intf_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_get_mac_entry_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_get_arp_entry_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_get_napt_connection_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_get_url_filter_url_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_rg_get_port_isolation_port_port(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_rg_get_algApps(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_get_neighbor_entry_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_get_binding_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_get_macfilter_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_get_virtualServer_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_get_dosPortMaskEnable(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_get_dosType_dos_type_dos_type(cparser_context_t *context,
    uint32_t *dos_type_ptr);
cparser_result_t cparser_cmd_rg_get_dosFloodType_dos_type_dos_type(cparser_context_t *context,
    uint32_t *dos_type_ptr);
cparser_result_t cparser_cmd_rg_get_cvlan_vlanId_vlanId(cparser_context_t *context,
    uint32_t *vlanId_ptr);
cparser_result_t cparser_cmd_rg_get_port_based_vlan_port_idx_port_idx(cparser_context_t *context,
    uint32_t *port_idx_ptr);
cparser_result_t cparser_cmd_rg_get_wlan_dev_based_vlan_wlan_idx_wlan_idx_dev_idx_dev_idx(cparser_context_t *context,
    uint32_t *wlan_idx_ptr,
    uint32_t *dev_idx_ptr);
cparser_result_t cparser_cmd_rg_get_wanAccessLimitPortMask(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_get_wanAccessLimitCategory_category_category(cparser_context_t *context,
    uint32_t *category_ptr);
cparser_result_t cparser_cmd_rg_get_wanAccessLimitCategory_mac_mac(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_rg_get_softwareSourceAddrLearningLimit_port_idx_port_idx(cparser_context_t *context,
    uint32_t *port_idx_ptr);
cparser_result_t cparser_cmd_rg_get_softwareSourceAddrLearningLimit_port_idx_all(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_get_softwareSourceAddrLearningLimit_wlan_idx_wlan_idx_device_idx_device_idx(cparser_context_t *context,
    uint32_t *wlan_idx_ptr,
    uint32_t *device_idx_ptr);
cparser_result_t cparser_cmd_rg_get_phyPortForceAbility_port_idx_port(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_rg_get_cpuPortForceTrafficCtrl(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_get_portMirror_port_port(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_rg_get_portEgrBandwidthCtrlRate_port_port(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_rg_get_portIgrBandwidthCtrlRate_port_port(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_rg_get_upnpConnection_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_get_dmzHost_wan_intf_idx_wan_intf_idx(cparser_context_t *context,
    uint32_t *wan_intf_idx_ptr);
cparser_result_t cparser_cmd_rg_get_stormControl_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_get_shareMeter_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_rg_get_qosStrictPriorityOrWeightFairQueue_port_port(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_rg_get_qosInternalPriMapToQueueId(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_get_qosInternalPriDecisionByWeight(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_get_qosDscpRemapToInternalPri(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_get_qosPortBasedPriority(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_get_qosDot1pPriRemapToInternalPri(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_get_qosDscpRemarkEgressPortEnableAndSrcSelect(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_get_qosDscpRemarkByInternalPri(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_get_qosDscpRemarkByDscp(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_get_qosDot1pPriRemarkByInternalPriEgressPortEnable(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_get_qosDot1pPriRemarkByInternalPri(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_get_multicastFlow_entry_flow_idx(cparser_context_t *context,
    uint32_t *flow_idx_ptr);
cparser_result_t cparser_cmd_rg_get_portStatus_port_port_idx(cparser_context_t *context,
    uint32_t *port_idx_ptr);
cparser_result_t cparser_cmd_rg_get_svlanTpid(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_get_svlanServicePort_port_port(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_rg_get_pppoeInterfaceIdleTime_interfaceIdx_interfaceIdx(cparser_context_t *context,
    uint32_t *interfaceIdx_ptr);
cparser_result_t cparser_cmd_rg_get_gatewayServicePort_entry_idx(cparser_context_t *context,
    uint32_t *idx_ptr);
cparser_result_t cparser_cmd_rg_get_naptFilterAndQos_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_get_stpBlockingPortmask(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_get_gponDsBcFilter_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_get_dsliteMc_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_rg_get_interfaceMibCounter_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_rg_get_redirectHttpAll(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_get_acl_filter_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_get_classify_filter_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_rg_init(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_init_callback_igmpSnoopingEnable_igmpSnoopingEnable_macBasedTagDecision_macBasedTagDecision_wanPortGponMode_wanPortGponMode(cparser_context_t *context,
    uint32_t *igmpSnoopingEnable_ptr,
    uint32_t *macBasedTagDecision_ptr,
    uint32_t *wanPortGponMode_ptr);
cparser_result_t cparser_cmd_rg_init_callback_igmpSnoopingEnable_igmpSnoopingEnable_macBasedTagDecision_macBasedTagDecision_wanPortGponMode_wanPortGponMode_ivlMulticastSupport_ivlMulticastSupport(cparser_context_t *context,
    uint32_t *igmpSnoopingEnable_ptr,
    uint32_t *macBasedTagDecision_ptr,
    uint32_t *wanPortGponMode_ptr,
    uint32_t *ivlMulticastSupport_ptr);
cparser_result_t cparser_cmd_rg_init_callback_default_igmpSnoopingEnable_igmpSnoopingEnable_macBasedTagDecision_macBasedTagDecision_wanPortGponMode_wanPortGponMode(cparser_context_t *context,
    uint32_t *igmpSnoopingEnable_ptr,
    uint32_t *macBasedTagDecision_ptr,
    uint32_t *wanPortGponMode_ptr);
cparser_result_t cparser_cmd_rg_init_callback_default_igmpSnoopingEnable_igmpSnoopingEnable_macBasedTagDecision_macBasedTagDecision_wanPortGponMode_wanPortGponMode_ivlMulticastSupport_ivlMulticastSupport(cparser_context_t *context,
    uint32_t *igmpSnoopingEnable_ptr,
    uint32_t *macBasedTagDecision_ptr,
    uint32_t *wanPortGponMode_ptr,
    uint32_t *ivlMulticastSupport_ptr);
cparser_result_t cparser_cmd_rg_init_callback_default_igmpSnoopingEnable_igmpSnoopingEnable_macBasedTagDecision_macBasedTagDecision_wanPortGponMode_wanPortGponMode_ivlMulticastSupport_ivlMulticastSupport_fwdVlan_CPU_fwdVlan_CPU_fwdVlan_Proto_Block_fwdVlan_Proto_Block(cparser_context_t *context,
    uint32_t *igmpSnoopingEnable_ptr,
    uint32_t *macBasedTagDecision_ptr,
    uint32_t *wanPortGponMode_ptr,
    uint32_t *ivlMulticastSupport_ptr,
    uint32_t *fwdVlan_CPU_ptr,
    uint32_t *fwdVlan_Proto_Block_ptr);
cparser_result_t cparser_cmd_rg_init_callback_default_igmpSnoopingEnable_igmpSnoopingEnable_macBasedTagDecision_macBasedTagDecision_wanPortGponMode_wanPortGponMode_ivlMulticastSupport_ivlMulticastSupport_fwdVlan_CPU_fwdVlan_CPU_fwdVlan_CPU_SVLAN_fwdVlan_CPU_SVLAN_fwdVlan_Proto_Block_fwdVlan_Proto_Block(cparser_context_t *context,
    uint32_t *igmpSnoopingEnable_ptr,
    uint32_t *macBasedTagDecision_ptr,
    uint32_t *wanPortGponMode_ptr,
    uint32_t *ivlMulticastSupport_ptr,
    uint32_t *fwdVlan_CPU_ptr,
    uint32_t *fwdVlan_CPU_SVLAN_ptr,
    uint32_t *fwdVlan_Proto_Block_ptr);
cparser_result_t cparser_cmd_rg_init_callback_default_igmpSnoopingEnable_igmpSnoopingEnable_macBasedTagDecision_macBasedTagDecision_wanPortGponMode_wanPortGponMode_fwdVlan_CPU_fwdVlan_CPU_fwdVlan_Proto_Block_fwdVlan_Proto_Block(cparser_context_t *context,
    uint32_t *igmpSnoopingEnable_ptr,
    uint32_t *macBasedTagDecision_ptr,
    uint32_t *wanPortGponMode_ptr,
    uint32_t *fwdVlan_CPU_ptr,
    uint32_t *fwdVlan_Proto_Block_ptr);
cparser_result_t cparser_cmd_rg_init_callback_default_igmpSnoopingEnable_igmpSnoopingEnable_macBasedTagDecision_macBasedTagDecision_wanPortGponMode_wanPortGponMode_fwdVlan_CPU_fwdVlan_CPU_fwdVlan_CPU_SVLAN_fwdVlan_CPU_SVLAN_fwdVlan_Proto_Block_fwdVlan_Proto_Block(cparser_context_t *context,
    uint32_t *igmpSnoopingEnable_ptr,
    uint32_t *macBasedTagDecision_ptr,
    uint32_t *wanPortGponMode_ptr,
    uint32_t *fwdVlan_CPU_ptr,
    uint32_t *fwdVlan_CPU_SVLAN_ptr,
    uint32_t *fwdVlan_Proto_Block_ptr);
cparser_result_t cparser_cmd_rg_show_lan_intf(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_wan_intf(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_wan_intf_static_info(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_wan_intf_dslite_info(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_mac_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_arp_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_napt_connection(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_callback(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_pppoeClientInfoAfterDial(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_pppoeClientInfoBeforeDial(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_pptpClientInfoBeforeDial(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_pptpClientInfoAfterDial(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_l2tpClientInfoBeforeDial(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_l2tpClientInfoAfterDial(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_pppoeDsliteInfoAfterDial(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_pppoeDsliteInfoBeforeDial(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_neighbor_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_dhcpClientInfo(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_binding(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_macfilter(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_virtualServer(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_cvlan(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_upnpConnection(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_stormControl(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_multicastFlow(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_gatewayServicePort(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_naptFilterAndQos(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_gponDsBcFilter(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_acl_filter(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_show_classify_filter(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_lan_intf(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_wan_intf(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_wan_intf_static_info(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_wan_intf_dslite_info(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_mac_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_arp_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_napt_connection(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_url_filter_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_callback(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_pppoeClientInfoAfterDial(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_pppoeClientInfoBeforeDial(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_pptpClientInfoBeforeDial(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_pptpClientInfoAfterDial(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_l2tpClientInfoBeforeDial(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_l2tpClientInfoAfterDial(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_pppoeDsliteInfoAfterDial(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_pppoeDsliteInfoBeforeDial(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_neighbor_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_dhcpClientInfo(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_binding(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_macfilter(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_virtualServer(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_cvlan(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_upnpConnection(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_stormControl(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_multicastFlow(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_gatewayServicePort(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_naptFilterAndQos(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_gponDsBcFilter(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_acl_filter(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_clear_classify_filter(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_add_lan_intf_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_add_wan_intf_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_add_wan_intf_static_info_intf_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_rg_add_wan_intf_dslite_info_intf_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_rg_add_mac_entry_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_add_arp_entry_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_add_napt_connection_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_add_url_filter_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_add_port_isolation_port_port_portmask_portmask(cparser_context_t *context,
    uint32_t *port_ptr,
    uint32_t *portmask_ptr);
cparser_result_t cparser_cmd_rg_add_algApps_app_mask_appmask(cparser_context_t *context,
    uint32_t *appmask_ptr);
cparser_result_t cparser_cmd_rg_add_serverInLanAppsIpAddr_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_add_pppoeClientInfoAfterDial_wan_intf_idx_wan_intf_idx(cparser_context_t *context,
    uint32_t *wan_intf_idx_ptr);
cparser_result_t cparser_cmd_rg_add_pppoeClientInfoBeforeDial_wan_intf_idx_wan_intf_idx(cparser_context_t *context,
    uint32_t *wan_intf_idx_ptr);
cparser_result_t cparser_cmd_rg_add_pptpClientInfoBeforeDial_wan_intf_idx_wan_intf_idx(cparser_context_t *context,
    uint32_t *wan_intf_idx_ptr);
cparser_result_t cparser_cmd_rg_add_pptpClientInfoAfterDial_wan_intf_idx_wan_intf_idx(cparser_context_t *context,
    uint32_t *wan_intf_idx_ptr);
cparser_result_t cparser_cmd_rg_add_l2tpClientInfoBeforeDial_wan_intf_idx_wan_intf_idx(cparser_context_t *context,
    uint32_t *wan_intf_idx_ptr);
cparser_result_t cparser_cmd_rg_add_l2tpClientInfoAfterDial_wan_intf_idx_wan_intf_idx(cparser_context_t *context,
    uint32_t *wan_intf_idx_ptr);
cparser_result_t cparser_cmd_rg_add_pppoeDsliteInfoAfterDial_wan_intf_idx_wan_intf_idx(cparser_context_t *context,
    uint32_t *wan_intf_idx_ptr);
cparser_result_t cparser_cmd_rg_add_pppoeDsliteInfoBeforeDial_wan_intf_idx_wan_intf_idx(cparser_context_t *context,
    uint32_t *wan_intf_idx_ptr);
cparser_result_t cparser_cmd_rg_add_neighbor_entry_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_add_dhcpRequest_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_add_dhcpClientInfo_wan_intf_idx_wan_intf_idx(cparser_context_t *context,
    uint32_t *wan_intf_idx_ptr);
cparser_result_t cparser_cmd_rg_add_binding_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_add_macfilter_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_add_virtualServer_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_add_dosPortMaskEnable_portmask_portmask(cparser_context_t *context,
    uint32_t *portmask_ptr);
cparser_result_t cparser_cmd_rg_add_dosType_dos_type_dos_type_dos_enabled_dos_enabled_dos_action_dos_action(cparser_context_t *context,
    uint32_t *dos_type_ptr,
    uint32_t *dos_enabled_ptr,
    uint32_t *dos_action_ptr);
cparser_result_t cparser_cmd_rg_add_dosFloodType_dos_type_dos_type_dos_enabled_dos_enabled_dos_action_dos_action_dos_threshold_dos_threshold(cparser_context_t *context,
    uint32_t *dos_type_ptr,
    uint32_t *dos_enabled_ptr,
    uint32_t *dos_action_ptr,
    uint32_t *dos_threshold_ptr);
cparser_result_t cparser_cmd_rg_add_cvlan_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_add_wanAccessLimitUnlimit(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_add_wanAccessLimitPortMask_port_mask_port_mask_learningLimitNumber_unlimit_action_action(cparser_context_t *context,
    uint32_t *port_mask_ptr,
    uint32_t *action_ptr);
cparser_result_t cparser_cmd_rg_add_wanAccessLimitPortMask_port_mask_port_mask_learningLimitNumber_learningLimitNumber_action_action(cparser_context_t *context,
    uint32_t *port_mask_ptr,
    uint32_t *learningLimitNumber_ptr,
    uint32_t *action_ptr);
cparser_result_t cparser_cmd_rg_add_wanAccessLimitPortMask_port_mask_port_mask_wlan_idx_wlan_idx_wlan_dev_mask_wlan_dev_mask_learningLimitNumber_unlimit_action_action(cparser_context_t *context,
    uint32_t *port_mask_ptr,
    uint32_t *wlan_idx_ptr,
    uint32_t *wlan_dev_mask_ptr,
    uint32_t *action_ptr);
cparser_result_t cparser_cmd_rg_add_wanAccessLimitPortMask_port_mask_port_mask_wlan_idx_wlan_idx_wlan_dev_mask_wlan_dev_mask_learningLimitNumber_learningLimitNumber_action_action(cparser_context_t *context,
    uint32_t *port_mask_ptr,
    uint32_t *wlan_idx_ptr,
    uint32_t *wlan_dev_mask_ptr,
    uint32_t *learningLimitNumber_ptr,
    uint32_t *action_ptr);
cparser_result_t cparser_cmd_rg_add_wanAccessLimitCategory_category_category_learningLimitNumber_unlimit_action_action(cparser_context_t *context,
    uint32_t *category_ptr,
    uint32_t *action_ptr);
cparser_result_t cparser_cmd_rg_add_wanAccessLimitCategory_category_category_learningLimitNumber_learningLimitNumber_action_action(cparser_context_t *context,
    uint32_t *category_ptr,
    uint32_t *learningLimitNumber_ptr,
    uint32_t *action_ptr);
cparser_result_t cparser_cmd_rg_add_softwareSourceAddrLearningLimit_port_idx_port_idx(cparser_context_t *context,
    uint32_t *port_idx_ptr);
cparser_result_t cparser_cmd_rg_add_softwareSourceAddrLearningLimit_wlan_idx_wlan_idx_device_idx_device_idx(cparser_context_t *context,
    uint32_t *wlan_idx_ptr,
    uint32_t *device_idx_ptr);
cparser_result_t cparser_cmd_rg_add_phyPortForceAbility_port_idx_port_idx(cparser_context_t *context,
    uint32_t *port_idx_ptr);
cparser_result_t cparser_cmd_rg_add_cpuPortForceTrafficCtrl_tx_fc_state_tx_fc_state_rx_fc_state_rx_fc_state(cparser_context_t *context,
    uint32_t *tx_fc_state_ptr,
    uint32_t *rx_fc_state_ptr);
cparser_result_t cparser_cmd_rg_add_portMirror_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_add_portEgrBandwidthCtrlRate_port_port_rate_rate(cparser_context_t *context,
    uint32_t *port_ptr,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_rg_add_portIgrBandwidthCtrlRate_port_port_rate_rate(cparser_context_t *context,
    uint32_t *port_ptr,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_rg_add_upnpConnection_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_add_dmzHost_wan_intf_idx_wan_intf_idx(cparser_context_t *context,
    uint32_t *wan_intf_idx_ptr);
cparser_result_t cparser_cmd_rg_add_stormControl_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_add_shareMeter_index_index_rate_rate_ifgInclude_ifgInclude(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *rate_ptr,
    uint32_t *ifgInclude_ptr);
cparser_result_t cparser_cmd_rg_add_qosStrictPriorityOrWeightFairQueue_q_weight_0_q_weight_0_q_weight_1_q_weight_1_q_weight_2_q_weight_2_q_weight_3_q_weight_3_q_weight_4_q_weight_4_q_weight_5_q_weight_5_q_weight_6_q_weight_6_q_weight_7_q_weight_7_port_port(cparser_context_t *context,
    uint32_t *q_weight_0_ptr,
    uint32_t *q_weight_1_ptr,
    uint32_t *q_weight_2_ptr,
    uint32_t *q_weight_3_ptr,
    uint32_t *q_weight_4_ptr,
    uint32_t *q_weight_5_ptr,
    uint32_t *q_weight_6_ptr,
    uint32_t *q_weight_7_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_rg_add_qosInternalPriMapToQueueId_intPri_intPri_queueId_queueId(cparser_context_t *context,
    uint32_t *intPri_ptr,
    uint32_t *queueId_ptr);
cparser_result_t cparser_cmd_rg_add_qosInternalPriDecisionByWeight_weight_of_portBased_weight_of_portBased_weight_of_dot1q_weight_of_dot1q_weight_of_dscp_weight_of_dscp_weight_of_acl_weight_of_acl_weight_of_lutFwd_weight_of_lutFwd_weight_of_saBaed_weight_of_saBaed_weight_of_vlanBased_weight_of_vlanBased_weight_of_svlanBased_weight_of_svlanBased_weight_of_l4Based_weight_of_l4Based(cparser_context_t *context,
    uint32_t *weight_of_portBased_ptr,
    uint32_t *weight_of_dot1q_ptr,
    uint32_t *weight_of_dscp_ptr,
    uint32_t *weight_of_acl_ptr,
    uint32_t *weight_of_lutFwd_ptr,
    uint32_t *weight_of_saBaed_ptr,
    uint32_t *weight_of_vlanBased_ptr,
    uint32_t *weight_of_svlanBased_ptr,
    uint32_t *weight_of_l4Based_ptr);
cparser_result_t cparser_cmd_rg_add_qosDscpRemapToInternalPri_dscp_dscp_intPri_intPri(cparser_context_t *context,
    uint32_t *dscp_ptr,
    uint32_t *intPri_ptr);
cparser_result_t cparser_cmd_rg_add_qosPortBasedPriority_port_port_intPri_intPri(cparser_context_t *context,
    uint32_t *port_ptr,
    uint32_t *intPri_ptr);
cparser_result_t cparser_cmd_rg_add_qosDot1pPriRemapToInternalPri_dot1p_dot1p_intPri_intPri(cparser_context_t *context,
    uint32_t *dot1p_ptr,
    uint32_t *intPri_ptr);
cparser_result_t cparser_cmd_rg_add_qosDscpRemarkEgressPortEnableAndSrcSelect_port_port_enabled_enabled_source_select_source_select(cparser_context_t *context,
    uint32_t *port_ptr,
    uint32_t *enabled_ptr,
    uint32_t *source_select_ptr);
cparser_result_t cparser_cmd_rg_add_qosDscpRemarkByInternalPri_intPri_intPri_remark_dscp_remark_dscp(cparser_context_t *context,
    uint32_t *intPri_ptr,
    uint32_t *remark_dscp_ptr);
cparser_result_t cparser_cmd_rg_add_qosDscpRemarkByDscp_dscp_dscp_remark_dscp_remark_dscp(cparser_context_t *context,
    uint32_t *dscp_ptr,
    uint32_t *remark_dscp_ptr);
cparser_result_t cparser_cmd_rg_add_qosDot1pPriRemarkByInternalPriEgressPortEnable_port_port_enabled_enabled(cparser_context_t *context,
    uint32_t *port_ptr,
    uint32_t *enabled_ptr);
cparser_result_t cparser_cmd_rg_add_qosDot1pPriRemarkByInternalPri_intPri_intPri_dot1p_dot1p(cparser_context_t *context,
    uint32_t *intPri_ptr,
    uint32_t *dot1p_ptr);
cparser_result_t cparser_cmd_rg_add_multicastFlow_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_add_svlanTpid_tpid(cparser_context_t *context,
    uint32_t *tpid_ptr);
cparser_result_t cparser_cmd_rg_add_svlanServicePort_port_port_enable_enable(cparser_context_t *context,
    uint32_t *port_ptr,
    uint32_t *enable_ptr);
cparser_result_t cparser_cmd_rg_add_gatewayServicePort_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_add_naptFilterAndQos_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_add_gponDsBcFilter_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_add_gponDsBcFilter_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_add_redirectHttpURL_url_url_dst_url_dst_url_count_count(cparser_context_t *context,
    char **url_ptr,
    char **dst_url_ptr,
    int32_t *count_ptr);
cparser_result_t cparser_cmd_rg_add_redirectHttpWhiteList_url_url_keyword_keyword(cparser_context_t *context,
    char **url_ptr,
    char **keyword_ptr);
cparser_result_t cparser_cmd_rg_add_acl_filter_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_add_classify_filter_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_lan_intf_ip_version_ip_version_gateway_mac_gmac_ip_addr_ip_ip_mask_mask_ipv6_addr_ipv6_addr_ipv6_network_mask_length_ipv6_network_mask_length_port_mask_port_mask_untag_mask_untag_mask_intf_vlan_id_intf_vid_vlan_based_pri_enable_enable_vlan_based_pri_vlan_based_pri_mtu_mtu_isIVL_isIVL(cparser_context_t *context,
    uint32_t *ip_version_ptr,
    cparser_macaddr_t *gmac_ptr,
    uint32_t *ip_ptr,
    uint32_t *mask_ptr,
    char **ipv6_addr_ptr,
    uint32_t *ipv6_network_mask_length_ptr,
    uint32_t *port_mask_ptr,
    uint32_t *untag_mask_ptr,
    uint32_t *intf_vid_ptr,
    uint32_t *vlan_based_pri_ptr,
    uint32_t *mtu_ptr,
    uint32_t *isIVL_ptr);
cparser_result_t cparser_cmd_rg_set_lan_intf_ip_version_ip_version_gateway_mac_gmac_ip_addr_ip_ip_mask_mask_ipv6_addr_ipv6_addr_ipv6_network_mask_length_ipv6_network_mask_length_port_mask_port_mask_untag_mask_untag_mask_intf_vlan_id_intf_vid_vlan_based_pri_enable_enable_vlan_based_pri_vlan_based_pri_mtu_mtu_isIVL_isIVL_replace_subnet_replace_subnet(cparser_context_t *context,
    uint32_t *ip_version_ptr,
    cparser_macaddr_t *gmac_ptr,
    uint32_t *ip_ptr,
    uint32_t *mask_ptr,
    char **ipv6_addr_ptr,
    uint32_t *ipv6_network_mask_length_ptr,
    uint32_t *port_mask_ptr,
    uint32_t *untag_mask_ptr,
    uint32_t *intf_vid_ptr,
    uint32_t *vlan_based_pri_ptr,
    uint32_t *mtu_ptr,
    uint32_t *isIVL_ptr,
    uint32_t *replace_subnet_ptr);
cparser_result_t cparser_cmd_rg_set_lan_intf_ip_version_ip_version_gateway_mac_gmac_ip_addr_ip_ip_mask_mask_ipv6_addr_ipv6_addr_ipv6_network_mask_length_ipv6_network_mask_length_port_mask_port_mask_untag_mask_untag_mask_intf_vlan_id_intf_vid_vlan_based_pri_enable_disable_mtu_mtu_isIVL_isIVL(cparser_context_t *context,
    uint32_t *ip_version_ptr,
    cparser_macaddr_t *gmac_ptr,
    uint32_t *ip_ptr,
    uint32_t *mask_ptr,
    char **ipv6_addr_ptr,
    uint32_t *ipv6_network_mask_length_ptr,
    uint32_t *port_mask_ptr,
    uint32_t *untag_mask_ptr,
    uint32_t *intf_vid_ptr,
    uint32_t *mtu_ptr,
    uint32_t *isIVL_ptr);
cparser_result_t cparser_cmd_rg_set_lan_intf_ip_version_ip_version_gateway_mac_gmac_ip_addr_ip_ip_mask_mask_ipv6_addr_ipv6_addr_ipv6_network_mask_length_ipv6_network_mask_length_port_mask_port_mask_untag_mask_untag_mask_intf_vlan_id_intf_vid_vlan_based_pri_enable_disable_mtu_mtu_isIVL_isIVL_replace_subnet_replace_subnet(cparser_context_t *context,
    uint32_t *ip_version_ptr,
    cparser_macaddr_t *gmac_ptr,
    uint32_t *ip_ptr,
    uint32_t *mask_ptr,
    char **ipv6_addr_ptr,
    uint32_t *ipv6_network_mask_length_ptr,
    uint32_t *port_mask_ptr,
    uint32_t *untag_mask_ptr,
    uint32_t *intf_vid_ptr,
    uint32_t *mtu_ptr,
    uint32_t *isIVL_ptr,
    uint32_t *replace_subnet_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_wan_type_wan_type_gateway_mac_gmac_wan_port_wan_port_idx_port_binding_mask_port_binding_mask_egress_vlan_tag_on_tag_on_egress_vlan_id_vlan_id_vlan_based_pri_enable_enable_vlan_based_pri_vlan_based_pri_isIVL_isIVL(cparser_context_t *context,
    uint32_t *wan_type_ptr,
    cparser_macaddr_t *gmac_ptr,
    uint32_t *wan_port_idx_ptr,
    uint32_t *port_binding_mask_ptr,
    uint32_t *tag_on_ptr,
    uint32_t *vlan_id_ptr,
    uint32_t *vlan_based_pri_ptr,
    uint32_t *isIVL_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_wan_type_wan_type_gateway_mac_gmac_wan_port_wan_port_idx_port_binding_mask_port_binding_mask_egress_vlan_tag_on_tag_on_egress_vlan_id_vlan_id_vlan_based_pri_enable_enable_vlan_based_pri_vlan_based_pri_isIVL_isIVL_none_internet(cparser_context_t *context,
    uint32_t *wan_type_ptr,
    cparser_macaddr_t *gmac_ptr,
    uint32_t *wan_port_idx_ptr,
    uint32_t *port_binding_mask_ptr,
    uint32_t *tag_on_ptr,
    uint32_t *vlan_id_ptr,
    uint32_t *vlan_based_pri_ptr,
    uint32_t *isIVL_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_wan_type_wan_type_gateway_mac_gmac_wan_port_wan_port_idx_port_binding_mask_port_binding_mask_egress_vlan_tag_on_tag_on_egress_vlan_id_vlan_id_vlan_based_pri_enable_enable_vlan_based_pri_vlan_based_pri_isIVL_isIVL_none_internet_wlan0_binding_mask_wlan_binding_mask(cparser_context_t *context,
    uint32_t *wan_type_ptr,
    cparser_macaddr_t *gmac_ptr,
    uint32_t *wan_port_idx_ptr,
    uint32_t *port_binding_mask_ptr,
    uint32_t *tag_on_ptr,
    uint32_t *vlan_id_ptr,
    uint32_t *vlan_based_pri_ptr,
    uint32_t *isIVL_ptr,
    uint32_t *wlan_binding_mask_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_wan_type_wan_type_gateway_mac_gmac_wan_port_wan_port_idx_port_binding_mask_port_binding_mask_egress_vlan_tag_on_tag_on_egress_vlan_id_vlan_id_vlan_based_pri_enable_enable_vlan_based_pri_vlan_based_pri_isIVL_isIVL_none_internet_wlan0_binding_mask_wlan_binding_mask_replaceSame(cparser_context_t *context,
    uint32_t *wan_type_ptr,
    cparser_macaddr_t *gmac_ptr,
    uint32_t *wan_port_idx_ptr,
    uint32_t *port_binding_mask_ptr,
    uint32_t *tag_on_ptr,
    uint32_t *vlan_id_ptr,
    uint32_t *vlan_based_pri_ptr,
    uint32_t *isIVL_ptr,
    uint32_t *wlan_binding_mask_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_wan_type_wan_type_gateway_mac_gmac_wan_port_wan_port_idx_port_binding_mask_port_binding_mask_egress_vlan_tag_on_tag_on_egress_vlan_id_vlan_id_vlan_based_pri_enable_enable_vlan_based_pri_vlan_based_pri_isIVL_isIVL_none_internet_replaceSame(cparser_context_t *context,
    uint32_t *wan_type_ptr,
    cparser_macaddr_t *gmac_ptr,
    uint32_t *wan_port_idx_ptr,
    uint32_t *port_binding_mask_ptr,
    uint32_t *tag_on_ptr,
    uint32_t *vlan_id_ptr,
    uint32_t *vlan_based_pri_ptr,
    uint32_t *isIVL_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_wan_type_wan_type_gateway_mac_gmac_wan_port_wan_port_idx_port_binding_mask_port_binding_mask_egress_vlan_tag_on_tag_on_egress_vlan_id_vlan_id_vlan_based_pri_enable_enable_vlan_based_pri_vlan_based_pri_isIVL_isIVL_wlan0_binding_mask_wlan_binding_mask(cparser_context_t *context,
    uint32_t *wan_type_ptr,
    cparser_macaddr_t *gmac_ptr,
    uint32_t *wan_port_idx_ptr,
    uint32_t *port_binding_mask_ptr,
    uint32_t *tag_on_ptr,
    uint32_t *vlan_id_ptr,
    uint32_t *vlan_based_pri_ptr,
    uint32_t *isIVL_ptr,
    uint32_t *wlan_binding_mask_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_wan_type_wan_type_gateway_mac_gmac_wan_port_wan_port_idx_port_binding_mask_port_binding_mask_egress_vlan_tag_on_tag_on_egress_vlan_id_vlan_id_vlan_based_pri_enable_enable_vlan_based_pri_vlan_based_pri_isIVL_isIVL_wlan0_binding_mask_wlan_binding_mask_replaceSame(cparser_context_t *context,
    uint32_t *wan_type_ptr,
    cparser_macaddr_t *gmac_ptr,
    uint32_t *wan_port_idx_ptr,
    uint32_t *port_binding_mask_ptr,
    uint32_t *tag_on_ptr,
    uint32_t *vlan_id_ptr,
    uint32_t *vlan_based_pri_ptr,
    uint32_t *isIVL_ptr,
    uint32_t *wlan_binding_mask_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_wan_type_wan_type_gateway_mac_gmac_wan_port_wan_port_idx_port_binding_mask_port_binding_mask_egress_vlan_tag_on_tag_on_egress_vlan_id_vlan_id_vlan_based_pri_enable_enable_vlan_based_pri_vlan_based_pri_isIVL_isIVL_replaceSame(cparser_context_t *context,
    uint32_t *wan_type_ptr,
    cparser_macaddr_t *gmac_ptr,
    uint32_t *wan_port_idx_ptr,
    uint32_t *port_binding_mask_ptr,
    uint32_t *tag_on_ptr,
    uint32_t *vlan_id_ptr,
    uint32_t *vlan_based_pri_ptr,
    uint32_t *isIVL_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_wan_type_wan_type_gateway_mac_gmac_wan_port_wan_port_idx_port_binding_mask_port_binding_mask_egress_vlan_tag_on_tag_on_egress_vlan_id_vlan_id_vlan_based_pri_enable_disable_isIVL_isIVL(cparser_context_t *context,
    uint32_t *wan_type_ptr,
    cparser_macaddr_t *gmac_ptr,
    uint32_t *wan_port_idx_ptr,
    uint32_t *port_binding_mask_ptr,
    uint32_t *tag_on_ptr,
    uint32_t *vlan_id_ptr,
    uint32_t *isIVL_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_wan_type_wan_type_gateway_mac_gmac_wan_port_wan_port_idx_port_binding_mask_port_binding_mask_egress_vlan_tag_on_tag_on_egress_vlan_id_vlan_id_vlan_based_pri_enable_disable_isIVL_isIVL_none_internet(cparser_context_t *context,
    uint32_t *wan_type_ptr,
    cparser_macaddr_t *gmac_ptr,
    uint32_t *wan_port_idx_ptr,
    uint32_t *port_binding_mask_ptr,
    uint32_t *tag_on_ptr,
    uint32_t *vlan_id_ptr,
    uint32_t *isIVL_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_wan_type_wan_type_gateway_mac_gmac_wan_port_wan_port_idx_port_binding_mask_port_binding_mask_egress_vlan_tag_on_tag_on_egress_vlan_id_vlan_id_vlan_based_pri_enable_disable_isIVL_isIVL_none_internet_wlan0_binding_mask_wlan_binding_mask(cparser_context_t *context,
    uint32_t *wan_type_ptr,
    cparser_macaddr_t *gmac_ptr,
    uint32_t *wan_port_idx_ptr,
    uint32_t *port_binding_mask_ptr,
    uint32_t *tag_on_ptr,
    uint32_t *vlan_id_ptr,
    uint32_t *isIVL_ptr,
    uint32_t *wlan_binding_mask_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_wan_type_wan_type_gateway_mac_gmac_wan_port_wan_port_idx_port_binding_mask_port_binding_mask_egress_vlan_tag_on_tag_on_egress_vlan_id_vlan_id_vlan_based_pri_enable_disable_isIVL_isIVL_none_internet_wlan0_binding_mask_wlan_binding_mask_replaceSame(cparser_context_t *context,
    uint32_t *wan_type_ptr,
    cparser_macaddr_t *gmac_ptr,
    uint32_t *wan_port_idx_ptr,
    uint32_t *port_binding_mask_ptr,
    uint32_t *tag_on_ptr,
    uint32_t *vlan_id_ptr,
    uint32_t *isIVL_ptr,
    uint32_t *wlan_binding_mask_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_wan_type_wan_type_gateway_mac_gmac_wan_port_wan_port_idx_port_binding_mask_port_binding_mask_egress_vlan_tag_on_tag_on_egress_vlan_id_vlan_id_vlan_based_pri_enable_disable_isIVL_isIVL_none_internet_replaceSame(cparser_context_t *context,
    uint32_t *wan_type_ptr,
    cparser_macaddr_t *gmac_ptr,
    uint32_t *wan_port_idx_ptr,
    uint32_t *port_binding_mask_ptr,
    uint32_t *tag_on_ptr,
    uint32_t *vlan_id_ptr,
    uint32_t *isIVL_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_wan_type_wan_type_gateway_mac_gmac_wan_port_wan_port_idx_port_binding_mask_port_binding_mask_egress_vlan_tag_on_tag_on_egress_vlan_id_vlan_id_vlan_based_pri_enable_disable_isIVL_isIVL_wlan0_binding_mask_wlan_binding_mask(cparser_context_t *context,
    uint32_t *wan_type_ptr,
    cparser_macaddr_t *gmac_ptr,
    uint32_t *wan_port_idx_ptr,
    uint32_t *port_binding_mask_ptr,
    uint32_t *tag_on_ptr,
    uint32_t *vlan_id_ptr,
    uint32_t *isIVL_ptr,
    uint32_t *wlan_binding_mask_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_wan_type_wan_type_gateway_mac_gmac_wan_port_wan_port_idx_port_binding_mask_port_binding_mask_egress_vlan_tag_on_tag_on_egress_vlan_id_vlan_id_vlan_based_pri_enable_disable_isIVL_isIVL_wlan0_binding_mask_wlan_binding_mask_replaceSame(cparser_context_t *context,
    uint32_t *wan_type_ptr,
    cparser_macaddr_t *gmac_ptr,
    uint32_t *wan_port_idx_ptr,
    uint32_t *port_binding_mask_ptr,
    uint32_t *tag_on_ptr,
    uint32_t *vlan_id_ptr,
    uint32_t *isIVL_ptr,
    uint32_t *wlan_binding_mask_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_wan_type_wan_type_gateway_mac_gmac_wan_port_wan_port_idx_port_binding_mask_port_binding_mask_egress_vlan_tag_on_tag_on_egress_vlan_id_vlan_id_vlan_based_pri_enable_disable_isIVL_isIVL_replaceSame(cparser_context_t *context,
    uint32_t *wan_type_ptr,
    cparser_macaddr_t *gmac_ptr,
    uint32_t *wan_port_idx_ptr,
    uint32_t *port_binding_mask_ptr,
    uint32_t *tag_on_ptr,
    uint32_t *vlan_id_ptr,
    uint32_t *isIVL_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_static_info_ip_version_ip_version(cparser_context_t *context,
    uint32_t *ip_version_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_static_info_ip_version_ip_version_napt_enable_napt_enable_ip_addr_ip_addr_ip_network_mask_ip_network_mask_ipv4_default_gateway_on_ipv4_default_gateway_on_gateway_ipv4_addr_gateway_ipv4_addr_mtu_mtu(cparser_context_t *context,
    uint32_t *ip_version_ptr,
    uint32_t *napt_enable_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *ip_network_mask_ptr,
    uint32_t *ipv4_default_gateway_on_ptr,
    uint32_t *gateway_ipv4_addr_ptr,
    uint32_t *mtu_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_static_info_ip_version_ip_version_napt_enable_napt_enable_ip_addr_ip_addr_ip_network_mask_ip_network_mask_ipv4_default_gateway_on_ipv4_default_gateway_on_gateway_ipv4_addr_gateway_ipv4_addr_mtu_mtu_gw_mac_auto_learn_for_ipv4_gw_mac_auto_learn_for_ipv4_gateway_mac_addr_for_ipv4_gateway_mac_addr_for_ipv4(cparser_context_t *context,
    uint32_t *ip_version_ptr,
    uint32_t *napt_enable_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *ip_network_mask_ptr,
    uint32_t *ipv4_default_gateway_on_ptr,
    uint32_t *gateway_ipv4_addr_ptr,
    uint32_t *mtu_ptr,
    uint32_t *gw_mac_auto_learn_for_ipv4_ptr,
    cparser_macaddr_t *gateway_mac_addr_for_ipv4_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_static_info_ip_version_ip_version_napt_enable_napt_enable_ip_addr_ip_addr_ip_network_mask_ip_network_mask_ipv4_default_gateway_on_ipv4_default_gateway_on_gateway_ipv4_addr_gateway_ipv4_addr_mtu_mtu_routing_type_routing_type(cparser_context_t *context,
    uint32_t *ip_version_ptr,
    uint32_t *napt_enable_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *ip_network_mask_ptr,
    uint32_t *ipv4_default_gateway_on_ptr,
    uint32_t *gateway_ipv4_addr_ptr,
    uint32_t *mtu_ptr,
    uint32_t *routing_type_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_static_info_ip_version_ip_version_napt_enable_napt_enable_ip_addr_ip_addr_ip_network_mask_ip_network_mask_ipv4_default_gateway_on_ipv4_default_gateway_on_gateway_ipv4_addr_gateway_ipv4_addr_mtu_mtu_routing_type_routing_type_gw_mac_auto_learn_for_ipv4_gw_mac_auto_learn_for_ipv4_gateway_mac_addr_for_ipv4_gateway_mac_addr_for_ipv4(cparser_context_t *context,
    uint32_t *ip_version_ptr,
    uint32_t *napt_enable_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *ip_network_mask_ptr,
    uint32_t *ipv4_default_gateway_on_ptr,
    uint32_t *gateway_ipv4_addr_ptr,
    uint32_t *mtu_ptr,
    uint32_t *routing_type_ptr,
    uint32_t *gw_mac_auto_learn_for_ipv4_ptr,
    cparser_macaddr_t *gateway_mac_addr_for_ipv4_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_static_info_ipv6_ipv6_addr_ipv6_addr_ipv6_mask_length_ipv6_mask_length_ipv6_default_gateway_on_ipv6_default_gateway_on_gateway_ipv6_addr_gateway_ipv6_addr_mtu_mtu(cparser_context_t *context,
    char **ipv6_addr_ptr,
    uint32_t *ipv6_mask_length_ptr,
    uint32_t *ipv6_default_gateway_on_ptr,
    char **gateway_ipv6_addr_ptr,
    uint32_t *mtu_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_static_info_ipv6_ipv6_addr_ipv6_addr_ipv6_mask_length_ipv6_mask_length_ipv6_default_gateway_on_ipv6_default_gateway_on_gateway_ipv6_addr_gateway_ipv6_addr_mtu_mtu_gw_mac_auto_learn_for_ipv6_gw_mac_auto_learn_for_ipv6_gateway_mac_addr_for_ipv6_gateway_mac_addr_for_ipv6(cparser_context_t *context,
    char **ipv6_addr_ptr,
    uint32_t *ipv6_mask_length_ptr,
    uint32_t *ipv6_default_gateway_on_ptr,
    char **gateway_ipv6_addr_ptr,
    uint32_t *mtu_ptr,
    uint32_t *gw_mac_auto_learn_for_ipv6_ptr,
    cparser_macaddr_t *gateway_mac_addr_for_ipv6_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_static_info_ipv6_ipv6_napt_enable_ipv6_napt_enable_ipv6_addr_ipv6_addr_ipv6_mask_length_ipv6_mask_length_ipv6_default_gateway_on_ipv6_default_gateway_on_gateway_ipv6_addr_gateway_ipv6_addr_mtu_mtu(cparser_context_t *context,
    uint32_t *ipv6_napt_enable_ptr,
    char **ipv6_addr_ptr,
    uint32_t *ipv6_mask_length_ptr,
    uint32_t *ipv6_default_gateway_on_ptr,
    char **gateway_ipv6_addr_ptr,
    uint32_t *mtu_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_static_info_ipv6_ipv6_napt_enable_ipv6_napt_enable_ipv6_addr_ipv6_addr_ipv6_mask_length_ipv6_mask_length_ipv6_default_gateway_on_ipv6_default_gateway_on_gateway_ipv6_addr_gateway_ipv6_addr_mtu_mtu_gw_mac_auto_learn_for_ipv6_gw_mac_auto_learn_for_ipv6_gateway_mac_addr_for_ipv6_gateway_mac_addr_for_ipv6(cparser_context_t *context,
    uint32_t *ipv6_napt_enable_ptr,
    char **ipv6_addr_ptr,
    uint32_t *ipv6_mask_length_ptr,
    uint32_t *ipv6_default_gateway_on_ptr,
    char **gateway_ipv6_addr_ptr,
    uint32_t *mtu_ptr,
    uint32_t *gw_mac_auto_learn_for_ipv6_ptr,
    cparser_macaddr_t *gateway_mac_addr_for_ipv6_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_dslite_info_ip_version_ip_version_napt_enable_napt_enable_ip_addr_ip_addr_ip_network_mask_ip_network_mask_ipv4_default_gateway_on_ipv4_default_gateway_on_mtu_mtu(cparser_context_t *context,
    uint32_t *ip_version_ptr,
    uint32_t *napt_enable_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *ip_network_mask_ptr,
    uint32_t *ipv4_default_gateway_on_ptr,
    uint32_t *mtu_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_dslite_info_ipv6_ipv6_napt_enable_ipv6_napt_enable_ipv6_addr_ipv6_addr_ipv6_mask_length_ipv6_mask_length_ipv6_default_gateway_on_ipv6_default_gateway_on_gateway_ipv6_addr_gateway_ipv6_addr_mtu_mtu_gw_mac_auto_learn_for_ipv6_gw_mac_auto_learn_for_ipv6_gateway_mac_addr_for_ipv6_gateway_mac_addr_for_ipv6_b4_ipv6_addr_b4_ipv6_addr_aftr_ipv6_addr_aftr_ipv6_addr_aftr_mac_auto_learn_aftr_mac_auto_learn_aftr_mac_addr_aftr_mac_addr(cparser_context_t *context,
    uint32_t *ipv6_napt_enable_ptr,
    char **ipv6_addr_ptr,
    uint32_t *ipv6_mask_length_ptr,
    uint32_t *ipv6_default_gateway_on_ptr,
    char **gateway_ipv6_addr_ptr,
    uint32_t *mtu_ptr,
    uint32_t *gw_mac_auto_learn_for_ipv6_ptr,
    cparser_macaddr_t *gateway_mac_addr_for_ipv6_ptr,
    char **b4_ipv6_addr_ptr,
    char **aftr_ipv6_addr_ptr,
    uint32_t *aftr_mac_auto_learn_ptr,
    cparser_macaddr_t *aftr_mac_addr_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_dslite_info_ipv6_ipv6_napt_enable_ipv6_napt_enable_ipv6_addr_ipv6_addr_ipv6_mask_length_ipv6_mask_length_ipv6_default_gateway_on_ipv6_default_gateway_on_gateway_ipv6_addr_gateway_ipv6_addr_mtu_mtu_gw_mac_auto_learn_for_ipv6_gw_mac_auto_learn_for_ipv6_gateway_mac_addr_for_ipv6_gateway_mac_addr_for_ipv6_b4_ipv6_addr_b4_ipv6_addr_aftr_ipv6_addr_aftr_ipv6_addr_aftr_mac_auto_learn_aftr_mac_auto_learn_aftr_mac_addr_aftr_mac_addr_dslite_hoplimit_dslite_hoplimit_dslite_flowlabel_dslite_flowlabel_dslite_tc_copy_from_IPv4_TOS(cparser_context_t *context,
    uint32_t *ipv6_napt_enable_ptr,
    char **ipv6_addr_ptr,
    uint32_t *ipv6_mask_length_ptr,
    uint32_t *ipv6_default_gateway_on_ptr,
    char **gateway_ipv6_addr_ptr,
    uint32_t *mtu_ptr,
    uint32_t *gw_mac_auto_learn_for_ipv6_ptr,
    cparser_macaddr_t *gateway_mac_addr_for_ipv6_ptr,
    char **b4_ipv6_addr_ptr,
    char **aftr_ipv6_addr_ptr,
    uint32_t *aftr_mac_auto_learn_ptr,
    cparser_macaddr_t *aftr_mac_addr_ptr,
    uint32_t *dslite_hoplimit_ptr,
    uint32_t *dslite_flowlabel_ptr);
cparser_result_t cparser_cmd_rg_set_wan_intf_dslite_info_ipv6_ipv6_napt_enable_ipv6_napt_enable_ipv6_addr_ipv6_addr_ipv6_mask_length_ipv6_mask_length_ipv6_default_gateway_on_ipv6_default_gateway_on_gateway_ipv6_addr_gateway_ipv6_addr_mtu_mtu_gw_mac_auto_learn_for_ipv6_gw_mac_auto_learn_for_ipv6_gateway_mac_addr_for_ipv6_gateway_mac_addr_for_ipv6_b4_ipv6_addr_b4_ipv6_addr_aftr_ipv6_addr_aftr_ipv6_addr_aftr_mac_auto_learn_aftr_mac_auto_learn_aftr_mac_addr_aftr_mac_addr_dslite_hoplimit_dslite_hoplimit_dslite_flowlabel_dslite_flowlabel_dslite_tc_dslite_tc(cparser_context_t *context,
    uint32_t *ipv6_napt_enable_ptr,
    char **ipv6_addr_ptr,
    uint32_t *ipv6_mask_length_ptr,
    uint32_t *ipv6_default_gateway_on_ptr,
    char **gateway_ipv6_addr_ptr,
    uint32_t *mtu_ptr,
    uint32_t *gw_mac_auto_learn_for_ipv6_ptr,
    cparser_macaddr_t *gateway_mac_addr_for_ipv6_ptr,
    char **b4_ipv6_addr_ptr,
    char **aftr_ipv6_addr_ptr,
    uint32_t *aftr_mac_auto_learn_ptr,
    cparser_macaddr_t *aftr_mac_addr_ptr,
    uint32_t *dslite_hoplimit_ptr,
    uint32_t *dslite_flowlabel_ptr,
    uint32_t *dslite_tc_ptr);
cparser_result_t cparser_cmd_rg_set_mac_entry_mac_address_mac_isIVL_isIVL_fid_fid_vlan_id_vlan_id_port_idx_port_idx_static_entry_static_entry(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr,
    uint32_t *isIVL_ptr,
    uint32_t *fid_ptr,
    uint32_t *vlan_id_ptr,
    uint32_t *port_idx_ptr,
    uint32_t *static_entry_ptr);
cparser_result_t cparser_cmd_rg_set_mac_entry_mac_address_mac_isIVL_isIVL_fid_fid_vlan_id_vlan_id_port_idx_port_idx_static_entry_static_entry_auth_auth(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr,
    uint32_t *isIVL_ptr,
    uint32_t *fid_ptr,
    uint32_t *vlan_id_ptr,
    uint32_t *port_idx_ptr,
    uint32_t *static_entry_ptr,
    uint32_t *auth_ptr);
cparser_result_t cparser_cmd_rg_set_mac_entry_mac_address_mac_isIVL_isIVL_fid_fid_vlan_id_vlan_id_ctag_if_ctag_if_port_idx_port_idx_static_entry_static_entry(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr,
    uint32_t *isIVL_ptr,
    uint32_t *fid_ptr,
    uint32_t *vlan_id_ptr,
    uint32_t *ctag_if_ptr,
    uint32_t *port_idx_ptr,
    uint32_t *static_entry_ptr);
cparser_result_t cparser_cmd_rg_set_mac_entry_mac_address_mac_isIVL_isIVL_fid_fid_vlan_id_vlan_id_ctag_if_ctag_if_port_idx_port_idx_static_entry_static_entry_auth_auth(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr,
    uint32_t *isIVL_ptr,
    uint32_t *fid_ptr,
    uint32_t *vlan_id_ptr,
    uint32_t *ctag_if_ptr,
    uint32_t *port_idx_ptr,
    uint32_t *static_entry_ptr,
    uint32_t *auth_ptr);
cparser_result_t cparser_cmd_rg_set_arp_entry_macEntryIdx_macEntryIdx_ip_addr_ipv4_static_entry_static_entry_valid_valid(cparser_context_t *context,
    uint32_t *macEntryIdx_ptr,
    uint32_t *ipv4_ptr,
    uint32_t *static_entry_ptr,
    uint32_t *valid_ptr);
cparser_result_t cparser_cmd_rg_set_napt_connection_is_tcp_is_tcp_local_ip_local_ip_remote_ip_remote_ip_wan_intf_idx_wan_intf_idx_local_port_local_port_remote_port_remote_port_external_port_external_port_outbound_pri_valid_outbound_pri_valid_outbound_priority_outbound_priority_inbound_pri_valid_inbound_pri_valid_inbound_priority_inbound_priority(cparser_context_t *context,
    uint32_t *is_tcp_ptr,
    uint32_t *local_ip_ptr,
    uint32_t *remote_ip_ptr,
    uint32_t *wan_intf_idx_ptr,
    uint32_t *local_port_ptr,
    uint32_t *remote_port_ptr,
    uint32_t *external_port_ptr,
    uint32_t *outbound_pri_valid_ptr,
    uint32_t *outbound_priority_ptr,
    uint32_t *inbound_pri_valid_ptr,
    uint32_t *inbound_priority_ptr);
cparser_result_t cparser_cmd_rg_set_url_filter_url_url_path_path_path_exactly_match_match_wan_interface_wanintf(cparser_context_t *context,
    char **url_ptr,
    char **path_ptr,
    uint32_t *match_ptr,
    uint32_t *wanintf_ptr);
cparser_result_t cparser_cmd_rg_set_callback_initByHwCallBack_addr(cparser_context_t *context,
    uint32_t *addr_ptr);
cparser_result_t cparser_cmd_rg_set_callback_arpAddByHwCallBack_addr(cparser_context_t *context,
    uint32_t *addr_ptr);
cparser_result_t cparser_cmd_rg_set_callback_arpDelByHwCallBack_addr(cparser_context_t *context,
    uint32_t *addr_ptr);
cparser_result_t cparser_cmd_rg_set_callback_macAddByHwCallBack_addr(cparser_context_t *context,
    uint32_t *addr_ptr);
cparser_result_t cparser_cmd_rg_set_callback_macDelByHwCallBack_addr(cparser_context_t *context,
    uint32_t *addr_ptr);
cparser_result_t cparser_cmd_rg_set_callback_naptAddByHwCallBack_addr(cparser_context_t *context,
    uint32_t *addr_ptr);
cparser_result_t cparser_cmd_rg_set_callback_naptDelByHwCallBack_addr(cparser_context_t *context,
    uint32_t *addr_ptr);
cparser_result_t cparser_cmd_rg_set_callback_routingAddByHwCallBack_addr(cparser_context_t *context,
    uint32_t *addr_ptr);
cparser_result_t cparser_cmd_rg_set_callback_routingDelByHwCallBack_addr(cparser_context_t *context,
    uint32_t *addr_ptr);
cparser_result_t cparser_cmd_rg_set_callback_bindingAddByHwCallBack_addr(cparser_context_t *context,
    uint32_t *addr_ptr);
cparser_result_t cparser_cmd_rg_set_callback_bindingDelByHwCallBack_addr(cparser_context_t *context,
    uint32_t *addr_ptr);
cparser_result_t cparser_cmd_rg_set_callback_interfaceAddByHwCallBack_addr(cparser_context_t *context,
    uint32_t *addr_ptr);
cparser_result_t cparser_cmd_rg_set_callback_interfaceDelByHwCallBack_addr(cparser_context_t *context,
    uint32_t *addr_ptr);
cparser_result_t cparser_cmd_rg_set_callback_pppoeBeforeDiagByHwCallBack_addr(cparser_context_t *context,
    uint32_t *addr_ptr);
cparser_result_t cparser_cmd_rg_set_callback_pptpBeforeDialByHwCallBack_addr(cparser_context_t *context,
    uint32_t *addr_ptr);
cparser_result_t cparser_cmd_rg_set_callback_l2tpBeforeDialByHwCallBack_addr(cparser_context_t *context,
    uint32_t *addr_ptr);
cparser_result_t cparser_cmd_rg_set_callback_pppoeDsliteBeforeDiagByHwCallBack_addr(cparser_context_t *context,
    uint32_t *addr_ptr);
cparser_result_t cparser_cmd_rg_set_callback_neighborAddByHwCallBack_addr(cparser_context_t *context,
    uint32_t *addr_ptr);
cparser_result_t cparser_cmd_rg_set_callback_neighborDelByHwCallBack_addr(cparser_context_t *context,
    uint32_t *addr_ptr);
cparser_result_t cparser_cmd_rg_set_callback_v6RoutingAddByHwCallBack_addr(cparser_context_t *context,
    uint32_t *addr_ptr);
cparser_result_t cparser_cmd_rg_set_callback_v6RoutingDelByHwCallBack_addr(cparser_context_t *context,
    uint32_t *addr_ptr);
cparser_result_t cparser_cmd_rg_set_callback_softwareNaptInfoAddCallBack_addr(cparser_context_t *context,
    uint32_t *addr_ptr);
cparser_result_t cparser_cmd_rg_set_callback_softwareNaptInfoDeleteCallBack_addr(cparser_context_t *context,
    uint32_t *addr_ptr);
cparser_result_t cparser_cmd_rg_set_callback_naptPreRouteDPICallBack_addr(cparser_context_t *context,
    uint32_t *addr_ptr);
cparser_result_t cparser_cmd_rg_set_callback_naptForwardDPICallBack_addr(cparser_context_t *context,
    uint32_t *addr_ptr);
cparser_result_t cparser_cmd_rg_set_serverInLanAppsIpAddr_algType_algType_serverAddress_serverAddress(cparser_context_t *context,
    uint32_t *algType_ptr,
    uint32_t *serverAddress_ptr);
cparser_result_t cparser_cmd_rg_set_pppoeClientInfoAfterDial_sessionId_sessionId_ip_version_ip_version_napt_enable_napt_enable_ip_addr_ip_addr_ip_network_mask_ip_network_mask_ipv4_default_gateway_on_ipv4_default_gateway_on_gateway_ipv4_addr_gateway_ipv4_addr_mtu_mtu(cparser_context_t *context,
    uint32_t *sessionId_ptr,
    uint32_t *ip_version_ptr,
    uint32_t *napt_enable_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *ip_network_mask_ptr,
    uint32_t *ipv4_default_gateway_on_ptr,
    uint32_t *gateway_ipv4_addr_ptr,
    uint32_t *mtu_ptr);
cparser_result_t cparser_cmd_rg_set_pppoeClientInfoAfterDial_sessionId_sessionId_ip_version_ip_version_napt_enable_napt_enable_ip_addr_ip_addr_ip_network_mask_ip_network_mask_ipv4_default_gateway_on_ipv4_default_gateway_on_gateway_ipv4_addr_gateway_ipv4_addr_mtu_mtu_gw_mac_auto_learn_for_ipv4_gw_mac_auto_learn_for_ipv4_gateway_mac_addr_for_ipv4_gateway_mac_addr_for_ipv4(cparser_context_t *context,
    uint32_t *sessionId_ptr,
    uint32_t *ip_version_ptr,
    uint32_t *napt_enable_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *ip_network_mask_ptr,
    uint32_t *ipv4_default_gateway_on_ptr,
    uint32_t *gateway_ipv4_addr_ptr,
    uint32_t *mtu_ptr,
    uint32_t *gw_mac_auto_learn_for_ipv4_ptr,
    cparser_macaddr_t *gateway_mac_addr_for_ipv4_ptr);
cparser_result_t cparser_cmd_rg_set_pppoeClientInfoAfterDial_ipv6_ipv6_addr_ipv6_addr_ipv6_mask_length_ipv6_mask_length_ipv6_default_gateway_on_ipv6_default_gateway_on_gateway_ipv6_addr_gateway_ipv6_addr(cparser_context_t *context,
    char **ipv6_addr_ptr,
    uint32_t *ipv6_mask_length_ptr,
    uint32_t *ipv6_default_gateway_on_ptr,
    char **gateway_ipv6_addr_ptr);
cparser_result_t cparser_cmd_rg_set_pppoeClientInfoAfterDial_ipv6_ipv6_addr_ipv6_addr_ipv6_mask_length_ipv6_mask_length_ipv6_default_gateway_on_ipv6_default_gateway_on_gateway_ipv6_addr_gateway_ipv6_addr_gw_mac_auto_learn_for_ipv6_gw_mac_auto_learn_for_ipv6_gateway_mac_addr_for_ipv6_gateway_mac_addr_for_ipv6(cparser_context_t *context,
    char **ipv6_addr_ptr,
    uint32_t *ipv6_mask_length_ptr,
    uint32_t *ipv6_default_gateway_on_ptr,
    char **gateway_ipv6_addr_ptr,
    uint32_t *gw_mac_auto_learn_for_ipv6_ptr,
    cparser_macaddr_t *gateway_mac_addr_for_ipv6_ptr);
cparser_result_t cparser_cmd_rg_set_pppoeClientInfoAfterDial_ipv6_ipv6_napt_enable_ipv6_napt_enable_ipv6_addr_ipv6_addr_ipv6_mask_length_ipv6_mask_length_ipv6_default_gateway_on_ipv6_default_gateway_on_gateway_ipv6_addr_gateway_ipv6_addr(cparser_context_t *context,
    uint32_t *ipv6_napt_enable_ptr,
    char **ipv6_addr_ptr,
    uint32_t *ipv6_mask_length_ptr,
    uint32_t *ipv6_default_gateway_on_ptr,
    char **gateway_ipv6_addr_ptr);
cparser_result_t cparser_cmd_rg_set_pppoeClientInfoAfterDial_ipv6_ipv6_napt_enable_ipv6_napt_enable_ipv6_addr_ipv6_addr_ipv6_mask_length_ipv6_mask_length_ipv6_default_gateway_on_ipv6_default_gateway_on_gateway_ipv6_addr_gateway_ipv6_addr_gw_mac_auto_learn_for_ipv6_gw_mac_auto_learn_for_ipv6_gateway_mac_addr_for_ipv6_gateway_mac_addr_for_ipv6(cparser_context_t *context,
    uint32_t *ipv6_napt_enable_ptr,
    char **ipv6_addr_ptr,
    uint32_t *ipv6_mask_length_ptr,
    uint32_t *ipv6_default_gateway_on_ptr,
    char **gateway_ipv6_addr_ptr,
    uint32_t *gw_mac_auto_learn_for_ipv6_ptr,
    cparser_macaddr_t *gateway_mac_addr_for_ipv6_ptr);
cparser_result_t cparser_cmd_rg_set_pppoeClientInfoBeforeDial_username_username_password_password_auth_type_auth_type_pppoe_proxy_enable_pppoe_proxy_enable_max_pppoe_proxy_num_max_pppoe_proxy_num_auto_reconnect_auto_reconnect_dial_on_demond_dial_on_demond_idle_timeout_secs_idle_timeout_secs_status_status_dialOnDemondCallBack_dialOnDemondCallBack_addr_idleTimeOutCallBack_idleTimeOutCallBack_addr(cparser_context_t *context,
    char **username_ptr,
    char **password_ptr,
    uint32_t *auth_type_ptr,
    uint32_t *pppoe_proxy_enable_ptr,
    uint32_t *max_pppoe_proxy_num_ptr,
    uint32_t *auto_reconnect_ptr,
    uint32_t *dial_on_demond_ptr,
    uint32_t *idle_timeout_secs_ptr,
    uint32_t *status_ptr,
    uint32_t *dialOnDemondCallBack_addr_ptr,
    uint32_t *idleTimeOutCallBack_addr_ptr);
cparser_result_t cparser_cmd_rg_set_pptpClientInfoBeforeDial_username_username_password_password_pptp_server_addr_for_ipv4_pptp_server_addr_for_ipv4(cparser_context_t *context,
    char **username_ptr,
    char **password_ptr,
    uint32_t *pptp_server_addr_for_ipv4_ptr);
cparser_result_t cparser_cmd_rg_set_pptpClientInfoAfterDial_callId_callId_gateway_callId_gateway_callId_ipv4_addr_ipv4_addr_ipv4_network_mask_ipv4_network_mask_gateway_ipv4_addr_gateway_ipv4_addr_mtu_mtu_ipv4_napt_enable_ipv4_napt_enable_ipv4_default_gateway_on_ipv4_default_gateway_on_gw_mac_auto_learn_for_ipv4_gw_mac_auto_learn_for_ipv4_gateway_mac_addr_for_ipv4_gateway_mac_addr_for_ipv4(cparser_context_t *context,
    uint32_t *callId_ptr,
    uint32_t *gateway_callId_ptr,
    uint32_t *ipv4_addr_ptr,
    uint32_t *ipv4_network_mask_ptr,
    uint32_t *gateway_ipv4_addr_ptr,
    uint32_t *mtu_ptr,
    uint32_t *ipv4_napt_enable_ptr,
    uint32_t *ipv4_default_gateway_on_ptr,
    uint32_t *gw_mac_auto_learn_for_ipv4_ptr,
    cparser_macaddr_t *gateway_mac_addr_for_ipv4_ptr);
cparser_result_t cparser_cmd_rg_set_l2tpClientInfoBeforeDial_username_username_password_password_l2tp_server_addr_for_ipv4_l2tp_server_addr_for_ipv4(cparser_context_t *context,
    char **username_ptr,
    char **password_ptr,
    uint32_t *l2tp_server_addr_for_ipv4_ptr);
cparser_result_t cparser_cmd_rg_set_l2tpClientInfoAfterDial_outer_port_outer_port_gateway_outer_port_gateway_outer_port_tunnelId_tunnelId_sessionId_sessionId_gateway_tunnelId_gateway_tunnelId_gateway_sessionId_gateway_sessionId_ipv4_addr_ipv4_addr_ipv4_network_mask_ipv4_network_mask_gateway_ipv4_addr_gateway_ipv4_addr_mtu_mtu_ipv4_napt_enable_ipv4_napt_enable_ipv4_default_gateway_on_ipv4_default_gateway_on_gw_mac_auto_learn_for_ipv4_gw_mac_auto_learn_for_ipv4_gateway_mac_addr_for_ipv4_gateway_mac_addr_for_ipv4(cparser_context_t *context,
    uint32_t *outer_port_ptr,
    uint32_t *gateway_outer_port_ptr,
    uint32_t *tunnelId_ptr,
    uint32_t *sessionId_ptr,
    uint32_t *gateway_tunnelId_ptr,
    uint32_t *gateway_sessionId_ptr,
    uint32_t *ipv4_addr_ptr,
    uint32_t *ipv4_network_mask_ptr,
    uint32_t *gateway_ipv4_addr_ptr,
    uint32_t *mtu_ptr,
    uint32_t *ipv4_napt_enable_ptr,
    uint32_t *ipv4_default_gateway_on_ptr,
    uint32_t *gw_mac_auto_learn_for_ipv4_ptr,
    cparser_macaddr_t *gateway_mac_addr_for_ipv4_ptr);
cparser_result_t cparser_cmd_rg_set_pppoeDsliteInfoAfterDial_sessionId_sessionId_ip_version_ip_version_napt_enable_napt_enable_ip_addr_ip_addr_ip_network_mask_ip_network_mask_ipv4_default_gateway_on_ipv4_default_gateway_on_mtu_mtu(cparser_context_t *context,
    uint32_t *sessionId_ptr,
    uint32_t *ip_version_ptr,
    uint32_t *napt_enable_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *ip_network_mask_ptr,
    uint32_t *ipv4_default_gateway_on_ptr,
    uint32_t *mtu_ptr);
cparser_result_t cparser_cmd_rg_set_pppoeDsliteInfoAfterDial_ipv6_ipv6_napt_enable_ipv6_napt_enable_ipv6_addr_ipv6_addr_ipv6_mask_length_ipv6_mask_length_ipv6_default_gateway_on_ipv6_default_gateway_on_gateway_ipv6_addr_gateway_ipv6_addr_gw_mac_auto_learn_for_ipv6_gw_mac_auto_learn_for_ipv6_gateway_mac_addr_for_ipv6_gateway_mac_addr_for_ipv6_b4_ipv6_addr_b4_ipv6_addr_aftr_ipv6_addr_aftr_ipv6_addr_aftr_mac_auto_learn_aftr_mac_auto_learn_aftr_mac_addr_aftr_mac_addr(cparser_context_t *context,
    uint32_t *ipv6_napt_enable_ptr,
    char **ipv6_addr_ptr,
    uint32_t *ipv6_mask_length_ptr,
    uint32_t *ipv6_default_gateway_on_ptr,
    char **gateway_ipv6_addr_ptr,
    uint32_t *gw_mac_auto_learn_for_ipv6_ptr,
    cparser_macaddr_t *gateway_mac_addr_for_ipv6_ptr,
    char **b4_ipv6_addr_ptr,
    char **aftr_ipv6_addr_ptr,
    uint32_t *aftr_mac_auto_learn_ptr,
    cparser_macaddr_t *aftr_mac_addr_ptr);
cparser_result_t cparser_cmd_rg_set_pppoeDsliteInfoAfterDial_ipv6_ipv6_napt_enable_ipv6_napt_enable_ipv6_addr_ipv6_addr_ipv6_mask_length_ipv6_mask_length_ipv6_default_gateway_on_ipv6_default_gateway_on_gateway_ipv6_addr_gateway_ipv6_addr_gw_mac_auto_learn_for_ipv6_gw_mac_auto_learn_for_ipv6_gateway_mac_addr_for_ipv6_gateway_mac_addr_for_ipv6_b4_ipv6_addr_b4_ipv6_addr_aftr_ipv6_addr_aftr_ipv6_addr_aftr_mac_auto_learn_aftr_mac_auto_learn_aftr_mac_addr_aftr_mac_addr_dslite_hoplimit_dslite_hoplimit_dslite_flowlabel_dslite_flowlabel_dslite_tc_copy_from_IPv4_TOS(cparser_context_t *context,
    uint32_t *ipv6_napt_enable_ptr,
    char **ipv6_addr_ptr,
    uint32_t *ipv6_mask_length_ptr,
    uint32_t *ipv6_default_gateway_on_ptr,
    char **gateway_ipv6_addr_ptr,
    uint32_t *gw_mac_auto_learn_for_ipv6_ptr,
    cparser_macaddr_t *gateway_mac_addr_for_ipv6_ptr,
    char **b4_ipv6_addr_ptr,
    char **aftr_ipv6_addr_ptr,
    uint32_t *aftr_mac_auto_learn_ptr,
    cparser_macaddr_t *aftr_mac_addr_ptr,
    uint32_t *dslite_hoplimit_ptr,
    uint32_t *dslite_flowlabel_ptr);
cparser_result_t cparser_cmd_rg_set_pppoeDsliteInfoAfterDial_ipv6_ipv6_napt_enable_ipv6_napt_enable_ipv6_addr_ipv6_addr_ipv6_mask_length_ipv6_mask_length_ipv6_default_gateway_on_ipv6_default_gateway_on_gateway_ipv6_addr_gateway_ipv6_addr_gw_mac_auto_learn_for_ipv6_gw_mac_auto_learn_for_ipv6_gateway_mac_addr_for_ipv6_gateway_mac_addr_for_ipv6_b4_ipv6_addr_b4_ipv6_addr_aftr_ipv6_addr_aftr_ipv6_addr_aftr_mac_auto_learn_aftr_mac_auto_learn_aftr_mac_addr_aftr_mac_addr_dslite_hoplimit_dslite_hoplimit_dslite_flowlabel_dslite_flowlabel_dslite_tc_dslite_tc(cparser_context_t *context,
    uint32_t *ipv6_napt_enable_ptr,
    char **ipv6_addr_ptr,
    uint32_t *ipv6_mask_length_ptr,
    uint32_t *ipv6_default_gateway_on_ptr,
    char **gateway_ipv6_addr_ptr,
    uint32_t *gw_mac_auto_learn_for_ipv6_ptr,
    cparser_macaddr_t *gateway_mac_addr_for_ipv6_ptr,
    char **b4_ipv6_addr_ptr,
    char **aftr_ipv6_addr_ptr,
    uint32_t *aftr_mac_auto_learn_ptr,
    cparser_macaddr_t *aftr_mac_addr_ptr,
    uint32_t *dslite_hoplimit_ptr,
    uint32_t *dslite_flowlabel_ptr,
    uint32_t *dslite_tc_ptr);
cparser_result_t cparser_cmd_rg_set_pppoeDsliteInfoBeforeDial_username_username_password_password_auth_type_auth_type_pppoe_proxy_enable_pppoe_proxy_enable_max_pppoe_proxy_num_max_pppoe_proxy_num_auto_reconnect_auto_reconnect_dial_on_demond_dial_on_demond_idle_timeout_secs_idle_timeout_secs_status_status_dialOnDemondCallBack_dialOnDemondCallBack_addr_idleTimeOutCallBack_idleTimeOutCallBack_addr(cparser_context_t *context,
    char **username_ptr,
    char **password_ptr,
    uint32_t *auth_type_ptr,
    uint32_t *pppoe_proxy_enable_ptr,
    uint32_t *max_pppoe_proxy_num_ptr,
    uint32_t *auto_reconnect_ptr,
    uint32_t *dial_on_demond_ptr,
    uint32_t *idle_timeout_secs_ptr,
    uint32_t *status_ptr,
    uint32_t *dialOnDemondCallBack_addr_ptr,
    uint32_t *idleTimeOutCallBack_addr_ptr);
cparser_result_t cparser_cmd_rg_set_neighbor_entry_l2Idx_l2Idx_matchRouteIdx_matchRouteIdx_interfaceId_up_ipv6_addr_63_32_interfaceId_low_ipv6_addr_31_0_staticEntry_staticEntry(cparser_context_t *context,
    uint32_t *l2Idx_ptr,
    uint32_t *matchRouteIdx_ptr,
    uint32_t *ipv6_addr_63_32_ptr,
    uint32_t *ipv6_addr_31_0_ptr,
    uint32_t *staticEntry_ptr);
cparser_result_t cparser_cmd_rg_set_dhcpRequest_wan_intf_idx_wan_intf_idx(cparser_context_t *context,
    uint32_t *wan_intf_idx_ptr);
cparser_result_t cparser_cmd_rg_set_dhcpClientInfo_stauts_stauts_ip_version_ip_version_napt_enable_napt_enable_ip_addr_ip_addr_ip_network_mask_ip_network_mask_ipv4_default_gateway_on_ipv4_default_gateway_on_gateway_ipv4_addr_gateway_ipv4_addr_mtu_mtu(cparser_context_t *context,
    uint32_t *stauts_ptr,
    uint32_t *ip_version_ptr,
    uint32_t *napt_enable_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *ip_network_mask_ptr,
    uint32_t *ipv4_default_gateway_on_ptr,
    uint32_t *gateway_ipv4_addr_ptr,
    uint32_t *mtu_ptr);
cparser_result_t cparser_cmd_rg_set_dhcpClientInfo_stauts_stauts_ip_version_ip_version_napt_enable_napt_enable_ip_addr_ip_addr_ip_network_mask_ip_network_mask_ipv4_default_gateway_on_ipv4_default_gateway_on_gateway_ipv4_addr_gateway_ipv4_addr_mtu_mtu_gw_mac_auto_learn_for_ipv4_gw_mac_auto_learn_for_ipv4_gateway_mac_addr_for_ipv4_gateway_mac_addr_for_ipv4(cparser_context_t *context,
    uint32_t *stauts_ptr,
    uint32_t *ip_version_ptr,
    uint32_t *napt_enable_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *ip_network_mask_ptr,
    uint32_t *ipv4_default_gateway_on_ptr,
    uint32_t *gateway_ipv4_addr_ptr,
    uint32_t *mtu_ptr,
    uint32_t *gw_mac_auto_learn_for_ipv4_ptr,
    cparser_macaddr_t *gateway_mac_addr_for_ipv4_ptr);
cparser_result_t cparser_cmd_rg_set_dhcpClientInfo_stauts_stauts_ip_version_ip_version_napt_enable_napt_enable_ip_addr_ip_addr_ip_network_mask_ip_network_mask_ipv4_default_gateway_on_ipv4_default_gateway_on_gateway_ipv4_addr_gateway_ipv4_addr_mtu_mtu_routing_type_routing_type(cparser_context_t *context,
    uint32_t *stauts_ptr,
    uint32_t *ip_version_ptr,
    uint32_t *napt_enable_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *ip_network_mask_ptr,
    uint32_t *ipv4_default_gateway_on_ptr,
    uint32_t *gateway_ipv4_addr_ptr,
    uint32_t *mtu_ptr,
    uint32_t *routing_type_ptr);
cparser_result_t cparser_cmd_rg_set_dhcpClientInfo_stauts_stauts_ip_version_ip_version_napt_enable_napt_enable_ip_addr_ip_addr_ip_network_mask_ip_network_mask_ipv4_default_gateway_on_ipv4_default_gateway_on_gateway_ipv4_addr_gateway_ipv4_addr_mtu_mtu_routing_type_routing_type_gw_mac_auto_learn_for_ipv4_gw_mac_auto_learn_for_ipv4_gateway_mac_addr_for_ipv4_gateway_mac_addr_for_ipv4(cparser_context_t *context,
    uint32_t *stauts_ptr,
    uint32_t *ip_version_ptr,
    uint32_t *napt_enable_ptr,
    uint32_t *ip_addr_ptr,
    uint32_t *ip_network_mask_ptr,
    uint32_t *ipv4_default_gateway_on_ptr,
    uint32_t *gateway_ipv4_addr_ptr,
    uint32_t *mtu_ptr,
    uint32_t *routing_type_ptr,
    uint32_t *gw_mac_auto_learn_for_ipv4_ptr,
    cparser_macaddr_t *gateway_mac_addr_for_ipv4_ptr);
cparser_result_t cparser_cmd_rg_set_dhcpClientInfo_ipv6_ipv6_addr_ipv6_addr_ipv6_mask_length_ipv6_mask_length_ipv6_default_gateway_on_ipv6_default_gateway_on_gateway_ipv6_addr_gateway_ipv6_addr(cparser_context_t *context,
    char **ipv6_addr_ptr,
    uint32_t *ipv6_mask_length_ptr,
    uint32_t *ipv6_default_gateway_on_ptr,
    char **gateway_ipv6_addr_ptr);
cparser_result_t cparser_cmd_rg_set_dhcpClientInfo_ipv6_ipv6_addr_ipv6_addr_ipv6_mask_length_ipv6_mask_length_ipv6_default_gateway_on_ipv6_default_gateway_on_gateway_ipv6_addr_gateway_ipv6_addr_gw_mac_auto_learn_for_ipv6_gw_mac_auto_learn_for_ipv6_gateway_mac_addr_for_ipv6_gateway_mac_addr_for_ipv6(cparser_context_t *context,
    char **ipv6_addr_ptr,
    uint32_t *ipv6_mask_length_ptr,
    uint32_t *ipv6_default_gateway_on_ptr,
    char **gateway_ipv6_addr_ptr,
    uint32_t *gw_mac_auto_learn_for_ipv6_ptr,
    cparser_macaddr_t *gateway_mac_addr_for_ipv6_ptr);
cparser_result_t cparser_cmd_rg_set_dhcpClientInfo_ipv6_ipv6_napt_enable_ipv6_napt_enable_ipv6_addr_ipv6_addr_ipv6_mask_length_ipv6_mask_length_ipv6_default_gateway_on_ipv6_default_gateway_on_gateway_ipv6_addr_gateway_ipv6_addr(cparser_context_t *context,
    uint32_t *ipv6_napt_enable_ptr,
    char **ipv6_addr_ptr,
    uint32_t *ipv6_mask_length_ptr,
    uint32_t *ipv6_default_gateway_on_ptr,
    char **gateway_ipv6_addr_ptr);
cparser_result_t cparser_cmd_rg_set_dhcpClientInfo_ipv6_ipv6_napt_enable_ipv6_napt_enable_ipv6_addr_ipv6_addr_ipv6_mask_length_ipv6_mask_length_ipv6_default_gateway_on_ipv6_default_gateway_on_gateway_ipv6_addr_gateway_ipv6_addr_gw_mac_auto_learn_for_ipv6_gw_mac_auto_learn_for_ipv6_gateway_mac_addr_for_ipv6_gateway_mac_addr_for_ipv6(cparser_context_t *context,
    uint32_t *ipv6_napt_enable_ptr,
    char **ipv6_addr_ptr,
    uint32_t *ipv6_mask_length_ptr,
    uint32_t *ipv6_default_gateway_on_ptr,
    char **gateway_ipv6_addr_ptr,
    uint32_t *gw_mac_auto_learn_for_ipv6_ptr,
    cparser_macaddr_t *gateway_mac_addr_for_ipv6_ptr);
cparser_result_t cparser_cmd_rg_set_binding_port_idx_port_idx_ingress_vid_ingress_vid_wan_intf_idx_wan_intf_idx(cparser_context_t *context,
    uint32_t *port_idx_ptr,
    uint32_t *ingress_vid_ptr,
    uint32_t *wan_intf_idx_ptr);
cparser_result_t cparser_cmd_rg_set_macfilter_mac_mac_direct_direct(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr,
    uint32_t *direct_ptr);
cparser_result_t cparser_cmd_rg_set_macfilter_mac_mac_direct_direct_ivl_svl_ivl_svl_vid_vid(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr,
    uint32_t *direct_ptr,
    uint32_t *ivl_svl_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_rg_set_virtualServer_is_tcp_is_tcp_wan_intf_idx_wan_intf_idx_gateway_port_start_gateway_port_start_local_ip_local_ip_local_port_start_local_port_start_mappingPortRangeCnt_mappingPortRangeCnt_mappingType_mappingType_valid_valid(cparser_context_t *context,
    uint32_t *is_tcp_ptr,
    uint32_t *wan_intf_idx_ptr,
    uint32_t *gateway_port_start_ptr,
    uint32_t *local_ip_ptr,
    uint32_t *local_port_start_ptr,
    uint32_t *mappingPortRangeCnt_ptr,
    uint32_t *mappingType_ptr,
    uint32_t *valid_ptr);
cparser_result_t cparser_cmd_rg_set_virtualServer_is_tcp_is_tcp_wan_intf_idx_wan_intf_idx_gateway_port_start_gateway_port_start_local_ip_local_ip_local_port_start_local_port_start_mappingPortRangeCnt_mappingPortRangeCnt_mappingType_mappingType_valid_valid_hookAlgType_hookAlgType_disable_wan_check_disable_wan_check(cparser_context_t *context,
    uint32_t *is_tcp_ptr,
    uint32_t *wan_intf_idx_ptr,
    uint32_t *gateway_port_start_ptr,
    uint32_t *local_ip_ptr,
    uint32_t *local_port_start_ptr,
    uint32_t *mappingPortRangeCnt_ptr,
    uint32_t *mappingType_ptr,
    uint32_t *valid_ptr,
    uint32_t *hookAlgType_ptr,
    uint32_t *disable_wan_check_ptr);
cparser_result_t cparser_cmd_rg_set_virtualServer_ipversion_ipversion_is_tcp_is_tcp_wan_intf_idx_wan_intf_idx_gateway_port_start_gateway_port_start_local_ip_local_ip_local_ipv6_local_ipv6_local_port_start_local_port_start_mappingPortRangeCnt_mappingPortRangeCnt_mappingType_mappingType_valid_valid(cparser_context_t *context,
    uint32_t *ipversion_ptr,
    uint32_t *is_tcp_ptr,
    uint32_t *wan_intf_idx_ptr,
    uint32_t *gateway_port_start_ptr,
    uint32_t *local_ip_ptr,
    char **local_ipv6_ptr,
    uint32_t *local_port_start_ptr,
    uint32_t *mappingPortRangeCnt_ptr,
    uint32_t *mappingType_ptr,
    uint32_t *valid_ptr);
cparser_result_t cparser_cmd_rg_set_virtualServer_ipversion_ipversion_is_tcp_is_tcp_wan_intf_idx_wan_intf_idx_gateway_port_start_gateway_port_start_local_ip_local_ip_local_ipv6_local_ipv6_local_port_start_local_port_start_mappingPortRangeCnt_mappingPortRangeCnt_mappingType_mappingType_valid_valid_hookAlgType_hookAlgType_disable_wan_check_disable_wan_check(cparser_context_t *context,
    uint32_t *ipversion_ptr,
    uint32_t *is_tcp_ptr,
    uint32_t *wan_intf_idx_ptr,
    uint32_t *gateway_port_start_ptr,
    uint32_t *local_ip_ptr,
    char **local_ipv6_ptr,
    uint32_t *local_port_start_ptr,
    uint32_t *mappingPortRangeCnt_ptr,
    uint32_t *mappingType_ptr,
    uint32_t *valid_ptr,
    uint32_t *hookAlgType_ptr,
    uint32_t *disable_wan_check_ptr);
cparser_result_t cparser_cmd_rg_set_cvlan_vlanId_vlanId_isIVL_isIVL_memberPortMask_memberPortMask_untagPortMask_untagPortMask_vlan_based_pri_enable_enable_vlan_based_pri_vlan_based_pri(cparser_context_t *context,
    uint32_t *vlanId_ptr,
    uint32_t *isIVL_ptr,
    uint32_t *memberPortMask_ptr,
    uint32_t *untagPortMask_ptr,
    uint32_t *vlan_based_pri_ptr);
cparser_result_t cparser_cmd_rg_set_cvlan_vlanId_vlanId_isIVL_isIVL_memberPortMask_memberPortMask_untagPortMask_untagPortMask_vlan_based_pri_enable_disable(cparser_context_t *context,
    uint32_t *vlanId_ptr,
    uint32_t *isIVL_ptr,
    uint32_t *memberPortMask_ptr,
    uint32_t *untagPortMask_ptr);
cparser_result_t cparser_cmd_rg_set_port_based_vlan_port_idx_port_idx_vlanId_vlanId(cparser_context_t *context,
    uint32_t *port_idx_ptr,
    uint32_t *vlanId_ptr);
cparser_result_t cparser_cmd_rg_set_wlan_dev_based_vlan_wlan_idx_wlan_idx_dev_idx_dev_idx_vlanId_vlanId(cparser_context_t *context,
    uint32_t *wlan_idx_ptr,
    uint32_t *dev_idx_ptr,
    uint32_t *vlanId_ptr);
cparser_result_t cparser_cmd_rg_set_wanAccessLimitCategory_mac_mac_category_category(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr,
    uint32_t *category_ptr);
cparser_result_t cparser_cmd_rg_set_softwareSourceAddrLearningLimit_learningLimitNumber_learningLimitNumber_action_action(cparser_context_t *context,
    uint32_t *learningLimitNumber_ptr,
    uint32_t *action_ptr);
cparser_result_t cparser_cmd_rg_set_softwareSourceAddrLearningLimit_learningLimitNumber_unlimit_action_action(cparser_context_t *context,
    uint32_t *action_ptr);
cparser_result_t cparser_cmd_rg_set_phyPortForceAbility_force_disable_phy_force_disable_phy_valid_valid_speed_speed_duplex_duplex_flowCtrl_flowCtrl(cparser_context_t *context,
    uint32_t *force_disable_phy_ptr,
    uint32_t *valid_ptr,
    uint32_t *speed_ptr,
    uint32_t *duplex_ptr,
    uint32_t *flowCtrl_ptr);
cparser_result_t cparser_cmd_rg_set_phyPortForceAbility_force_disable_phy_force_disable_phy_valid_valid_speed_speed_duplex_duplex_flowCtrl_flowCtrl_fc_fc_asym_fc_asym_fc(cparser_context_t *context,
    uint32_t *force_disable_phy_ptr,
    uint32_t *valid_ptr,
    uint32_t *speed_ptr,
    uint32_t *duplex_ptr,
    uint32_t *flowCtrl_ptr,
    uint32_t *fc_ptr,
    uint32_t *asym_fc_ptr);
cparser_result_t cparser_cmd_rg_set_portMirror_monitorPort_monitorPort_enabledPortMask_enabledPortMask_direct_direct(cparser_context_t *context,
    uint32_t *monitorPort_ptr,
    uint32_t *enabledPortMask_ptr,
    uint32_t *direct_ptr);
cparser_result_t cparser_cmd_rg_set_upnpConnection_is_tcp_is_tcp_valid_valid_wan_intf_idx_wan_intf_idx_gateway_port_gateway_port_local_ip_local_ip_local_port_local_port_limit_remote_ip_limit_remote_ip_limit_remote_port_limit_remote_port_remote_ip_remote_ip_remote_port_remote_port_type_type_timeout_timeout(cparser_context_t *context,
    uint32_t *is_tcp_ptr,
    uint32_t *valid_ptr,
    uint32_t *wan_intf_idx_ptr,
    uint32_t *gateway_port_ptr,
    uint32_t *local_ip_ptr,
    uint32_t *local_port_ptr,
    uint32_t *limit_remote_ip_ptr,
    uint32_t *limit_remote_port_ptr,
    uint32_t *remote_ip_ptr,
    uint32_t *remote_port_ptr,
    uint32_t *type_ptr,
    uint32_t *timeout_ptr);
cparser_result_t cparser_cmd_rg_set_dmzHost_enabled_enabled_private_ip_private_ip(cparser_context_t *context,
    uint32_t *enabled_ptr,
    uint32_t *private_ip_ptr);
cparser_result_t cparser_cmd_rg_set_dmzHost_enabled_enabled_ipversion_ipversion_private_ip_private_ip_private_ipv6_private_ipv6(cparser_context_t *context,
    uint32_t *enabled_ptr,
    uint32_t *ipversion_ptr,
    uint32_t *private_ip_ptr,
    char **private_ipv6_ptr);
cparser_result_t cparser_cmd_rg_set_stormControl_valid_valid_port_port_stormType_stormType_meterIdx_meterIdx(cparser_context_t *context,
    uint32_t *valid_ptr,
    uint32_t *port_ptr,
    uint32_t *stormType_ptr,
    uint32_t *meterIdx_ptr);
cparser_result_t cparser_cmd_rg_set_multicastFlow_multicast_ipv4_addr_multicast_ipv4_addr_multicast_ipv6_addr_multicast_ipv6_addr_isIPv6_isIPv6_port_mask_port_mask(cparser_context_t *context,
    uint32_t *multicast_ipv4_addr_ptr,
    char **multicast_ipv6_addr_ptr,
    uint32_t *isIPv6_ptr,
    uint32_t *port_mask_ptr);
cparser_result_t cparser_cmd_rg_set_multicastFlow_multicast_ipv4_addr_multicast_ipv4_addr_multicast_ipv6_addr_multicast_ipv6_addr_isIPv6_isIPv6_port_mask_port_mask_isIVL_isIVL_vlanId_vlanId(cparser_context_t *context,
    uint32_t *multicast_ipv4_addr_ptr,
    char **multicast_ipv6_addr_ptr,
    uint32_t *isIPv6_ptr,
    uint32_t *port_mask_ptr,
    uint32_t *isIVL_ptr,
    uint32_t *vlanId_ptr);
cparser_result_t cparser_cmd_rg_set_gatewayServicePort_valid_valid_port_number_port_number_type_type(cparser_context_t *context,
    uint32_t *valid_ptr,
    uint32_t *port_number_ptr,
    uint32_t *type_ptr);
cparser_result_t cparser_cmd_rg_set_naptFilterAndQos_direction_direction(cparser_context_t *context,
    uint32_t *direction_ptr);
cparser_result_t cparser_cmd_rg_set_naptFilterAndQos_pattern_ingress_src_ipv4_addr_ingress_src_ipv4_addr(cparser_context_t *context,
    uint32_t *ingress_src_ipv4_addr_ptr);
cparser_result_t cparser_cmd_rg_set_naptFilterAndQos_pattern_egress_src_ipv4_addr_egress_src_ipv4_addr(cparser_context_t *context,
    uint32_t *egress_src_ipv4_addr_ptr);
cparser_result_t cparser_cmd_rg_set_naptFilterAndQos_pattern_ingress_dest_ipv4_addr_ingress_dest_ipv4_addr(cparser_context_t *context,
    uint32_t *ingress_dest_ipv4_addr_ptr);
cparser_result_t cparser_cmd_rg_set_naptFilterAndQos_pattern_egress_dest_ipv4_addr_egress_dest_ipv4_addr(cparser_context_t *context,
    uint32_t *egress_dest_ipv4_addr_ptr);
cparser_result_t cparser_cmd_rg_set_naptFilterAndQos_pattern_ingress_src_l4_port_ingress_src_l4_port(cparser_context_t *context,
    uint32_t *ingress_src_l4_port_ptr);
cparser_result_t cparser_cmd_rg_set_naptFilterAndQos_pattern_egress_src_l4_port_egress_src_l4_port(cparser_context_t *context,
    uint32_t *egress_src_l4_port_ptr);
cparser_result_t cparser_cmd_rg_set_naptFilterAndQos_pattern_ingress_dest_l4_port_ingress_dest_l4_port(cparser_context_t *context,
    uint32_t *ingress_dest_l4_port_ptr);
cparser_result_t cparser_cmd_rg_set_naptFilterAndQos_pattern_egress_dest_l4_port_egress_dest_l4_port(cparser_context_t *context,
    uint32_t *egress_dest_l4_port_ptr);
cparser_result_t cparser_cmd_rg_set_naptFilterAndQos_pattern_ingress_l4_protocal_ingress_l4_protocal(cparser_context_t *context,
    uint32_t *ingress_l4_protocal_ptr);
cparser_result_t cparser_cmd_rg_set_naptFilterAndQos_pattern_ingress_src_ipv4_addr_range_ingress_src_ipv4_addr_range_start_ingress_src_ipv4_addr_range_start_ingress_src_ipv4_addr_range_end_ingress_src_ipv4_addr_range_end(cparser_context_t *context,
    uint32_t *ingress_src_ipv4_addr_range_start_ptr,
    uint32_t *ingress_src_ipv4_addr_range_end_ptr);
cparser_result_t cparser_cmd_rg_set_naptFilterAndQos_pattern_ingress_dest_ipv4_addr_range_ingress_dest_ipv4_addr_range_start_ingress_dest_ipv4_addr_range_start_ingress_dest_ipv4_addr_range_end_ingress_dest_ipv4_addr_range_end(cparser_context_t *context,
    uint32_t *ingress_dest_ipv4_addr_range_start_ptr,
    uint32_t *ingress_dest_ipv4_addr_range_end_ptr);
cparser_result_t cparser_cmd_rg_set_naptFilterAndQos_pattern_ingress_src_l4_port_range_ingress_src_l4_port_range_start_ingress_src_l4_port_range_start_ingress_src_l4_port_range_end_ingress_src_l4_port_range_end(cparser_context_t *context,
    uint32_t *ingress_src_l4_port_range_start_ptr,
    uint32_t *ingress_src_l4_port_range_end_ptr);
cparser_result_t cparser_cmd_rg_set_naptFilterAndQos_pattern_ingress_dest_l4_port_range_ingress_dest_l4_port_range_start_ingress_dest_l4_port_range_start_ingress_dest_l4_port_range_end_ingress_dest_l4_port_range_end(cparser_context_t *context,
    uint32_t *ingress_dest_l4_port_range_start_ptr,
    uint32_t *ingress_dest_l4_port_range_end_ptr);
cparser_result_t cparser_cmd_rg_set_naptFilterAndQos_pattern_egress_src_ipv4_addr_range_egress_src_ipv4_addr_range_start_egress_src_ipv4_addr_range_start_egress_src_ipv4_addr_range_end_egress_src_ipv4_addr_range_end(cparser_context_t *context,
    uint32_t *egress_src_ipv4_addr_range_start_ptr,
    uint32_t *egress_src_ipv4_addr_range_end_ptr);
cparser_result_t cparser_cmd_rg_set_naptFilterAndQos_pattern_egress_dest_ipv4_addr_range_egress_dest_ipv4_addr_range_start_egress_dest_ipv4_addr_range_start_egress_dest_ipv4_addr_range_end_egress_dest_ipv4_addr_range_end(cparser_context_t *context,
    uint32_t *egress_dest_ipv4_addr_range_start_ptr,
    uint32_t *egress_dest_ipv4_addr_range_end_ptr);
cparser_result_t cparser_cmd_rg_set_naptFilterAndQos_pattern_egress_src_l4_port_range_egress_src_l4_port_range_start_egress_src_l4_port_range_start_egress_src_l4_port_range_end_egress_src_l4_port_range_end(cparser_context_t *context,
    uint32_t *egress_src_l4_port_range_start_ptr,
    uint32_t *egress_src_l4_port_range_end_ptr);
cparser_result_t cparser_cmd_rg_set_naptFilterAndQos_pattern_egress_dest_l4_port_range_egress_dest_l4_port_range_start_egress_dest_l4_port_range_start_egress_dest_l4_port_range_end_egress_dest_l4_port_range_end(cparser_context_t *context,
    uint32_t *egress_dest_l4_port_range_start_ptr,
    uint32_t *egress_dest_l4_port_range_end_ptr);
cparser_result_t cparser_cmd_rg_set_naptFilterAndQos_weight_weight(cparser_context_t *context,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_rg_set_naptFilterAndQos_action_assign_priority_assign_priority(cparser_context_t *context,
    uint32_t *assign_priority_ptr);
cparser_result_t cparser_cmd_rg_set_naptFilterAndQos_action_drop(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_naptFilterAndQos_action_permit(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_naptFilterAndQos_ruleType_ruleType(cparser_context_t *context,
    uint32_t *ruleType_ptr);
cparser_result_t cparser_cmd_rg_set_stpBlockingPortmask_port_mask_portmask(cparser_context_t *context,
    uint32_t *portmask_ptr);
cparser_result_t cparser_cmd_rg_set_gponDsBcFilter_module_enable(cparser_context_t *context,
    uint32_t *enable_ptr);
cparser_result_t cparser_cmd_rg_set_gponDsBcFilter_pattern_ingress_stream_id_ingress_stream_id(cparser_context_t *context,
    uint32_t *ingress_stream_id_ptr);
cparser_result_t cparser_cmd_rg_set_gponDsBcFilter_pattern_ingress_stagIf_ingress_stagIf(cparser_context_t *context,
    uint32_t *ingress_stagIf_ptr);
cparser_result_t cparser_cmd_rg_set_gponDsBcFilter_pattern_ingress_ctagIf_ingress_ctagIf(cparser_context_t *context,
    uint32_t *ingress_ctagIf_ptr);
cparser_result_t cparser_cmd_rg_set_gponDsBcFilter_pattern_ingress_stag_svid_ingress_stag_svid(cparser_context_t *context,
    uint32_t *ingress_stag_svid_ptr);
cparser_result_t cparser_cmd_rg_set_gponDsBcFilter_pattern_ingress_ctag_cvid_ingress_ctag_cvid(cparser_context_t *context,
    uint32_t *ingress_ctag_cvid_ptr);
cparser_result_t cparser_cmd_rg_set_gponDsBcFilter_pattern_egress_portmask_egress_portmask(cparser_context_t *context,
    uint32_t *egress_portmask_ptr);
cparser_result_t cparser_cmd_rg_set_gponDsBcFilter_action_tag_decision_tag_decision_tag_cvid_tag_cvid_tag_cpri_tag_cpri(cparser_context_t *context,
    uint32_t *tag_decision_ptr,
    uint32_t *tag_cvid_ptr,
    uint32_t *tag_cpri_ptr);
cparser_result_t cparser_cmd_rg_set_dsliteMc_index_index_mprefix64_addr_mprefix64_addr_mprefix64_mask_mprefix64_mask_uprefix64_addr_uprefix64_addr_uprefix64_mask_uprefix64_mask(cparser_context_t *context,
    uint32_t *index_ptr,
    char **mprefix64_addr_ptr,
    char **mprefix64_mask_ptr,
    char **uprefix64_addr_ptr,
    char **uprefix64_mask_ptr);
cparser_result_t cparser_cmd_rg_set_redirectHttpAll_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_redirectHttpAll_enable_enable_pushweb_pushweb(cparser_context_t *context,
    int32_t *enable_ptr,
    char **pushweb_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_fwding_type_and_direction_fwding_type_and_direction(cparser_context_t *context,
    uint32_t *fwding_type_and_direction_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_acl_weight_acl_weight(cparser_context_t *context,
    uint32_t *acl_weight_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_port_mask_portmask(cparser_context_t *context,
    uint32_t *portmask_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_dscp_dscp(cparser_context_t *context,
    uint32_t *dscp_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_ipv6_dscp_dscp(cparser_context_t *context,
    uint32_t *dscp_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_intf_idx_igr_intf(cparser_context_t *context,
    uint32_t *igr_intf_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_egress_intf_idx_egr_intf(cparser_context_t *context,
    uint32_t *egr_intf_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_stream_id_stream_id(cparser_context_t *context,
    uint32_t *stream_id_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_ipv4_tagif_ingress_ipv4_tagif(cparser_context_t *context,
    uint32_t *ingress_ipv4_tagif_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_ipv6_tagif_ingress_ipv6_tagif(cparser_context_t *context,
    uint32_t *ingress_ipv6_tagif_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_ethertype_ethtype(cparser_context_t *context,
    uint32_t *ethtype_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_ctag_vid_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_ctag_pri_pri(cparser_context_t *context,
    uint32_t *pri_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_ctag_cfi_cfi(cparser_context_t *context,
    uint32_t *cfi_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_egress_ctag_vid_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_egress_ctag_vid_mask_vid_mask(cparser_context_t *context,
    uint32_t *vid_mask_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_egress_ctag_pri_pri(cparser_context_t *context,
    uint32_t *pri_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_egress_ip4mc_if_egress_ip4mc_if(cparser_context_t *context,
    uint32_t *egress_ip4mc_if_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_egress_ip6mc_if_egress_ip6mc_if(cparser_context_t *context,
    uint32_t *egress_ip6mc_if_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_smac_smac(cparser_context_t *context,
    cparser_macaddr_t *smac_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_dmac_dmac(cparser_context_t *context,
    cparser_macaddr_t *dmac_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_src_ipv4_addr_start_igr_sip_low_bound_ingress_src_ipv4_addr_end_igr_sip_up_bound(cparser_context_t *context,
    uint32_t *igr_sip_low_bound_ptr,
    uint32_t *igr_sip_up_bound_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_dest_ipv4_addr_start_igr_dip_low_bound_ingress_dest_ipv4_addr_end_igr_dip_up_bound(cparser_context_t *context,
    uint32_t *igr_dip_low_bound_ptr,
    uint32_t *igr_dip_up_bound_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_src_ipv6_addr_start_igr_sip6_low_bound_ingress_src_ipv6_addr_end_igr_sip6_up_bound(cparser_context_t *context,
    char **igr_sip6_low_bound_ptr,
    char **igr_sip6_up_bound_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_src_ipv6_addr_ingress_src_ipv6_addr(cparser_context_t *context,
    char **ingress_src_ipv6_addr_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_src_ipv6_addr_mask_ingress_src_ipv6_addr_mask(cparser_context_t *context,
    char **ingress_src_ipv6_addr_mask_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_dest_ipv6_addr_start_igr_dip6_low_bound_ingress_dest_ipv6_addr_end_igr_sip6_up_bound(cparser_context_t *context,
    char **igr_dip6_low_bound_ptr,
    char **igr_sip6_up_bound_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_dest_ipv6_addr_ingress_dest_ipv6_addr(cparser_context_t *context,
    char **ingress_dest_ipv6_addr_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_dest_ipv6_addr_mask_ingress_dest_ipv6_addr_mask(cparser_context_t *context,
    char **ingress_dest_ipv6_addr_mask_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_src_l4_port_start_igr_l4sport_low_bound_ingress_src_l4_port_end_igr_l4sport_up_bound(cparser_context_t *context,
    uint32_t *igr_l4sport_low_bound_ptr,
    uint32_t *igr_l4sport_up_bound_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_dest_l4_port_start_igr_l4dport_low_bound_ingress_dest_l4_port_end_igr_l4dport_up_bound(cparser_context_t *context,
    uint32_t *igr_l4dport_low_bound_ptr,
    uint32_t *igr_l4dport_up_bound_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_egress_src_ipv4_addr_start_egr_sip_low_bound_egress_src_ipv4_addr_end_egr_sip_up_bound(cparser_context_t *context,
    uint32_t *egr_sip_low_bound_ptr,
    uint32_t *egr_sip_up_bound_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_egress_dest_ipv4_addr_start_egr_dip_low_bound_egress_dest_ipv4_addr_end_egr_dip_up_bound(cparser_context_t *context,
    uint32_t *egr_dip_low_bound_ptr,
    uint32_t *egr_dip_up_bound_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_egress_src_l4_port_start_egr_l4sport_low_bound_egress_src_l4_port_end_egr_l4sport_up_bound(cparser_context_t *context,
    uint32_t *egr_l4sport_low_bound_ptr,
    uint32_t *egr_l4sport_up_bound_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_egress_dest_l4_port_start_egr_l4dport_low_bound_egress_dest_l4_port_end_igr_l4dport_up_bound(cparser_context_t *context,
    uint32_t *egr_l4dport_low_bound_ptr,
    uint32_t *igr_l4dport_up_bound_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_l4_protocal_protocal(cparser_context_t *context,
    uint32_t *protocal_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_l4_protocal_value_protocal(cparser_context_t *context,
    uint32_t *protocal_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_port_idx_ingress_port_idx(cparser_context_t *context,
    uint32_t *ingress_port_idx_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_egress_port_idx_egress_port_idx(cparser_context_t *context,
    uint32_t *egress_port_idx_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_internal_pri_internal_pri(cparser_context_t *context,
    uint32_t *internal_pri_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_stag_vid_ingress_stag_vid(cparser_context_t *context,
    uint32_t *ingress_stag_vid_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_stag_pri_ingress_stag_pri(cparser_context_t *context,
    uint32_t *ingress_stag_pri_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_stag_dei_ingress_stag_dei(cparser_context_t *context,
    uint32_t *ingress_stag_dei_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_stagIf_ingress_stagIf(cparser_context_t *context,
    uint32_t *ingress_stagIf_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_ctagIf_ingress_ctagIf(cparser_context_t *context,
    uint32_t *ingress_ctagIf_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_wlanDevMask_ingress_wlanDevMask(cparser_context_t *context,
    uint32_t *ingress_wlanDevMask_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_smac_mask_smac_mask(cparser_context_t *context,
    cparser_macaddr_t *smac_mask_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_dmac_mask_dmac_mask(cparser_context_t *context,
    cparser_macaddr_t *dmac_mask_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_ethertype_mask_ethtype_mask(cparser_context_t *context,
    uint32_t *ethtype_mask_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_stream_id_mask_stream_id_mask(cparser_context_t *context,
    uint32_t *stream_id_mask_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_ingress_port_idx_mask_ingress_port_idx_mask(cparser_context_t *context,
    uint32_t *ingress_port_idx_mask_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_pattern_egress_port_idx_mask_egress_port_idx_mask(cparser_context_t *context,
    uint32_t *egress_port_idx_mask_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_action_type_actiontype(cparser_context_t *context,
    uint32_t *actiontype_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_policy_route_egress_intf_idx_egr_intf(cparser_context_t *context,
    uint32_t *egr_intf_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_qos_action_dot1p_remarking_pri_dot1p_remarking_pri(cparser_context_t *context,
    uint32_t *dot1p_remarking_pri_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_qos_action_ip_precedence_remarking_pri_ip_precedence_remarking_pri(cparser_context_t *context,
    uint32_t *ip_precedence_remarking_pri_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_qos_action_dscp_remarking_pri_dscp_remarking_pri(cparser_context_t *context,
    uint32_t *dscp_remarking_pri_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_qos_action_queue_id_queue_id(cparser_context_t *context,
    uint32_t *queue_id_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_qos_action_egress_internal_priority_egress_internal_priority(cparser_context_t *context,
    uint32_t *egress_internal_priority_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_qos_action_share_meter_share_meter(cparser_context_t *context,
    uint32_t *share_meter_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_qos_action_stream_id_stream_id(cparser_context_t *context,
    uint32_t *stream_id_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_qos_action_acl_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_qos_action_redirect_redirect_portmask(cparser_context_t *context,
    uint32_t *redirect_portmask_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_qos_action_stag_tagDecision_tagDecision_svidDecision_svidDecision_spriDecision_spriDecision_svid_svid_spri_spri(cparser_context_t *context,
    uint32_t *tagDecision_ptr,
    uint32_t *svidDecision_ptr,
    uint32_t *spriDecision_ptr,
    uint32_t *svid_ptr,
    uint32_t *spri_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_qos_action_stag_tagWithTPID_svidDecision_svidDecision_spriDecision_spriDecision_svid_svid_spri_spri(cparser_context_t *context,
    uint32_t *svidDecision_ptr,
    uint32_t *spriDecision_ptr,
    uint32_t *svid_ptr,
    uint32_t *spri_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_qos_action_stag_tagWith8100_svidDecision_svidDecision_spriDecision_spriDecision_svid_svid_spri_spri(cparser_context_t *context,
    uint32_t *svidDecision_ptr,
    uint32_t *spriDecision_ptr,
    uint32_t *svid_ptr,
    uint32_t *spri_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_qos_action_stag_tagWithSP2C(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_qos_action_stag_untag(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_qos_action_stag_transparent(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_qos_action_stag_nop(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_qos_action_ctag_tagDecision_tagDecision_cvidDecision_cvidDecision_cpriDecision_cpriDecision_cvid_cvid_cpri_cpri(cparser_context_t *context,
    uint32_t *tagDecision_ptr,
    uint32_t *cvidDecision_ptr,
    uint32_t *cpriDecision_ptr,
    uint32_t *cvid_ptr,
    uint32_t *cpri_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_qos_action_ctag_tagging_cvidDecision_cvidDecision_cpriDecision_cpriDecision_cvid_cvid_cpri_cpri(cparser_context_t *context,
    uint32_t *cvidDecision_ptr,
    uint32_t *cpriDecision_ptr,
    uint32_t *cvid_ptr,
    uint32_t *cpri_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_qos_action_ctag_tagWithC2S(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_qos_action_ctag_tagWithSP2C(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_qos_action_ctag_untag(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_qos_action_ctag_transparent(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_qos_action_ctag_nop(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_qos_action_ingress_vid_ingress_vid(cparser_context_t *context,
    uint32_t *ingress_vid_ptr);
cparser_result_t cparser_cmd_rg_set_acl_filter_action_qos_action_downstream_uni_portmask_portmask_portmask(cparser_context_t *context,
    uint32_t *portmask_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_pattern_etherType_etherType(cparser_context_t *context,
    uint32_t *etherType_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_pattern_gemidx_gemidx(cparser_context_t *context,
    uint32_t *gemidx_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_pattern_llid_llid(cparser_context_t *context,
    uint32_t *llid_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_pattern_outterTagVid_outterTagVid(cparser_context_t *context,
    uint32_t *outterTagVid_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_pattern_outterTagPri_outterTagPri(cparser_context_t *context,
    uint32_t *outterTagPri_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_pattern_internalPri_internalPri(cparser_context_t *context,
    uint32_t *internalPri_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_pattern_stagIf_stagIf(cparser_context_t *context,
    uint32_t *stagIf_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_pattern_ctagIf_ctagIf(cparser_context_t *context,
    uint32_t *ctagIf_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_pattern_uni_uni(cparser_context_t *context,
    uint32_t *uni_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_pattern_etherType_mask_etherType_mask(cparser_context_t *context,
    uint32_t *etherType_mask_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_pattern_gemidx_mask_gemidx_mask(cparser_context_t *context,
    uint32_t *gemidx_mask_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_pattern_uni_mask_uni_mask(cparser_context_t *context,
    uint32_t *uni_mask_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_upstream_action_stag_tagDecision_tagDecision_svidDecision_svidDecision_spriDecision_spriDecision_svid_svid_spri_spri(cparser_context_t *context,
    uint32_t *tagDecision_ptr,
    uint32_t *svidDecision_ptr,
    uint32_t *spriDecision_ptr,
    uint32_t *svid_ptr,
    uint32_t *spri_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_upstream_action_stag_tagWithTPID_svidDecision_svidDecision_spriDecision_spriDecision_svid_svid_spri_spri(cparser_context_t *context,
    uint32_t *svidDecision_ptr,
    uint32_t *spriDecision_ptr,
    uint32_t *svid_ptr,
    uint32_t *spri_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_upstream_action_stag_tagWith8100_svidDecision_svidDecision_spriDecision_spriDecision_svid_svid_spri_spri(cparser_context_t *context,
    uint32_t *svidDecision_ptr,
    uint32_t *spriDecision_ptr,
    uint32_t *svid_ptr,
    uint32_t *spri_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_upstream_action_stag_unTag(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_upstream_action_stag_transparent(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_upstream_action_ctag_tagDecision_tagDecision_cvidDecision_cvidDecision_cpriDecision_cpriDecision_cvid_cvid_cpri_cpri(cparser_context_t *context,
    uint32_t *tagDecision_ptr,
    uint32_t *cvidDecision_ptr,
    uint32_t *cpriDecision_ptr,
    uint32_t *cvid_ptr,
    uint32_t *cpri_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_upstream_action_ctag_tagging_cvidDecision_cvidDecision_cpriDecision_cpriDecision_cvid_cvid_cpri_cpri(cparser_context_t *context,
    uint32_t *cvidDecision_ptr,
    uint32_t *cpriDecision_ptr,
    uint32_t *cvid_ptr,
    uint32_t *cpri_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_upstream_action_ctag_tagWithC2S(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_upstream_action_ctag_unTag(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_upstream_action_ctag_transparent(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_upstream_action_fwd_fwdDecision_fwdDecision(cparser_context_t *context,
    uint32_t *fwdDecision_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_upstream_action_cfpri_cfpriDecision_cfpriDecision_cfpri_cfpri(cparser_context_t *context,
    uint32_t *cfpriDecision_ptr,
    uint32_t *cfpri_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_upstream_action_cfpri_cfpri(cparser_context_t *context,
    uint32_t *cfpri_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_upstream_action_dscp_dscpDecision_dscpDecision_dscp_dscp(cparser_context_t *context,
    uint32_t *dscpDecision_ptr,
    uint32_t *dscp_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_upstream_action_dscp_dscp(cparser_context_t *context,
    uint32_t *dscp_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_upstream_action_sid_sidDecision_sidDecision_sid_sid(cparser_context_t *context,
    uint32_t *sidDecision_ptr,
    uint32_t *sid_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_upstream_action_sid_sid(cparser_context_t *context,
    uint32_t *sid_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_upstream_action_drop(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_upstream_action_log_cntIdx(cparser_context_t *context,
    uint32_t *cntIdx_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_downstream_action_stag_tagDecision_tagDecision_svidDecision_svidDecision_spriDecision_spriDecision_svid_svid_spri_spri(cparser_context_t *context,
    uint32_t *tagDecision_ptr,
    uint32_t *svidDecision_ptr,
    uint32_t *spriDecision_ptr,
    uint32_t *svid_ptr,
    uint32_t *spri_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_downstream_action_stag_tagWithTPID_svidDecision_svidDecision_spriDecision_spriDecision_svid_svid_spri_spri(cparser_context_t *context,
    uint32_t *svidDecision_ptr,
    uint32_t *spriDecision_ptr,
    uint32_t *svid_ptr,
    uint32_t *spri_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_downstream_action_stag_tagWith8100_svidDecision_svidDecision_spriDecision_spriDecision_svid_svid_spri_spri(cparser_context_t *context,
    uint32_t *svidDecision_ptr,
    uint32_t *spriDecision_ptr,
    uint32_t *svid_ptr,
    uint32_t *spri_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_downstream_action_stag_tagWithSP2C(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_downstream_action_stag_unTag(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_downstream_action_stag_transparent(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_downstream_action_ctag_tagDecision_tagDecision_cvidDecision_cvidDecision_cpriDecision_cpriDecision_cvid_cvid_cpri_cpri(cparser_context_t *context,
    uint32_t *tagDecision_ptr,
    uint32_t *cvidDecision_ptr,
    uint32_t *cpriDecision_ptr,
    uint32_t *cvid_ptr,
    uint32_t *cpri_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_downstream_action_ctag_tagging_cvidDecision_cvidDecision_cpriDecision_cpriDecision_cvid_cvid_cpri_cpri(cparser_context_t *context,
    uint32_t *cvidDecision_ptr,
    uint32_t *cpriDecision_ptr,
    uint32_t *cvid_ptr,
    uint32_t *cpri_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_downstream_action_ctag_tagWithSP2C(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_downstream_action_ctag_unTag(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_downstream_action_ctag_transparent(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_downstream_action_fwd_fwdDecision_fwdDecision_fwdportmask_fwdportmask(cparser_context_t *context,
    uint32_t *fwdDecision_ptr,
    uint32_t *fwdportmask_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_downstream_action_cfpri_cfpriDecision_cfpriDecision_cfpri_cfpri(cparser_context_t *context,
    uint32_t *cfpriDecision_ptr,
    uint32_t *cfpri_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_downstream_action_cfpri_cfpri(cparser_context_t *context,
    uint32_t *cfpri_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_downstream_action_dscp_dscpDecision_dscpDecision_dscp_dscp(cparser_context_t *context,
    uint32_t *dscpDecision_ptr,
    uint32_t *dscp_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_downstream_action_dscp_dscp(cparser_context_t *context,
    uint32_t *dscp_ptr);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_downstream_action_drop(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_set_classify_filter_action_direction_downstream_action_uni_uniDecision_uniDecision_portmask_portmask(cparser_context_t *context,
    uint32_t *uniDecision_ptr,
    uint32_t *portmask_ptr);
cparser_result_t cparser_cmd_rg_del_intf_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_del_mac_entry_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_del_arp_entry_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_del_napt_connection_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_del_url_filter_url_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_rg_del_serverInLanAppsIpAddr_algType_algType(cparser_context_t *context,
    uint32_t *algType_ptr);
cparser_result_t cparser_cmd_rg_del_neighbor_entry_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_del_binding_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_del_macfilter_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_del_virtualServer_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_del_cvlan_vlanId_vlanId(cparser_context_t *context,
    uint32_t *vlanId_ptr);
cparser_result_t cparser_cmd_rg_del_upnpConnection_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_del_stormControl_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_del_multicastFlow_entry_flow_idx(cparser_context_t *context,
    uint32_t *flow_idx_ptr);
cparser_result_t cparser_cmd_rg_del_gatewayServicePort_entry_idx(cparser_context_t *context,
    uint32_t *idx_ptr);
cparser_result_t cparser_cmd_rg_del_naptFilterAndQos_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_del_gponDsBcFilter_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_del_gponDsBcFilter_entry_all(cparser_context_t *context);
cparser_result_t cparser_cmd_rg_del_interfaceMibCounter_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_rg_del_redirectHttpURL_url_url(cparser_context_t *context,
    char **url_ptr);
cparser_result_t cparser_cmd_rg_del_redirectHttpWhiteList_url_url_keyword_keyword(cparser_context_t *context,
    char **url_ptr,
    char **keyword_ptr);
cparser_result_t cparser_cmd_rg_del_acl_filter_entry_entry_index(cparser_context_t *context,
    uint32_t *entry_index_ptr);
cparser_result_t cparser_cmd_rg_del_classify_filter_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_pbo_init(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_init_gpon(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_init_gpon_us_page_size_128_256_512_ds_page_size_128_256_512(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_init_epon(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_init_epon_us_page_size_128_256_512_ds_page_size_128_256_512(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_set_stop_all_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_pbo_set_stop_all_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_set_dsc_runout_dram_dram_th_sram_sram_th(cparser_context_t *context,
    uint32_t *dram_th_ptr,
    uint32_t *sram_th_ptr);
cparser_result_t cparser_cmd_pbo_set_upstream_downstream_dsc_runout_dram_dram_th_sram_sram_th(cparser_context_t *context,
    uint32_t *dram_th_ptr,
    uint32_t *sram_th_ptr);
cparser_result_t cparser_cmd_pbo_set_upstream_downstream_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_set_upstream_downstream_counter_group_grp_sid_sid_all(cparser_context_t *context,
    uint32_t *grp_ptr,
    char **sid_ptr);
cparser_result_t cparser_cmd_pbo_set_downstream_sid2q_sid_sid_all_queue_normal0_normal1_high(cparser_context_t *context,
    char **sid_ptr);
cparser_result_t cparser_cmd_pbo_set_downstream_queue_scheduling_round_robin_strict_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_set_downstream_fc_ignore_start_stop_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_pbo_set_system_flowctrl_threshold_off_on_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_pbo_set_sid_sid_flowctrl_threshold_off_on_threshold_threshold(cparser_context_t *context,
    uint32_t *sid_ptr,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_pbo_set_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_get_stop_all_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_get_stop_all_state(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_get_dsc_runout(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_get_system_flowctrl_threshold_off_on_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_get_sid_sid_flowctrl_threshold_off_on_threshold(cparser_context_t *context,
    uint32_t *sid_ptr);
cparser_result_t cparser_cmd_pbo_get_state(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_get_status(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_get_used_page(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_get_flowcontrol_current(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_get_flowcontrol_latch(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_get_counter_group_grp(cparser_context_t *context,
    uint32_t *grp_ptr);
cparser_result_t cparser_cmd_pbo_get_downstream_sid2q_sid_sid_all(cparser_context_t *context,
    char **sid_ptr);
cparser_result_t cparser_cmd_pbo_get_downstream_queue_scheduling(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_get_downstream_fc_ignore_start_stop_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_clear_used_page(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_clear_upstream_downstream_used_page(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_clear_upstream_downstream_counter_group_group_all(cparser_context_t *context,
    char **group_ptr);
cparser_result_t cparser_cmd_pbo_clear_upstream_downstream_counter_pbo(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_clear_upstream_downstream_counter_ponnic(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_clear_flowcontrol_latch(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_clear_counter_group_group_all(cparser_context_t *context,
    char **group_ptr);
cparser_result_t cparser_cmd_pbo_clear_counter_pbo(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_clear_counter_ponnic(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_dump_counter_pbo(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_dump_counter_ponnic(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_dump_counter_group_group_all(cparser_context_t *context,
    char **group_ptr);
cparser_result_t cparser_cmd_pbo_dump_config_memory(cparser_context_t *context);
cparser_result_t cparser_cmd_pbo_reset_upstream_downstream_pbo(cparser_context_t *context);

#endif /* __CPARSER_TREE_H__ */
