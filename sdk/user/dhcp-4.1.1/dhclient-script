#!/bin/ash

ip=/bin/ip
route=/bin/route

make_resolv_conf() {  
  if [ x"$new_domain_name_servers" != x ]; then
    cat /dev/null > /etc/resolv.conf.dhclient
    chmod 644 /etc/resolv.conf.dhclient
    if [ x"$new_domain_search" != x ]; then
      echo search $new_domain_search >> /etc/resolv.conf.dhclient
    elif [ x"$new_domain_name" != x ]; then
      # Note that the DHCP 'Domain Name Option' is really just a domain
      # name, and that this practice of using the domain name option as
      # a search path is both nonstandard and deprecated.
      echo search $new_domain_name >> /etc/resolv.conf.dhclient
    fi
    for nameserver in $new_domain_name_servers; do
      echo nameserver $nameserver >>/etc/resolv.conf.dhclient
    done

    mv /etc/resolv.conf.dhclient /etc/resolv.conf  
  elif [ "x${new_dhcp6_name_servers}" != x ] ; then
    cat /dev/null > /var/resolv.conf.dhclient6
    chmod 644 /var/resolv.conf.dhclient6

    if [ "x${new_dhcp6_domain_search}" != x ] ; then
      echo search ${new_dhcp6_domain_search} >> /var/resolv.conf.dhclient6
    fi
    for nameserver in ${new_dhcp6_name_servers} ; do
    # Mason Yu.
      #echo nameserver ${nameserver} >> /var/resolv.conf.dhclient6
      if  grep -q ${nameserver} /var/resolv6.conf.${interface} ;then
        echo existed nameserver ${nameserver}
      else
        echo nameserver ${nameserver}
        echo ${nameserver} >> /var/resolv6.conf.${interface}
      fi
      ${route} -A inet6 add ${nameserver} dev ${interface}
    done
    #To update dnsmasq configuration
    kill -SIGUSR1 `cat /var/run/systemd.pid`
    
    # Mason Yu. The /var/resolv.conf is configuration for DNS relay.
    # If we support the DNSv6 relay, we must set the name server on  /var/resolv.conf.
    #mv /var/resolv.conf.dhclient6 /var/resolv.conf
  fi
}

# Must be used on exit.   Invokes the local dhcp client exit hooks, if any.
exit_with_hooks() {
  exit_status=$1
  if [ -f /etc/dhclient-exit-hooks ]; then
    . /etc/dhclient-exit-hooks
  fi
# probably should do something with exit status of the local script
  exit $exit_status
}

# Invoke the local dhcp client enter hooks, if they exist.
if [ -f /etc/dhclient-enter-hooks ]; then
  exit_status=0
  . /etc/dhclient-enter-hooks
  # allow the local script to abort processing of this state
  # local script must set exit_status variable to nonzero.
  if [ $exit_status -ne 0 ]; then
    exit $exit_status
  fi
fi

###
### DHCPv6 Handlers
###

if [ x$reason = xPREINIT6 ] ; then
  # Ensure interface is up.
  ${ip} link set ${interface} up

  # Remove any stale addresses from aborted clients.
  # Mason Yu
  #${ip} -f inet6 addr flush dev ${interface} scope global permanent
  #${ip} -f inet6 addr flush dev ${interface} scope global

  exit_with_hooks 0
fi

if [ x${old_ip6_prefix} != x ] || [ x${new_ip6_prefix} != x ] ; then
    echo Prefix ${reason} old=${old_ip6_prefix} new=${new_ip6_prefix}
  # Mason Yu
  make_resolv_conf
    exit_with_hooks 0
fi

if [ x$reason = xBOUND6 ] ; then
  if [ x${new_ip6_address} = x ] || [ x${new_ip6_prefixlen} = x ] ; then
    exit_with_hooks 2;
  fi

  ${ip} -f inet6 addr add ${new_ip6_address}/${new_ip6_prefixlen} \
  dev ${interface} scope global

  # Check for nameserver options.
  # Mason Yu
  make_resolv_conf

  exit_with_hooks 0
fi

if [ x$reason = xRENEW6 ] || [ x$reason = xREBIND6 ] ; then
  # Make sure nothing has moved around on us.

  # Nameservers/domains/etc.
  if [ "x${new_dhcp6_name_servers}" != "x${old_dhcp6_name_servers}" ] ||
     [ "x${new_dhcp6_domain_search}" != "x${old_dhcp6_domain_search}" ] ; then
    # Mason Yu
    make_resolv_conf
    echo "name server"
  fi

  exit_with_hooks 0
fi

if [ x$reason = xDEPREF6 ] ; then
  if [ x${new_ip6_prefixlen} = x ] ; then
    exit_with_hooks 2;
  fi

  ${ip} -f inet6 addr change ${new_ip6_address}/${new_ip6_prefixlen} \
       dev ${interface} scope global preferred_lft 0

  exit_with_hooks 0
fi

if [ x$reason = xEXPIRE6 -o x$reason = xRELEASE6 -o x$reason = xSTOP6 ] ; then
  if [ x${old_ip6_address} = x ] || [ x${old_ip6_prefixlen} = x ] ; then
    exit_with_hooks 2;
  fi

  ${ip} -f inet6 addr del ${old_ip6_address}/${old_ip6_prefixlen} \
  dev ${interface}

  exit_with_hooks 0
fi

exit_with_hooks 0

